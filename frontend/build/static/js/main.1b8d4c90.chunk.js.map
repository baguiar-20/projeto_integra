{"version":3,"sources":["assets/integra_logo.png","assets/preview.jpg","redux/actions/actions.js","redux/reducers/general_reducer.js","redux/reducers/profissionais_reducer.js","redux/reducers/administradores_reducer.js","redux/reducers/salas_reducer.js","redux/reducers/agendamentos_reducer.js","redux/reducers/logs_reducer.js","redux/store.js","DAO/administradorDAO.js","assets/component/inputText/input.jsx","assets/component/button/button.js","assets/component/checkbox/checkbox.js","assets/component/modoPaisagem/modoPaisagem.js","DAO/clienteDAO.js","assets/component/modals/modal_parent/modal.jsx","assets/component/modals/login/ForgotPasswordModal.jsx","assets/component/modals/login/TipoUsuarioModal/TipoUsuarioModal.jsx","pages/login/index.js","assets/component/cliente_topbar/Menu/Menu.jsx","assets/component/cliente_topbar/topbar.jsx","DAO/logDAO.js","DAO/reservaDAO.js","assets/AuxFunctions.js","assets/component/week_calendar/calendar.jsx","assets/component/sala/sala.jsx","assets/component/modals/cliente/modal_agendamento/tipos/horaAvulsa.jsx","assets/component/modals/cliente/modal_agendamento/tipos/turno.jsx","assets/component/modals/cliente/modal_agendamento/tipos/mensal.jsx","assets/component/modals/cliente/modal_agendamento/tipos/options.jsx","assets/component/modals/cliente/modal_agendamento/modalAgendamento.jsx","assets/modal_types.js","assets/component/modals/cliente/modal_detalhes_sala/detalhesSala.jsx","assets/component/alternating_tab/alt_tab.js","assets/component/Snack/snack.jsx","DAO/salaDAO.js","DAO/sala_bloqueioDAO.js","pages/cliente/agendamentos/index.js","assets/component/reserva_cliente/reserva_cliente.jsx","assets/component/cancel_checkbox/CancelCheckbox.jsx","pages/cliente/reservas/index.js","assets/component/hamburgerMenu/hamburgerMenu.js","assets/component/responsiveMenu/responsiveMenu.js","assets/component/adm_topbar/adm_topbar.jsx","assets/component/calendar_agendamentos/CalendarAgendamentos.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/hora_avulsa.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/turno.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/mensal.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/options.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/modal_new_agendamento_adm.jsx","assets/component/modals/administrativo/modal_edit_agendamento/EditAgendamento.jsx","pages/administrador/agendamentos/index.js","pages/administrador/dashboard/index.js","assets/component/card_log/cardLog.js","pages/administrador/logs/index.js","assets/component/card_profissional/cardProfissional.jsx","assets/component/Fab/Fab.jsx","assets/component/file_input/FileInput.js","assets/component/modals/administrativo/modal_new_profissional/modal_new_profissional.jsx","pages/administrador/profissionais/index.js","assets/component/card_administrativo/cardAdministrativo.jsx","assets/component/modals/administrativo/modal_new_administrativo/modal_new_administrativo.jsx","pages/administrador/administrativo/index.js","assets/component/card_sala/cardSala.jsx","assets/component/modals/administrativo/modal_new_salas/modal_new_salas.jsx","assets/component/modals/administrativo/modal_bloquear_sala/ModalBloquearSala.jsx","pages/administrador/salas/index.js","pages/login/resetPassword/resetPassword.js","pages/cliente/configuracoes/Configuracoes.jsx","pages/login/tipoUsuario.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Actions","setDatabase","setMongoClient","setUserLogged","showModal","closeModal","setProfissionais","setAdministrativo","setSalas","selectDate","selectSala","selectAgendamentos","setAgendamentos","selectAdministrador","selectProfissional","setLogs","setProfissionalReservas","setBloqueiosSalas","initialState","database","mongoClient","modalType","userLogged","dateSelected","Date","GeneralReducer","state","action","type","payload","profissionais","profissionalSelected","profissionalReservas","ProfissionaisReducer","administradores","administradorSelected","AdministradoresReducer","salas","bloqueiosSalas","salaSelected","SalasReducer","agendamentos","agendamentoSelected","AgendamentosReducer","logs","LogsReducer","Store","createStore","combineReducers","general","applyMiddleware","thunk","COLLECTION","administradorDAO","db","setDb","this","create","adm","console","log","collection","insertOne","update","query","changes","updateMany","$set","delete","deleteMany","findAll","find","toArray","addUser","client","email","password","clienteData","emailPasswordClient","auth","getProviderClient","UserPasswordAuthProviderClient","factory","length","alert","registerWithEmail","anonymousLogin","loginWithCredential","AnonymousCredential","userPasswordLogin","user","credentials","UserPasswordCredential","InputText","props","className","style","placeholder","onChange","step","required","disabled","defaultValue","name","label","Button","width","onClick","editing","loading","text","CheckBox","onCheck","React","useState","checked","setChecked","flexGrow","ModoPaisagem","clienteDAO","deleteOne","cliente","editCliente","id_cliente","edits","_id","login","sort","fixarSalaNoTopo","sala","sala_fixa","toString","updateOne","ModalParent","form","useRef","useEffect","current","setTimeout","reset","show","header","ref","onSubmit","encType","body","footer","connect","dispatch","onClose","close","color","onClickAdm","onClickProfissional","reservas","setLoading","modalForgotPassword","setModalForgotPassword","tipoUsuarioShow","setTipoUsuario","admArray","setAdmArray","clientesArray","setClientesArray","story","useHistory","performLogin","senha","a","clientes","push","errorCode","localStorage","getItem","matrix","Array","i","fill","iterador","moment","startOf","dataInicial","j","toDate","getDay","isSame","date","add","hist","e","preventDefault","target","sendResetPasswordEmail","value","alt","src","require","menuOpen","removeItem","setMenuOpen","nome","ocupacao","foto_url","logDAO","extendMoment","Moment","getStringDate","hour","format","checkIfIsBetween","actualDateBegin","actualDateEnds","dateOne","dateTwo","one","range","two","overlaps","reservaDAO","reserva","usuario","data_hora","cancelaReserva","id_reserva","cancelado","cancelaMuitasReservas","promises","Promise","all","executaReserva","executado","execucao_fim","pagaReserva","pago","editaReserva","comecaReserva","execucao_inicio","findReservaDeCliente","profissional_id","forEach","profissional","callFunction","getAgendamentosById","agendamento_id","agendamento","createHoraAvulsa","data","successCallback","failCallback","dateBegin","hora_inicio","dateFim","hora_fim","passed","dateInicioAgendamento","dateFimAgendamento","sala_id","getAgendamentosFromSala","array","checkIfURLIsImage","url","string","split","toLowerCase","transformStringToReais","toFixed","includes","replace","numberToHours","number","Reserva","days","agendamentosDaSala","setAgendamentosDaSala","selectedDate","subtract","map","day","index","locale","key","addReservaListener","isSameOrAfter","bloqueios","bloqueio","isArray","dia","wholeDay","verificarBloqueio","backgroundColor","display","margin","salaFixa","setSalaFixa","aluguelMensal","setMensal","mes","getMonth","verificaAluguelMensal","id","place","effect","aux","data-for","data-tip","data-iscapture","onClickDetalhesListener","isAdm","salaBloqueios","eSabado","selectOptions","horaInicial","isHoraFinal","setHoraInicial","horaFinal","setHoraFinal","horasFinais","setHorasFinais","bloqueioSelecionado","setBloqueio","getUTCDay","getHours","checkIfBlocked","classNamePrefix","options","horaFim","textAlign","horaInicio","valor_hora","optionsTurno","selectTurno","optionsMes","setOptionMes","meses","selectMes","marginLeft","marginRight","Options","selectedPage","selectPage","page","renderPage","selectedTurno","selectedMes","prepareData","Number","valorTotal","handleSubmit","novasReservas","then","res","ModalTypes","reservaCliente","detalhesSala","adicionarAdministrador","adicionarProfissional","adicionarAgendamentoAdm","adicionarSalas","adicionarAgendamento","bloquearSalas","editarAgendamento","fotos","descricao","AlternatingTab","elements","element","selectedIndex","to","count","getReservasAgendadas","salaDAO","sala_bloqueioDAO","salaBloqueio","openModal","open","selectedTab","selectTab","sortSalas","b","first","second","ReservaCliente","propTypes","PropTypes","func","isRequired","CancelCheckbox","agnds","cancelando","setCancelando","selectedReservas","selectReservas","handleConfirmCancelamento","window","confirm","reservasAvailable","filter","arrayValue","renderReservas","arrayExecutados","renderHistorico","HamburgerMenu","pages","pageName","pageLabel","ResponsiveMenu","pageSelected","history","Tab","selected","children","hambOpen","setHambOpen","horas","fillHoras","float","hora","indexSala","isOccupied","isMonthly","agnd","start","end","rowSpan","num","intervalBegin","intervalEnd","checkBloqueado","selectProf","profissionaisOptions","setProfissionaisOptions","prof","selectedProfissional","executing","setExecuting","finalizado","setFinalizado","setPago","updateAgendamentos","watcher","watch","onNext","change","agendamentosPendentes","setAgendamentosPendentes","setAgendamentosNaoCancelados","agendamentos_nao_cancelados","agendamentosCancelados","setAgendamentosCancelados","tabelaFreq","Object","keys","chart","am4core","am4charts","paddingRight","xAxes","renderer","grid","template","location","valueAxis","yAxes","tooltip","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","CardLog","FileInput","realUploadButton","createRef","fileName","setFileName","fileURL","setFileURL","files","URL","createObjectURL","onChangeFile","isURL","setURL","hidden","accept","click","urlName","profs","file","setFile","setEditing","fileUpload","formData","FormData","append","config","headers","post","newProfissional","telefone","editProfissional","removeProfissional","confirmar_senha","administrador","adms","unselectAdministrativo","newAdministrativo","editAdministrativo","removeAdministrativo","unselectSala","newSala","editSala","removeSala","salasOpcoes","setSalasOpcoes","fillHours","closeMenuOnSelect","handleChange","isMulti","setWholeDay","selectSalas","selectedSalas","$oid","newArray","getSalas","tokens","setTokens","token","qs","parse","search","ignoreQueryPrefix","tokenId","nova_senha","conf_senha","emailPassClient","resetPassword","marginTop","height","padding","checkAdm","App","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","setDatabaseIntoDAOs","store","path","exact","component","LoginPage","ClienteAgendamentos","MinhasReservasPage","AgendamentosAdministrador","DashboardPage","AdministrativoPage","ProfissionaisPage","tipoUsuario","SalasPage","Configuracoes","ResetPassword","LogsPage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b8d4c90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/integra_logo.ffdf0581.png\";","module.exports = __webpack_public_path__ + \"static/media/preview.0a0f74fa.jpg\";","const Actions = {\r\n    setDatabase: 'SET_DATABASE',\r\n    setMongoClient: 'SET_MONGO_CLIENT',\r\n    setUserLogged: 'SET_USER_LOGGED',\r\n    showModal: 'SHOW_MODAL',\r\n    closeModal: 'CLOSE_MODAL',\r\n    setProfissionais: 'SET_PROFISSIONAIS',\r\n    setAdministrativo: 'SET_ADMS',\r\n    setSalas: 'SET_SALAS',\r\n    selectDate: 'SELECT_DATE',\r\n    selectSala: 'SELECT_SALA',\r\n    selectAgendamentos: 'SELECT_AGENDAMENTO',\r\n    setAgendamentos: 'SET_AGENDAMENTOS',\r\n    selectAdministrador: 'SELECT_ADM',\r\n    selectProfissional: 'SELECT_PROF',\r\n    setLogs: 'SET_LOGS',\r\n    setProfissionalReservas: 'SET_PROF_RESERVAS',\r\n    setBloqueiosSalas: 'SET_BLOQ_SALAS',\r\n}\r\n\r\nexport default Actions;\r\n","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    database: null,\r\n    mongoClient: null,\r\n    modalType: '',\r\n    userLogged: {},\r\n    showModal: false,\r\n    dateSelected: new Date(),\r\n};\r\n\r\nconst GeneralReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.setMongoClient:\r\n            return {...state, mongoClient: action.payload};\r\n        case Actions.setDatabase:\r\n            return {...state, database: action.payload};\r\n        case Actions.setUserLogged:\r\n            return {...state, userLogged: action.payload};\r\n        case Actions.showModal:\r\n            return {...state, showModal: true, modalType: action.payload};\r\n        case Actions.closeModal:\r\n            return {...state, showModal: false};\r\n        case Actions.selectDate:\r\n            return {...state, dateSelected: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default GeneralReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    profissionais: [],\r\n    profissionalSelected: {},\r\n    //para ser usado somente no Cliente\r\n    profissionalReservas: [],\r\n}\r\n\r\nconst ProfissionaisReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setProfissionais:\r\n            return {...state, profissionais: payload};\r\n        case Actions.selectProfissional:\r\n            return {...state, profissionalSelected: payload};\r\n        case Actions.setProfissionalReservas:\r\n            return {...state, profissionalReservas: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProfissionaisReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    administradores: [],\r\n    administradorSelected: {},\r\n}\r\n\r\nconst AdministradoresReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setAdministrativo:\r\n            return {...state, administradores: payload};\r\n        case Actions.selectAdministrador:\r\n            return {...state, administradorSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AdministradoresReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    salas: [],\r\n    bloqueiosSalas: [],\r\n    salaSelected: {},\r\n}\r\n\r\nconst SalasReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setSalas:\r\n            return {...state, salas: payload};\r\n        case Actions.setBloqueiosSalas:\r\n            return {...state, bloqueiosSalas: payload}\r\n        case Actions.selectSala:\r\n            return {...state, salaSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SalasReducer;\r\n","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    salaSelected: {},\r\n    agendamentos: [],\r\n    agendamentoSelected: {},\r\n};\r\n\r\nconst AgendamentosReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.selectSala:\r\n            return {...state, salaSelected: payload};\r\n        case Actions.setAgendamentos:\r\n            return {...state, agendamentos: payload};\r\n        case Actions.selectAgendamentos:\r\n            return {...state, agendamentoSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AgendamentosReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    logs: [],\r\n};\r\n\r\nconst LogsReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setLogs:\r\n            return {...state, logs: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default LogsReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport GeneralReducer from \"./reducers/general_reducer\";\r\nimport ProfissionaisReducer from \"./reducers/profissionais_reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport AdministradoresReducer from \"./reducers/administradores_reducer\";\r\nimport SalasReducer from \"./reducers/salas_reducer\";\r\nimport AgendamentosReducer from \"./reducers/agendamentos_reducer\";\r\nimport LogsReducer from \"./reducers/logs_reducer\";\r\n\r\nconst Store = createStore(combineReducers({\r\n    general: GeneralReducer,\r\n    profissionais: ProfissionaisReducer,\r\n    administradores: AdministradoresReducer,\r\n    salas: SalasReducer,\r\n    agendamentos: AgendamentosReducer,\r\n    logs: LogsReducer,\r\n}, applyMiddleware(thunk)));\r\n\r\nexport default Store;","import {AnonymousCredential, UserPasswordAuthProviderClient, UserPasswordCredential} from 'mongodb-stitch-browser-sdk';\r\n\r\nconst COLLECTION = 'administradores';\r\n\r\n/*\r\n    foto_url: string,\r\n    login: string,\r\n    nome: string,\r\n    senha: string,\r\n */\r\n\r\nconst administradorDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(adm) {\r\n        console.log('created administrador');\r\n        return this.db.collection(COLLECTION).insertOne(adm);\r\n    },\r\n    update(query, changes) {\r\n        console.log('update administrador');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(query) {\r\n        console.log('delete administrador');\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll() {\r\n        console.log('find administrador');\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    },\r\n    async addUser(client, email, password, clienteData) {\r\n        console.log('add User');\r\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\r\n        try {\r\n            const array = await administradorDAO.find({email: email})\r\n            if (array.length > 0) {\r\n                alert('Administrador já existe com esse email.');\r\n            } else {\r\n                await emailPasswordClient.registerWithEmail(email, password);\r\n                return this.create({...clienteData, email});\r\n            }\r\n        } catch (e) {\r\n            alert('ATENÇÃO: Já existe um profissional com esse e-mail, ' +\r\n                'por favor, considere a SENHA do profissional já cadastrado. Essa conta agora terá ' +\r\n                'privilégios administrativos.')\r\n            return this.create({...clienteData, email});\r\n        }\r\n    },\r\n    anonymousLogin(client) {\r\n        console.log('Anonymous Login');\r\n        return client.auth.loginWithCredential(new AnonymousCredential());\r\n    },\r\n    find(query) {\r\n        console.log('Query administrador');\r\n        return this.db.collection(COLLECTION).find(query).toArray();\r\n    },\r\n    userPasswordLogin(client, user, password) {\r\n        console.log('User Password Login');\r\n        const credentials = new UserPasswordCredential(user, password);\r\n        return client.auth.loginWithCredential(credentials);\r\n    }\r\n};\r\n\r\nexport default administradorDAO;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.sass';\r\n\r\nconst InputText = props => {\r\n    return (\r\n        <div className={'input_text'} style={props.style}>\r\n            <input\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                step={'0.01'}\r\n                required={props.required}\r\n                disabled={props.disabled}\r\n                defaultValue={props.defaultValue}\r\n                type={props.type ? props.type : 'text'}\r\n                name={props.name ? props.name : ''} />\r\n            <label className={'label'}>{props.label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nInputText.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    defaultValue: PropTypes.string,\r\n    style: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            type={props.type}\r\n            style={props.width ? {width: props.width} : {}}\r\n            onClick={props.onClick}\r\n            editing={props.editing}\r\n            disabled={props.loading || props.editing}\r\n            className={(props.loading || props.editing) ?\r\n                'button '+props.className+' loading' : 'button '+props.className }>\r\n            { props.loading ? 'Carregando' : (props.editing ? 'Editando' : props.text)}\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    type: PropTypes.string,\r\n    width: PropTypes.string,\r\n    editing: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.sass\";\r\n\r\nconst CheckBox = ({onCheck = () => {}, label}) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'checkbox_container'}>\r\n            <div style={{flexGrow: 0}} className={checked ? 'checkbox checked' : 'checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n            </div>\r\n            <label>{label}</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\n\r\nconst ModoPaisagem = () => {\r\n    return (\r\n        <div className={'modo_paisagem'}>\r\n            <h2>Por favor, vire o seu celular! :(</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModoPaisagem;","import { UserPasswordCredential, UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nconst COLLECTION = 'clientes'\r\nconst clienteDAO = {\r\n    db: null,\r\n    setDb(db){\r\n        this.db = db;\r\n    },\r\n    async delete(query) {\r\n        console.log('delete cliente');\r\n        return this.db.collection(COLLECTION).deleteOne(query);\r\n    },\r\n    create(cliente){\r\n        console.log('create cliente');\r\n        return this.db.collection(COLLECTION).insertOne(cliente);\r\n    },\r\n    update(query, changes){\r\n        console.log('update cliente');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes});\r\n    },\r\n    editCliente(id_cliente, edits){\r\n        console.log('edit cliente');\r\n        return this.update({_id: id_cliente}, edits);\r\n    },\r\n    async addUser(client, email, password, clienteData){\r\n        console.log('add cliente user');\r\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\r\n        try {\r\n            await emailPasswordClient.registerWithEmail(email, password);\r\n        } catch (err) {\r\n            alert('O usuário de e-mail já foi definido e talvez deletado anteriormente. Para redefinir ' +\r\n                'senha, por favor, peça ao usuário que vá em \"Esqueceu sua Senha?\" na tela de Login.')\r\n        }\r\n        return this.create({ ...clienteData, email });\r\n    },\r\n    login(client, email, password){\r\n        console.log('login cliente');\r\n        return client.auth.loginWithCredential(new UserPasswordCredential(email, password));\r\n    },\r\n    findAll(){\r\n        console.log('find all clientes');\r\n        return this.db.collection(COLLECTION).find({}, {sort: {'nome': 1}}).toArray();\r\n    },\r\n    find(query) {\r\n        console.log('find query clientes');\r\n        return this.db.collection(COLLECTION).find(query).toArray();\r\n    },\r\n    fixarSalaNoTopo(sala, user) {\r\n        if (user.sala_fixa) {\r\n            if (user.sala_fixa.toString() === sala._id.toString()) {\r\n                return this.db.collection(COLLECTION).updateOne({_id: user._id}, {$set: {sala_fixa: null}})\r\n            }\r\n        }\r\n        return this.db.collection(COLLECTION).updateOne({_id: user._id}, {$set: {sala_fixa: sala._id}});\r\n    },\r\n};\r\nexport default clienteDAO;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst ModalParent = props => {\r\n\r\n    const form = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        if (form.current) {\r\n            setTimeout(() => {\r\n                if (form.current) {\r\n                    form.current.reset();\r\n                }\r\n            }, 300);\r\n        }\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div className={props.show ? 'modal_container' : 'modal_container hidden'}>\r\n            {props.header}\r\n            <form ref={form} onSubmit={props.onSubmit} encType={'multipart/form-data'}>\r\n                <div>\r\n                    {props.body}\r\n                </div>\r\n                {props.footer}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nModalParent.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func,\r\n    header: PropTypes.element,\r\n    body: PropTypes.element,\r\n    footer: PropTypes.element,\r\n    onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ModalParent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport ModalParent from \"../modal_parent/modal\";\r\nimport InputText from \"../../inputText/input\";\r\nimport Button from \"../../button/button\";\r\n\r\n\r\nconst ForgotPasswordModal = props => {\r\n\r\n    return (\r\n        <ModalParent\r\n            onSubmit={props.onSubmit} header={<header>\r\n            <div>\r\n                <h1>Recuperar Senha</h1>\r\n            </div>\r\n            <div className={'close_container'} onClick={props.onClose}>\r\n                <i className={'fa fa-times'}/>\r\n            </div>\r\n        </header>} show={props.show} close={props.onClose} body={<div>\r\n            <p style={{color: '#888'}}>Enviaremos para você um e-mail com link para redefinição.</p>\r\n            <InputText label={'Seu e-mail'} name={'email'}/>\r\n        </div>} footer={<div className={'footer'}>\r\n            <Button loading={props.loading} type={'submit'} text={'Confirmar'}/>\r\n        </div>}/>\r\n    );\r\n}\r\n\r\nForgotPasswordModal.propTypes = {};\r\n\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport ForgotPasswordModal from \"../ForgotPasswordModal\";\r\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport \"./TipoUsuarioModal.sass\"\r\n\r\nconst TipoUsuarioModal = props => {\r\n    return (\r\n        <ModalParent show={props.show}\r\n                     onClose={props.onClose}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>Tipo de Usuário</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={props.onClose}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={\r\n                         <div className={'tipos_usuarios'}>\r\n                             <div onClick={props.onClickAdm}>\r\n                                 <h1>Entrar como Administrador</h1>\r\n                             </div>\r\n                             <div onClick={props.onClickProfissional}>\r\n                                 <h1>Entrar como Profissional</h1>\r\n                             </div>\r\n                         </div>\r\n                     }/>\r\n    );\r\n}\r\n\r\nTipoUsuarioModal.propTypes = {\r\n    loading: PropTypes.bool,\r\n    onClose: PropTypes.func.isRequired,\r\n    show: PropTypes.func.isRequired,\r\n    onClickAdm: PropTypes.func.isRequired,\r\n    onClickProfissional: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TipoUsuarioModal);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../redux/actions/actions\";\r\nimport administradorDAO from \"../../DAO/administradorDAO\";\r\nimport './login.sass';\r\nimport InputText from \"../../assets/component/inputText/input\";\r\nimport Button from \"../../assets/component/button/button\";\r\nimport CheckBox from \"../../assets/component/checkbox/checkbox\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ModoPaisagem from \"../../assets/component/modoPaisagem/modoPaisagem\";\r\nimport clienteDAO from \"../../DAO/clienteDAO\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport ForgotPasswordModal from \"../../assets/component/modals/login/ForgotPasswordModal\";\r\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\";\r\nimport TipoUsuarioModal from \"../../assets/component/modals/login/TipoUsuarioModal/TipoUsuarioModal\";\r\n\r\nconst LoginPage = ({mongoClient, userLogged, setUserLogged}) => {\r\n\r\n    const [logged, setLogged] = React.useState(false);\r\n    const [loggedAdm, setLoggedAdm] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [modalForgotPassword, setModalForgotPassword] = React.useState(false)\r\n    const [tipoUsuarioShow, setTipoUsuario] = React.useState(false)\r\n\r\n    const [admArray, setAdmArray] = React.useState(null)\r\n    const [clientesArray, setClientesArray] = React.useState(null)\r\n\r\n    const story = useHistory()\r\n\r\n    const saveUserLogged = (email, pwd) => {\r\n        if (checked) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('pwd', pwd);\r\n            alert(\"Adicionado ao local storage\");\r\n        }\r\n    }\r\n\r\n    const performLogin = async (email, senha) => {\r\n        let [clientes, administradores] = [[], []];\r\n        setLoading(true);\r\n        try {\r\n            await clienteDAO.login(mongoClient, email, senha);\r\n            clientes = await clienteDAO.find({email: email});\r\n            administradores = await administradorDAO.find({email: email});\r\n            if (clientes.length > 0 && administradores.length > 0) {\r\n                setTipoUsuario(true)\r\n                setAdmArray(administradores)\r\n                setClientesArray(clientes)\r\n            } else if (clientes.length > 0) {\r\n                setUserLogged(clientes[0]);\r\n                story.push('/agendamentos')\r\n            } else if (administradores.length > 0) {\r\n                setUserLogged(administradores[0])\r\n                story.push('/agendamento_adm')\r\n            }\r\n            if (administradores.length <= 0 && clientes.length <= 0) {\r\n                alert('Erro interno. Por favor, contate os desenvolvedores.');\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            if (err.errorCode === 46) {\r\n                alert('Usuário ou senha inválidos.');\r\n            } else {\r\n                alert('Erro desconhecido! Log do erro ' + err);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let [email, senha] = [localStorage.getItem('email'), localStorage.getItem('pwd')];\r\n        if (mongoClient)\r\n            if (email && senha)\r\n                performLogin(email, senha);\r\n    }, [mongoClient]);\r\n\r\n    let matrix = new Array(5);\r\n    for (let i = 0; i < 5; i++) {\r\n        matrix[i] = new Array(7).fill(0);\r\n    }\r\n    let iterador = moment(new Date()).startOf('month');\r\n    let dataInicial = moment()\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n            if (iterador.toDate().getDay() === j && iterador.isSame(dataInicial, 'month')) {\r\n                matrix[i][j] = iterador.date();\r\n                iterador.add(1, 'day');\r\n            } else {\r\n                matrix[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(matrix);\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if ('nome' in userLogged) {\r\n            setLoading(true);\r\n            if ('ocupacao' in userLogged)\r\n                hist.push('/agendamentos');\r\n            else\r\n                hist.push('/agendamento_adm');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [userLogged]);\r\n\r\n    return (\r\n        <div className={'login_container'}>\r\n            <ModoPaisagem/>\r\n            <TipoUsuarioModal\r\n                show={tipoUsuarioShow}\r\n                onClose={() => setTipoUsuario(false)}\r\n                onClickAdm={() => {\r\n                    setUserLogged(admArray[0])\r\n                    story.push('/agendamento_adm')\r\n                }}\r\n                onClickProfissional={() => {\r\n                    setUserLogged(clientesArray[0])\r\n                    story.push('/agendamentos')\r\n                }}\r\n            />\r\n            <ForgotPasswordModal\r\n                onSubmit={async e => {\r\n                    e.preventDefault()\r\n                    const form = e.target;\r\n                    setLoading(true)\r\n                    try {\r\n                        await mongoClient\r\n                            .auth\r\n                            .getProviderClient(UserPasswordAuthProviderClient.factory)\r\n                            .sendResetPasswordEmail(form.email.value);\r\n                        alert('Por favor, cheque seu e-mail, enviamos um link para redefinição de senha.')\r\n                    } catch (e) {\r\n                        alert(e)\r\n                    }\r\n                    setModalForgotPassword(false)\r\n                    setLoading(false)\r\n                }}\r\n                loading={loading}\r\n                onClose={() => setModalForgotPassword(false)}\r\n                show={modalForgotPassword}/>\r\n            <div className={'ball'}/>\r\n            <div className={'logo_container'}>\r\n                <img\r\n                    alt={'integra_logo'}\r\n                    src={require('../../assets/integra_logo.png')}/>\r\n                <p>Sistema de Gerenciamento</p>\r\n            </div>\r\n            <div className={'login'}>\r\n                <h1>Login</h1>\r\n                <div className={'card'}>\r\n                    <form onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        await performLogin(e.target.email.value, e.target.senha.value);\r\n                        setLoading(false);\r\n                    }}>\r\n                        <InputText\r\n                            name={'email'}\r\n                            label={'E-mail'}\r\n                            placeholder={'Ex: joao@example.com'}/>\r\n                        <InputText\r\n                            name={'senha'}\r\n                            label={'Senha'}\r\n                            type={'password'}\r\n                            placeholder={'Informe sua senha'}/>\r\n                        <CheckBox\r\n                            onCheck={checked => {\r\n                                setChecked(!checked)\r\n                            }}\r\n                            label={'Manter-me Conectado'}/>\r\n                        <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                    </form>\r\n                </div>\r\n                <p onClick={() => setModalForgotPassword(true)} className={'forgot_pwd'}>Esqueceu sua senha?</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    database: state.general.database,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user =>\r\n        dispatch({type: Actions.setUserLogged, payload: user}),\r\n    //Para uso somente no login do cliente.\r\n    setProfissionalReservas: reservas =>\r\n        dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport \"./Menu.sass\"\r\nimport PropTypes from 'prop-types'\r\nimport {useHistory} from \"react-router\";\r\nimport Actions from \"../../../../redux/actions/actions\";\r\n\r\nconst Menu = props => {\r\n\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        props.setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    return (\r\n     <div className={props.menuOpen ? 'menu_container open' : 'menu_container'}>\r\n         <ul>\r\n             <li onClick={() => hist.push('/configuracoes')}>Configurações de Perfil</li>\r\n             <li onClick={() => logout()}>Sair</li>\r\n         </ul>\r\n     </div>\r\n );\r\n}\r\n\r\nMenu.propTypes = {\r\n    menuOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: userLogged => dispatch({type: Actions.setUserLogged, payload: userLogged})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"../button/button\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\nimport Menu from \"./Menu/Menu\";\r\n\r\nconst ClienteTopbar = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        props.setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    const [menuOpen, setMenuOpen] = React.useState(false)\r\n\r\n    return (\r\n        <div className={'topbar_container'}>\r\n            <div className={'img_container'}>\r\n                <img\r\n                    alt={'logo'}\r\n                    src={require('../../integra_logo.png')} />\r\n            </div>\r\n            <div className={'titulo'}>\r\n                <h2>Portal da Equipe</h2>\r\n                <h4>Agendamentos</h4>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>{props.userLogged ? props.userLogged.nome : 'Catherine Torres'}</h2>\r\n                    <h4>{props.userLogged ? props.userLogged.ocupacao : 'Fisioterapeuta'}</h4>\r\n                </div>\r\n            </div>\r\n            <img\r\n                alt={'profile_pic'}\r\n                className={'profile_pic'} src={\r\n                    props.userLogged ?\r\n                        props.userLogged.foto_url : 'https://randomuser.me/api/portraits/women/43.jpg'} />\r\n                        <Button\r\n                            onClick={() => {\r\n                                // logout();\r\n                                setMenuOpen(!menuOpen)\r\n                            }}\r\n                            width={'5%'}\r\n                            text={<i className={'fas ' + (menuOpen ? 'fa-chevron-up' : 'fa-chevron-down')}/>}\r\n                            className={'log-off'}/>\r\n                            <Menu menuOpen={menuOpen} />\r\n        </div>\r\n    )\r\n}\r\n\r\nClienteTopbar.propTypes = {\r\n    usuario: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteTopbar);\r\n","const COLLECTION = 'logs';\r\n\r\nconst logDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n      this.db = db;\r\n    },\r\n    create(log){\r\n        console.log('create login');\r\n        return this.db.collection(COLLECTION).insertOne(log);\r\n    },\r\n    findAll(){\r\n        console.log('find all logs');\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default logDAO;","import logDAO from \"./logDAO\";\r\nimport Moment from 'moment/min/moment-with-locales'\r\nimport {extendMoment} from \"moment-range\";\r\nconst COLLECTION = 'reservas'\r\n\r\nconst moment = extendMoment(Moment)\r\n\r\nconst getStringDate = (date, hour) => (`${moment(date).format('yyyy-MM-DD')} ${hour}:00`)\r\n\r\nconst checkIfIsBetween = (actualDateBegin, actualDateEnds, dateOne, dateTwo) => {\r\n    let one = moment.range(actualDateBegin, actualDateEnds);\r\n    let two = moment.range(dateOne, dateTwo);\r\n    return one.overlaps(two)\r\n}\r\n\r\nconst reservaDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(reserva, userLogged = null) {\r\n        if (userLogged) {\r\n            console.log('Create reserva');\r\n            logDAO.create({usuario: userLogged, log: 'Adicionou uma reserva', data_hora: new Date()})\r\n        }\r\n        return this.db.collection(COLLECTION).insertOne(reserva);\r\n    },\r\n    update(query, changes) {\r\n        console.log('Update reserva');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes});\r\n    },\r\n    cancelaReserva(id_reserva) {\r\n        console.log('Cancela reserva');\r\n        return this.update({_id: id_reserva}, {cancelado: true});\r\n    },\r\n    cancelaMuitasReservas(reservas) {\r\n        console.log('Cancela muita reserva');\r\n        const promises = [];\r\n        for (let i = 0; i < reservas.length; i++) {\r\n            promises.push(this.cancelaReserva(reservas[i]._id));\r\n        }\r\n        return Promise.all(promises);\r\n    },\r\n    executaReserva(id_reserva) {\r\n        console.log('Executa reserva');\r\n        return this.update({_id: id_reserva}, {executado: true, execucao_fim: new Date()});\r\n    },\r\n    pagaReserva(id_reserva, pago) {\r\n        console.log('Paga reserva');\r\n        return this.update({_id: id_reserva}, {pago: pago});\r\n    },\r\n    editaReserva(id_reserva, edits) {\r\n        console.log('Edita reserva');\r\n        return this.update({_id: id_reserva}, edits);\r\n    },\r\n    comecaReserva(id_reserva) {\r\n        console.log('Começa a executar a reserva');\r\n        return this.update({_id: id_reserva}, {execucao_inicio: new Date()});\r\n    },\r\n    findReservaDeCliente(profissional_id, reservas) {\r\n        console.log('Find Reserva de Cliente');\r\n        let profissionalReservas = [];\r\n        reservas.forEach(reserva => {\r\n            if (reserva.profissional) {\r\n                if (reserva.profissional._id.toString() === profissional_id.toString())\r\n                    profissionalReservas.push(reserva);\r\n            }\r\n        });\r\n        return profissionalReservas;\r\n    },\r\n    findAll(client) {\r\n        console.log('Find All de Cliente');\r\n        return client.callFunction('getAgendamentos');\r\n    },\r\n    getAgendamentosById(agendamentos, agendamento_id) {\r\n        let agendamentoSelected = null;\r\n        agendamentos.forEach(agendamento => {\r\n            if (agendamento._id.toString() === agendamento_id.toString()) {\r\n                agendamentoSelected = agendamento;\r\n            }\r\n        });\r\n        return agendamentoSelected;\r\n    },\r\n    async createHoraAvulsa(data, agendamentos, dateSelected, successCallback, failCallback) {\r\n            let dateBegin = new Date(getStringDate(dateSelected, data.hora_inicio))\r\n            let dateFim = new Date(getStringDate(dateSelected, data.hora_fim))\r\n            let passed = true\r\n            console.log(agendamentos)\r\n            console.log(data)\r\n            if (data.hora_inicio <= 0 || data.hora_fim <= 0) {\r\n                passed = false\r\n                failCallback()\r\n            } else {\r\n                for (let agendamento of agendamentos) {\r\n                    // Checagem de ERRO\r\n                    let dateInicioAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_inicio)),\r\n                        dateFimAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_fim))\r\n                    if (!agendamento.cancelado && agendamento.sala_id.toString() === data.sala_id.toString()) {\r\n                        if (checkIfIsBetween(dateBegin, dateFim, dateInicioAgendamento, dateFimAgendamento)) {\r\n                            passed = false\r\n                            failCallback()\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                if (passed) {\r\n                    successCallback()\r\n                }\r\n            }\r\n\r\n    },\r\n    getAgendamentosFromSala(agendamentos, sala) {\r\n        console.log('get Agendamentos da sala');\r\n        let array = [];\r\n        agendamentos.forEach(agendamento => {\r\n            if ('sala' in agendamento) {\r\n                if (sala.nome === agendamento.sala.nome) {\r\n                    array.push(agendamento);\r\n                }\r\n            }\r\n        });\r\n        return array;\r\n    }\r\n};\r\n\r\nexport default reservaDAO;\r\n","const checkIfURLIsImage = url => {\r\n    let string = url.split('.');\r\n    if (string.length > 0) {\r\n        return (string[string.length - 1].toLowerCase() === 'jpg' ||\r\n            string[string.length - 1].toLowerCase() === 'jpeg' ||\r\n            string[string.length - 1].toLowerCase() === 'gif' ||\r\n            string[string.length - 1].toLowerCase() === 'png');\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst transformStringToReais = string => {\r\n    if (typeof string == 'number') {\r\n        string = string.toFixed(2);\r\n    }\r\n    string = 'R$ ' + string;\r\n    if (string.includes('.') || string.includes(',')) {\r\n        string = string.replace('.', ',');\r\n    } else {\r\n        string = string + ',00';\r\n    }\r\n    return string;\r\n};\r\n\r\nconst transformReaisToFloat = string => {\r\n    string = string.replace(',', '.');\r\n    string = string.replace('R$ ', '');\r\n    return Number(string);\r\n};\r\n\r\nconst numberIsBetween = (number, start, end) => {\r\n    return (number >= start) && (number < end);\r\n}\r\n\r\nconst numberToHours = number => {\r\n    return number+\":00\";\r\n}\r\n\r\nconst removeElementFromArray = (arr, value) => {\r\n    const filter = (arrayValue) => {\r\n        return arrayValue !== value;\r\n    }\r\n    return arr.filter(filter);\r\n};\r\n\r\nconst findInArrayAndReturnIndex = (arr, key) => {\r\n    for (let i = 0; i < arr.length; i++)\r\n        if (arr[i] === key)\r\n            return i\r\n}\r\n\r\nconst sendToTopArray = (arr, key) => {\r\n    let first = key;\r\n    arr.sort(function(x,y){ return x === first ? -1 : y === first ? 1 : 0; });\r\n}\r\n\r\nexport {checkIfURLIsImage,\r\n    removeElementFromArray,\r\n    transformStringToReais,\r\n    transformReaisToFloat,\r\n    numberIsBetween,\r\n    numberToHours};","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport moment from \"moment/min/moment-with-locales.min\";\r\nimport {connect} from \"react-redux\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport {numberToHours} from \"../../AuxFunctions\";\r\n\r\nconst Reserva = props => {\r\n    return (\r\n        <div className={'reserva'}>\r\n            <i><h2>Reservado</h2></i>\r\n            <h4>{numberToHours(props.reserva.hora_inicio)} ~ {numberToHours(props.reserva.hora_fim)}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst days = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\r\n\r\nconst WeekCalendar = props => {\r\n\r\n    const [agendamentosDaSala, setAgendamentosDaSala] = React.useState([]);\r\n    const [selectedDate, selectDate] = React.useState(moment());\r\n\r\n    React.useEffect(() => {\r\n        setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n    }, [props.agendamentos]);\r\n\r\n    const verificarBloqueio = (date, sala, bloqueios) => {\r\n        for (let bloqueio of bloqueios) {\r\n            if (Array.isArray(bloqueio.sala)) {\r\n                for (let currentSala of bloqueio.sala) {\r\n                    if (currentSala.toString() === sala._id.toString()\r\n                    && moment(date).subtract(1, 'day').isSame(new Date(bloqueio.dia), 'day')\r\n                    && bloqueio.wholeDay) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else {\r\n                if (bloqueio.sala.toString() === sala._id.toString()\r\n                    && moment(date).isSame(new Date(bloqueio.dia), 'day')) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className={'container_week'}>\r\n            <div\r\n                onClick={() => {\r\n                    setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n                    selectDate(selectedDate.subtract(1, 'week'));\r\n                }}\r\n                className={selectedDate.isSame(new Date(), 'week') ? 'chevron hidden' : 'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-left'}/>\r\n                </p>\r\n            </div>\r\n            {days.map((day, index) => {\r\n\r\n                let date = moment(selectedDate.toDate()).locale('pt-BR').startOf('week').add(index, 'days');\r\n\r\n                return (\r\n                    <div\r\n                        key={day}\r\n                        className={'week_day'}>\r\n                        <h1 className={date.isSame(new Date(), 'day') ? 'today' : ''}>{day}</h1>\r\n                        <h3 className={date.isSame(new Date(), 'day') ? 'today' : ''}>{date.format('DD/MMM')}</h3>\r\n                        {\r\n                             (agendamentosDaSala.map((agendamento, index) => {\r\n                                if (date.isSame(agendamento.data, 'day') && !agendamento.cancelado) {\r\n                                    if ('mes' in agendamento) {\r\n                                        if (date.isSame(new Date(), 'day')) {\r\n                                            return (\r\n                                                <div\r\n                                                    onClick={() => props.addReservaListener(date)}\r\n                                                    className={'add'}>\r\n                                                    <span>+</span>\r\n                                                </div>\r\n                                            )\r\n                                        } else {\r\n                                            return <></>\r\n                                        }\r\n                                    }\r\n                                    return <Reserva key={index} reserva={agendamento}/>\r\n                                } else {\r\n                                    return <></>\r\n                                }\r\n                            }))\r\n                        }\r\n                        {\r\n                            date.isSameOrAfter(new Date(), 'day') ?\r\n                                verificarBloqueio(date, props.sala, props.bloqueiosSalas) ? <div\r\n                                style={{backgroundColor: 'transparent', display: 'flex'}}>\r\n                                    <i style={{color: '#CCC', margin: 'auto'}}>Sala Indisponível</i>\r\n                                </div> : (<div\r\n                                    onClick={() => props.addReservaListener(date)}\r\n                                    className={'add'}>\r\n                                    <span>+</span>\r\n                                </div>) : <></>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n            <div\r\n                onClick={() => {\r\n                    setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n                    selectDate(selectedDate.add(1, 'week'));\r\n                }}\r\n                className={selectedDate.isSame(moment().add(2, 'week'), 'week') ? 'chevron hidden' : 'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-right'}/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeekCalendar.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    sala: PropTypes.object,\r\n    addReservaListener: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    bloqueiosSalas: state.salas.bloqueiosSalas,\r\n});\r\n\r\nexport default connect(mapStateToProps)(WeekCalendar);\r\n","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport WeekCalendar from \"../week_calendar/calendar\";\r\nimport PropTypes from 'prop-types';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {connect} from \"react-redux\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\n\r\nconst Sala = props => {\r\n\r\n    const [salaFixa, setSalaFixa] = React.useState(false);\r\n    const [aluguelMensal, setMensal] = React.useState(false);\r\n\r\n    const verificaAluguelMensal = () => {\r\n        for (let i = 0; i < props.agendamentos.length; i++) {\r\n            if ('mes' in props.agendamentos[i]) {\r\n                if (props.agendamentos[i].sala_id.toString() === props.sala._id.toString()\r\n                    && props.agendamentos[i].mes.getMonth() === new Date().getMonth())\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (props.userLogged.sala_fixa && '_id' in props.sala) {\r\n            setSalaFixa(props.sala._id.toString() === props.userLogged.sala_fixa.toString());\r\n        }\r\n        setMensal(verificaAluguelMensal());\r\n    }, [props]);\r\n\r\n    return (\r\n        <div className={'sala_content'}>\r\n            <ReactTooltip id='main' place={'left'} type={'info'} effect={'solid'}/>\r\n            <div className={'sala_container'}>\r\n                <div>\r\n                    <h1>\r\n                        <span\r\n                            className={salaFixa ? 'fixa' : ''}\r\n                            onClick={async () => {\r\n                                if (salaFixa) {\r\n                                    await clienteDAO.fixarSalaNoTopo(props.sala, props.userLogged);\r\n                                    let aux = {...props.userLogged};\r\n                                    delete aux.sala_fixa\r\n                                    props.setUserLogged(aux);\r\n                                    setSalaFixa(false)\r\n                                } else {\r\n                                    await clienteDAO.fixarSalaNoTopo(props.sala, props.userLogged);\r\n                                    props.setUserLogged({...props.userLogged, sala_fixa: props.sala._id});\r\n                                    setSalaFixa(true)\r\n                                }\r\n                            }}\r\n                            data-for={'main'} data-tip={'Fixar no Topo'} data-iscapture={'true'}>\r\n                             <i className={'fas fa-thumbtack'}/> {'\\u00A0'}\r\n                        </span>\r\n                        {props.sala.nome}\r\n                    </h1>\r\n                    <p>Horários Reservados</p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        className={'btn_detalhes'}\r\n                        text={'Detalhes'}\r\n                        onClick={props.onClickDetalhesListener}/>\r\n                </div>\r\n            </div>\r\n            { aluguelMensal ?\r\n                <h2 className={'aluguel_mensal'}>Esta sala está alugada por todo o mês e não está disponível para agendamentos.</h2>\r\n                :\r\n                <WeekCalendar sala={props.sala} isAdm={props.isAdm} addReservaListener={props.addReservaListener}/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nSala.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    addReservaListener: PropTypes.func,\r\n    onClickDetalhesListener: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sala);\r\n","import React from 'react';\r\nimport Select from \"react-select\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../../AuxFunctions\";\r\nimport moment from 'moment'\r\n\r\nconst HoraAvulsaCliente = props => {\r\n\r\n    const eSabado = () => {\r\n        return (props.dateSelected.getDay() === 6);\r\n    }\r\n\r\n    const selectOptions = (horaInicial, isHoraFinal = false) => {\r\n        let array = [];\r\n        for (let i = horaInicial; i < (isHoraFinal ? (eSabado() ? 13 : 21 ) : (eSabado() ? 12 : 20)); i++) {\r\n            array.push({label: i+':00', value: i});\r\n        }\r\n        return array;\r\n    };\r\n    const [horaInicial, setHoraInicial] = React.useState(0);\r\n    const [horaFinal, setHoraFinal] = React.useState(0);\r\n    const [horasFinais, setHorasFinais] = React.useState(selectOptions(10, true));\r\n    const [bloqueioSelecionado, setBloqueio] = React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        setHoraInicial(0)\r\n        setHoraFinal(0)\r\n        setHorasFinais((props.dateSelected.getUTCDay() === new Date().getUTCDay())\r\n            ? selectOptions(new Date().getHours()+1, true) : selectOptions(10, true))\r\n        setBloqueio(checkIfBlocked())\r\n    }, [props.dateSelected, props.salaSelected])\r\n\r\n    const checkIfBlocked = () => {\r\n        console.log('here I am')\r\n        console.log(props.salaBloqueios)\r\n        if (Array.isArray(props.salaBloqueios)) {\r\n            console.log('here')\r\n            for (let bloqueio of props.salaBloqueios) {\r\n                if ( bloqueio.sala.toString() === props.salaSelected._id.toString()\r\n                    && moment(new Date(bloqueio.dia)).add(1, 'day').isSame( props.dateSelected, 'day'))\r\n                    return bloqueio\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={'horas_intervalo'}>\r\n                <div>\r\n                    <h2>Hora Inicial</h2>\r\n                    <Select\r\n                        name={'hora_inicio'}\r\n                        value={horaInicial === 0 ?  '' : {label: horaInicial+':00', value: horaInicial}}\r\n                        style={{width: '100px'}}\r\n                        onChange={e => {\r\n                            setHorasFinais((e) ? selectOptions(e.value + 1, true) : selectOptions(\r\n                                props.dateSelected.getUTCDay() === new Date().getUTCDay())\r\n                                ? selectOptions(new Date().getHours()+1) : selectOptions(9)\r\n                            )\r\n                            setHoraInicial((e) ? e.value : 0);\r\n                        }}\r\n                        classNamePrefix={'Select'}\r\n                        options={\r\n                            //Não deixar fazer reserva um horário anterior ao que já passou.\r\n                            (props.dateSelected.getUTCDay() === new Date().getUTCDay())\r\n                                ? selectOptions(new Date().getHours() + 1) : selectOptions(\r\n                                    bloqueioSelecionado ? bloqueioSelecionado.horaFim : 9\r\n                                )}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Hora Final</h2>\r\n                    <Select\r\n                        onChange={e => setHoraFinal((e) ? e.value : 0)}\r\n                        name={'hora_fim'}\r\n                        value={horaFinal === 0 ?  '' : {label: horaFinal+':00', value: horaFinal}}\r\n                        classNamePrefix={'Select'} options={horasFinais}/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {bloqueioSelecionado ? <p style={{textAlign: 'center', color: '#888'}}><b>Atenção</b>, a sala estará indisponível nesse\r\n                    dia das {bloqueioSelecionado.horaInicio}h às {bloqueioSelecionado.horaFim}h</p> : <></>}\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>{transformStringToReais(props.salaSelected.valor_hora)}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>{transformStringToReais(horaFinal === 0 ? 0 : props.salaSelected.valor_hora * (horaFinal - horaInicial))}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salaSelected: state.salas.salaSelected,\r\n    dateSelected: state.general.dateSelected,\r\n    salaBloqueios: state.salas.bloqueiosSalas,\r\n})\r\n\r\nexport default connect(mapStateToProps)(HoraAvulsaCliente);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TurnoCliente = props => {\r\n\r\n    const eSabado = () => (props.dateSelected.getDay() === 6)\r\n\r\n    const optionsTurno = eSabado() ?\r\n        [{label: '08:00h às 12:00h', value: { hora_inicio: 8, hora_fim: 12}}]\r\n        : [{\r\n        label: '08:00h às 13:00h', value: {\r\n            hora_inicio: 8,\r\n            hora_fim: 13,\r\n        },\r\n    }, {\r\n        label: '14:00h às 18:00h', value: {\r\n            hora_inicio: 14,\r\n            hora_fim: 18,\r\n        },\r\n    }, {\r\n        label: '15:00h às 19:00h', value: {\r\n            hora_inicio: 15,\r\n            hora_fim: 19,\r\n        },\r\n    }, {\r\n        label: '16:00h às 20:00h', value: {\r\n            hora_inicio: 16,\r\n            hora_fim: 20,\r\n        },\r\n    }];\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <h2>Duração do Turno</h2>\r\n                <Select\r\n                    onChange={e => props.selectTurno(e.value)}\r\n                    name={'hora_turno'}\r\n                    placeholder={'Selecione o Horário do Turno'}\r\n                    options={optionsTurno}/>\r\n                <div className={'resume_container'}>\r\n                    <div>\r\n                        <h2>Valor/Hora</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Valor Total:</h2>\r\n                        <h3>R$139,90</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTurnoCliente.propTypes = {\r\n    selectTurno: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TurnoCliente);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst MensalCliente = props => {\r\n\r\n    const [optionsMes, setOptionMes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let meses = [];\r\n        for (let i = 1; i < 4; i++)\r\n            meses.push({\r\n                label: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n                value: moment(new Date()).locale('pt-BR').add(i, 'month').toDate(),\r\n            });\r\n        setOptionMes(meses);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <h2>Mês a ser Solicitado</h2>\r\n                <Select\r\n                    onChange={e => {\r\n                        props.selectMes(e.value);\r\n                        console.log(e.value);\r\n                    }}\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Mês a ser solicitado'}\r\n                    options={optionsMes}/>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor Mensal:</h2>\r\n                    <h3>R$139,90</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MensalCliente);","import React from 'react';\r\nimport HoraAvulsaCliente from \"./horaAvulsa\";\r\nimport TurnoCliente from \"./turno\";\r\nimport MensalCliente from \"./mensal\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Options = ({selectedPage, selectPage, selectTurno, selectMes}) => {\r\n\r\n    const renderPage = page => {\r\n        switch (page) {\r\n            case 'Hora Avulsa':\r\n                return (<HoraAvulsaCliente />);\r\n            case 'Turno':\r\n                return (<TurnoCliente selectTurno={selectTurno}/>);\r\n            case 'Mensal':\r\n                return (<MensalCliente selectMes={selectMes}/>);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={'options'}>*/}\r\n            {/*    <div*/}\r\n            {/*        onClick={() => selectPage('Hora Avulsa')}*/}\r\n            {/*        className={(selectedPage === 'Hora Avulsa')*/}\r\n            {/*            ? 'option selected' : 'option'}>*/}\r\n            {/*        <p>Hora Avulsa</p>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div*/}\r\n            {/*        onClick={() => selectPage('Turno')}*/}\r\n            {/*        className={(selectedPage === 'Turno') ?*/}\r\n            {/*            'option selected' : 'option'}>*/}\r\n            {/*        <p>Turno</p>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div*/}\r\n            {/*        onClick={() => selectPage('Mensal')}*/}\r\n            {/*        className={(selectedPage === 'Mensal') ?*/}\r\n            {/*            'option selected' : 'option'}>*/}\r\n            {/*        <p>Mensal</p>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            {renderPage(selectedPage)}\r\n        </div>\r\n    );\r\n};\r\n\r\nOptions.propTypes = {\r\n    selectedPage: PropTypes.string.isRequired,\r\n    selectPage: PropTypes.func.isRequired,\r\n    selectTurno: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../../../button/button\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Options from \"./tipos/options\";\r\nimport {connect} from \"react-redux\";\r\nimport Moment from \"moment/min/moment-with-locales\";\r\nimport {extendMoment} from \"moment-range\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\n\r\nconst moment = extendMoment(Moment)\r\n\r\nconst ModalAgendamento = ({\r\n                              show,\r\n                              close,\r\n                              dateSelected,\r\n                              userLogged,\r\n                              salaSelected,\r\n                              setAgendamentos,\r\n                              mongoClient,\r\n                              agendamentos,\r\n                              setProfissionalReservas\r\n                          }) => {\r\n\r\n        const [loading, setLoading] = React.useState(false);\r\n        const [selectedPage, selectPage] = React.useState('Hora Avulsa');\r\n        const [selectedTurno, selectTurno] = React.useState({});\r\n        const [selectedMes, selectMes] = React.useState(null);\r\n\r\n        const checkIfIsBetween = (actualDateBegin, actualDateEnds, dateOne, dateTwo) => {\r\n            let one = moment.range(actualDateBegin, actualDateEnds);\r\n            let two = moment.range(dateOne, dateTwo);\r\n            return one.overlaps(two)\r\n        }\r\n\r\n        const prepareData = form => {\r\n            let data = {\r\n                profissional_id: userLogged._id,\r\n                sala_id: salaSelected._id,\r\n                data: dateSelected,\r\n                cancelado: false,\r\n                pago: false,\r\n                executado: false,\r\n            };\r\n            switch (selectedPage) {\r\n                case 'Hora Avulsa':\r\n                    return {\r\n                        ...data,\r\n                        hora_inicio: Number(form.hora_inicio.value),\r\n                        hora_fim: Number(form.hora_fim.value),\r\n                        valorTotal: Number((salaSelected.valor_hora *\r\n                            (Number(form.hora_fim.value) - Number(form.hora_inicio.value))).toFixed(2)),\r\n                    };\r\n                case 'Turno':\r\n                    return {\r\n                        ...data,\r\n                        ...selectedTurno,\r\n                        valorTotal: salaSelected.valor_hora * (selectedTurno.hora_fim - selectedTurno.hora_inicio)\r\n                    }\r\n                case 'Mensal':\r\n                    return {\r\n                        ...data,\r\n                        mes: selectedMes,\r\n                        valorTotal: 3500\r\n                    }\r\n            }\r\n        }\r\n\r\n        const getStringDate = (date, hour) => (`${moment(date).format('yyyy-MM-DD')} ${hour}:00`)\r\n\r\n        const handleSubmit = async e => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            setLoading(true);\r\n            let data = prepareData(form);\r\n            if (selectedPage === 'Hora Avulsa') {\r\n                await reservaDAO.createHoraAvulsa(data, agendamentos, dateSelected, async () => {\r\n                    await reservaDAO.create(data, userLogged);\r\n                    let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                    setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, novasReservas))\r\n                    setAgendamentos(novasReservas)\r\n                    setLoading(false);\r\n                    alert('Adicionado com sucesso!');\r\n                    close();\r\n                }, () => {\r\n                    alert(\"Erro! O horário já se encontra reservado ou horário inválido.\");\r\n                    setLoading(false)\r\n                    close();\r\n                })\r\n            } else if (selectedPage === 'Turno') {\r\n                let dateBegin = new Date(getStringDate(dateSelected, selectedTurno.hora_inicio))\r\n                let dateFim = new Date(getStringDate(dateSelected, selectedTurno.hora_fim))\r\n                let passed = true\r\n                for (let agendamento of agendamentos) {\r\n                    // Checagem de ERRO para AGENDAMENTO DE TURNO.\r\n                    let dateInicioAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_inicio)),\r\n                        dateFimAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_fim))\r\n\r\n                    if (checkIfIsBetween(dateBegin, dateFim, dateInicioAgendamento, dateFimAgendamento)) {\r\n                        alert(\"Erro! O horário já se encontra reservado.\");\r\n                        passed = false\r\n                        setLoading(false)\r\n                        close();\r\n                        break;\r\n                    }\r\n                }\r\n                if (passed) {\r\n                    await reservaDAO.create(data, userLogged);\r\n                    let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                    setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, novasReservas))\r\n                    setAgendamentos(novasReservas)\r\n                    setLoading(false);\r\n                    alert('Adicionado com sucesso!');\r\n                    close();\r\n                }\r\n            } else {\r\n                await reservaDAO.create(data, userLogged);\r\n                let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                setAgendamentos(novasReservas)\r\n                setLoading(false);\r\n                alert('Adicionado com sucesso!');\r\n                close();\r\n            }\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            if (mongoClient) {\r\n                reservaDAO.findAll(mongoClient).then(res => {\r\n                    setAgendamentos(res);\r\n                    if ('nome' in userLogged) {\r\n                        setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, res));\r\n                    }\r\n                });\r\n            }\r\n        }, [mongoClient]);\r\n\r\n        return (\r\n            <ModalParent show={show}\r\n                         onSubmit={handleSubmit}\r\n                         header={<header>\r\n                             <div>\r\n                                 <h1>Adicionar Reserva</h1>\r\n                                 <h3>\r\n                                     {moment(dateSelected).locale('pt-BR')\r\n                                         .format('DD [de] MMMM [de] YYYY')} - {salaSelected.nome}\r\n                                 </h3>\r\n                             </div>\r\n                             <div className={'close_container'} onClick={close}>\r\n                                 <i className={'fa fa-times'}/>\r\n                             </div>\r\n                         </header>}\r\n                         body={<div>\r\n                             <Options\r\n                                 selectedPage={selectedPage}\r\n                                 selectPage={selectPage}\r\n                                 selectMes={selectMes}\r\n                                 selectTurno={selectTurno}/>\r\n                         </div>}\r\n                         footer={\r\n                             <div className={'footer'}>\r\n                                 <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                             </div>}/>\r\n        )\r\n    }\r\n;\r\n\r\nModalAgendamento.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dateSelected: state.general.dateSelected,\r\n    salaSelected: state.salas.salaSelected,\r\n    userLogged: state.general.userLogged,\r\n    mongoClient: state.general.mongoClient,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAgendamento);\r\n","const ModalTypes = {\r\n    reservaCliente: 'RESERVA_CLIENTE',\r\n    detalhesSala: 'DETALHES_SALA',\r\n    adicionarAdministrador: 'ADD_ADM',\r\n    adicionarProfissional: 'ADD_PROF',\r\n    adicionarAgendamentoAdm: 'ADD_TASK_ADM',\r\n    adicionarSalas: 'ADD_SALAS',\r\n    adicionarAgendamento: 'ADD_AGENDAMENTO',\r\n    bloquearSalas: 'BLOCK_SALA',\r\n    editarAgendamento: 'EDIT_AGENDAMENTO_ADM',\r\n};\r\n\r\nexport default ModalTypes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport \"./styles.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalDetalhesSala = props => {\r\n\r\n\r\n    const renderImage = () => {\r\n        if ('fotos' in props.salaSelected)\r\n        {\r\n            return (\r\n                <div className={'carrousel'}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                    {props.salaSelected ? <img alt={''} src={props.salaSelected.fotos[0]}/> : <></>}\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <h1>Detalhes - {props.salaSelected.nome}</h1>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'modal_sala_body'}>\r\n                    {renderImage()}\r\n                <div className={'sala_details'}>\r\n                    <div>\r\n                        <h2>Valor/Hora:</h2>\r\n                        <h3>{transformStringToReais(props.salaSelected.valor_hora)}</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>No espaço contém:</h2>\r\n                        <h3>{props.salaSelected.descricao}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        />\r\n    )\r\n};\r\n\r\nModalDetalhesSala.propTypes = {\r\n    sala: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salaSelected: state.salas.salaSelected,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ModalDetalhesSala);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\n\r\nconst AlternatingTab = props => {\r\n    return (\r\n        <div className={'alternating_tabs'}>\r\n            {\r\n                props.elements.map((element, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={index === props.selectedIndex ? 'selected' : ''}\r\n                        onClick={element.onClick}>\r\n                        <h2>{element.name}</h2>\r\n                    </div>\r\n                ))\r\n            }\r\n            {(props.selectedIndex === 0) ? <Redirect to='agendamentos' /> : <></>}\r\n            {(props.selectedIndex === 1) ? <Redirect to='minhas_reservas' /> : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nAlternatingTab.propTypes = {\r\n    selectedIndex: PropTypes.number.isRequired,\r\n    elements: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AlternatingTab;\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Snack = props => {\r\n\r\n    const getReservasAgendadas = () => {\r\n        let count = 0;\r\n        props.profissionalReservas.forEach(reserva => {\r\n            if (!reserva.cancelado && !reserva.executado)\r\n                count++;\r\n        })\r\n        return count;\r\n    }\r\n    return (\r\n        <div className={'snack_container'}>\r\n            <h2>Você tem {getReservasAgendadas()} reservas agendadas</h2>\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionalReservas: state.profissionais.profissionalReservas,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Snack);","const COLLECTION = 'salas'\r\n\r\nconst salaDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(sala){\r\n        return this.db.collection(COLLECTION).insertOne(sala);\r\n    },\r\n    update(query, changes) {\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(query) {\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll() {\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default salaDAO;","const COLLECTION = 'sala_bloqueios'\r\n\r\nconst sala_bloqueioDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db\r\n    },\r\n    create(salaBloqueio){\r\n        return this.db.collection(COLLECTION).insertOne(salaBloqueio);\r\n\r\n    },\r\n    delete(query){\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n\r\n    },\r\n    findAll(){\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default sala_bloqueioDAO;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport Sala from \"../../../assets/component/sala/sala\";\r\nimport \"./agenda.sass\";\r\nimport ModalAgendamento from \"../../../assets/component/modals/cliente/modal_agendamento/modalAgendamento\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalDetalhesSala from \"../../../assets/component/modals/cliente/modal_detalhes_sala/detalhesSala\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ModoPaisagem from \"../../../assets/component/modoPaisagem/modoPaisagem\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport {useHistory} from \"react-router\";\r\nimport sala_bloqueioDAO from \"../../../DAO/sala_bloqueioDAO\";\r\n\r\nconst ClienteAgendamentos = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(0);\r\n\r\n    const story = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!('nome' in props.userLogged))\r\n            story.push('/');\r\n    })\r\n\r\n    const sortSalas = (a,b) => {\r\n        let [first, second] = [ a.nome.split(' '), b.nome.split(' ') ]\r\n        if (+first[1] > +second[1]) { return 1 }\r\n        if (+first[1] < +second[1]) { return -1 }\r\n        else return 0\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (clienteDAO.db && 'nome' in props.userLogged) {\r\n            salaDAO.findAll().then(res => {\r\n                if (props.userLogged.sala_fixa) {\r\n                    res.sort(sortSalas);\r\n                    // coloca no topo. Função Swap\r\n                    for (let i = 0; i < res.length; i++) {\r\n                        if (props.userLogged.sala_fixa.toString() === res[i]._id.toString()) {\r\n                            let aux = res[0]\r\n                            res[0] = res[i]\r\n                            res[i] = aux\r\n                        }\r\n                    }\r\n                } else {\r\n                    res.sort(sortSalas)\r\n                }\r\n                console.log(res)\r\n                props.setSalas(res);\r\n            });\r\n            sala_bloqueioDAO.findAll().then(res => {\r\n                props.setBloqueiosSalas(res)\r\n            })\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n                props.setProfissionalReservas(reservaDAO.findReservaDeCliente(props.userLogged._id, res));\r\n            });\r\n        }\r\n    }, [props.client, props.userLogged]);\r\n\r\n    return (\r\n        <div>\r\n            <ModoPaisagem/>\r\n            <ModalAgendamento\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.reservaCliente}\r\n            />\r\n            <ModalDetalhesSala\r\n                close={() => props.closeModal()}\r\n                show={props.showModal && props.modalType === ModalTypes.detalhesSala}\r\n            />\r\n            <ClienteTopbar/>\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => {\r\n                        selectTab(1)\r\n                    },\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_salas'}>\r\n                {\r\n                    props.salas.map((sala, index) => (\r\n                        <Sala\r\n                            sala={sala}\r\n                            key={index}\r\n                            onClickDetalhesListener={() => {\r\n                                props.selectSala(sala)\r\n                                props.openModal(ModalTypes.detalhesSala);\r\n                            }}\r\n                            addReservaListener={date => {\r\n                                props.selectDate(date.toDate());\r\n                                props.selectSala(sala);\r\n                                props.openModal(ModalTypes.reservaCliente)\r\n                            }}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    salas: state.salas.salas,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    salaBloqueios: state.salas.salaBloqueios,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    selectDate: date => dispatch({type: Actions.selectDate, payload: date}),\r\n    setBloqueiosSalas: bloqueios => dispatch({type: Actions.setBloqueiosSalas, payload: bloqueios}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteAgendamentos)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport moment from 'moment/min/moment-with-locales.min';\r\nimport {numberToHours} from \"../../AuxFunctions\";\r\n\r\nconst ReservaCliente = props => {\r\n    if (props.reserva.cancelado) {\r\n        return <></>\r\n    } else {\r\n        return (\r\n            <div className={props.executado ? 'container_reserva_cliente executado' : 'container_reserva_cliente'}>\r\n                <div>\r\n                    <h1>{moment(props.reserva.data).format('DD/MM/YYYY')}</h1>\r\n                    <h4>{'mes' in props.reserva ? (<i>Alugado por todo o Mês de {moment(props.reserva.mes).locale('pt-BR').format('MMMM')}</i>) :\r\n                        <div>{numberToHours(props.reserva.hora_inicio)} ~ {numberToHours(props.reserva.hora_fim)}</div>}</h4>\r\n                </div>\r\n                <div>\r\n                    <h4>Sala</h4>\r\n                    <h1>{'sala' in props.reserva ? props.reserva.sala.nome : 'Sem nome'}</h1>\r\n                </div>\r\n                <div>\r\n                    <h4>Situação</h4>\r\n                    <h2>{props.reserva.pago ? 'Pago' : 'Pendente'}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReservaCliente.propTypes = {\r\n    executado: PropTypes.bool,\r\n}\r\n\r\nexport default ReservaCliente;","import PropTypes from \"prop-types\";\r\nimport CheckBox from \"../checkbox/checkbox\";\r\nimport React from \"react\";\r\nimport './CancelCheckbox.sass';\r\n\r\nconst CancelCheckbox = ({ onCheck }) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'cancel_checkbox_container'}>\r\n            <div className={checked ? 'cancel_checkbox checked' : 'cancel_checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n                <i className={'fas fa-check'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CancelCheckbox;","import React from 'react';\r\nimport './reservas.sass';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ReservaCliente from \"../../../assets/component/reserva_cliente/reserva_cliente\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CancelCheckbox from \"../../../assets/component/cancel_checkbox/CancelCheckbox\";\r\nimport {removeElementFromArray} from \"../../../assets/AuxFunctions\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\n\r\nconst MinhasReservasPage = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(1);\r\n    const [cancelando, setCancelando] = React.useState(false);\r\n    const [selectedReservas, selectReservas] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!('nome' in props.userLogged)) {\r\n            hist.push('/');\r\n        }\r\n    });\r\n\r\n    const renderHistorico = () => {\r\n        let arrayExecutados = [];\r\n        props.profissionalReservas.forEach(reserva => {\r\n            if (reserva.executado)\r\n                arrayExecutados.push(reserva);\r\n        });\r\n        if (arrayExecutados.length > 0) {\r\n            return arrayExecutados.map((reserva, index) => (\r\n                <ReservaCliente reserva={reserva} executado key={index}/>\r\n            ))\r\n        } else {\r\n            return <h2 className={'empty_array'}>Não há agendamentos executados até o momento.</h2>\r\n        }\r\n    };\r\n\r\n    const handleConfirmCancelamento = async () => {\r\n        if (window.confirm(\"Você tem certeza que deseja cancelar esses agendamentos?\")) {\r\n            setLoading(true);\r\n            try {\r\n                await reservaDAO.cancelaMuitasReservas(selectedReservas);\r\n                const reservas = await reservaDAO.findAll(props.mongoClient);\r\n                props.setAgendamentos(reservas);\r\n                props.setProfissionalReservas(reservaDAO.findReservaDeCliente(props.userLogged._id, reservas));\r\n                alert(\"Cancelamento realizado com sucesso!\");\r\n            } catch (err) {\r\n                alert(\"Erro! Informações: \"+err);\r\n            }\r\n            setLoading(false);\r\n            setCancelando(false);\r\n        }\r\n    };\r\n\r\n    const renderReservas = () => {\r\n        let reservasAvailable = props.profissionalReservas.filter(reserva => {\r\n            return (!reserva.executado && !reserva.cancelado)\r\n        })\r\n        console.log(reservasAvailable)\r\n        if (reservasAvailable.length > 0) {\r\n            return reservasAvailable.map((reserva, index) => {\r\n                    return (\r\n                        <div className={cancelando ? 'flex flex_margin' : 'flex'}>\r\n                            {cancelando ? <CancelCheckbox onCheck={checked => {\r\n                                if (!checked) {\r\n                                    //Se estiver marcado\r\n                                    selectReservas([...selectedReservas, reserva]);\r\n                                } else {\r\n                                    // Se não estiver\r\n                                    selectReservas(removeElementFromArray(selectedReservas, reserva));\r\n                                }\r\n                            }}/> : <></>}\r\n                            <ReservaCliente reserva={reserva} key={index}/>\r\n                        </div>\r\n                    );\r\n            })\r\n        } else {\r\n            return <h2 className={'empty_array'}>Não há agendamentos marcados até o momento.</h2>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'reservas_page_container'}>\r\n            <ClienteTopbar/>\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => selectTab(1),\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_reservas'}>\r\n                <div className={'flex'}>\r\n                    <h1 className={'title'}>Minhas Reservas</h1>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setCancelando(!cancelando)\r\n                        }}\r\n                        className={'cancelar_agendamentos'}\r\n                        text={cancelando ? 'Parar Cancelamento' : 'Cancelar Agendamentos'}/>\r\n                </div>\r\n                {\r\n                    renderReservas()\r\n                }\r\n                {cancelando ? <Button\r\n                    onClick={handleConfirmCancelamento}\r\n                    text={'Confirmar Cancelamento'}\r\n                    loading={loading}\r\n                    className={'cancelar_button'} />: <></>}\r\n                <h1 className={'title'}>Histórico</h1>\r\n                {\r\n                    renderHistorico()\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n    mongoClient: state.general.mongoClient,\r\n    profissionalReservas: state.profissionais.profissionalReservas,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAgendamentos: agnds => dispatch({type: Actions.setAgendamentos, payload: agnds}),\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MinhasReservasPage);\r\n","import React from 'react';\r\nimport './hamburgerMenu.sass';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HamburgerMenu = props => {\r\n    return (\r\n        <div className={'hamburger_container'} onClick={props.onClick}>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nHamburgerMenu.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default HamburgerMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './responsiveMenu.sass';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst pages = [{\r\n    pageName: 'dashboard',\r\n    pageLabel: 'Dashboard',\r\n}, {\r\n    pageName: 'agendamento_adm',\r\n    pageLabel: 'Agendamentos',\r\n}, {\r\n    pageName: 'administrativo',\r\n    pageLabel: 'Administrativo',\r\n}, {\r\n    pageName: 'logs',\r\n    pageLabel: 'Logs'\r\n}, {\r\n  pageName: 'Salas',\r\n  pageLabel: 'Salas',\r\n}, {\r\n    pageName: 'profissionais',\r\n    pageLabel: 'Profissionais'\r\n},];\r\n\r\nconst ResponsiveMenu = ({pageSelected, onClick, open}) => {\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <div className={'responsive_menu ' + (open ? 'open': '')}>\r\n            <ul>\r\n                {pages.map((page, index) => (\r\n                    <li\r\n                        key={index}\r\n                        onClick={() => {\r\n                            onClick();\r\n                            history.push(page.pageName)\r\n                        }}\r\n                        className={pageSelected === page.pageName ? 'selected' : ''}>\r\n                        {page.pageLabel}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nResponsiveMenu.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n    open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ResponsiveMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport HamburgerMenu from \"../hamburgerMenu/hamburgerMenu\";\r\nimport ResponsiveMenu from \"../responsiveMenu/responsiveMenu\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport Button from \"../button/button\";\r\n\r\nconst Tab = props => {\r\n    const story = useHistory();\r\n\r\n    return (\r\n            <div onClick={() => {\r\n                story.push('/' + props.page);\r\n            }} className={'tab ' + (props.selected ? 'selected': '')}>\r\n                <p>{props.children}</p>\r\n\r\n            </div>\r\n    )\r\n};\r\n\r\nconst AdministradorTopbar = ({pageSelected, userLogged, setUserLogged}) => {\r\n\r\n    const [hambOpen, setHambOpen] = React.useState(false);\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className={'topbar_container topbar_container_adm'}>\r\n            <HamburgerMenu onClick={() => setHambOpen(true)}/>\r\n            <ResponsiveMenu open={hambOpen} pageSelected={pageSelected} onClick={() => setHambOpen(false)}/>\r\n            <div className={'img_container'}>\r\n                <img\r\n                    alt={'integra_logo'}\r\n                    src={require('../../integra_logo.png')}/>\r\n            </div>\r\n            <div className={'tabs'}>\r\n                <Tab\r\n                    page={'dashboard'}\r\n                    selected={pageSelected === 'dashboard'}>\r\n                    Dashboard\r\n                </Tab>\r\n                <Tab\r\n                    page={'agendamento_adm'}\r\n                    selected={pageSelected === 'agendamento_adm'}>\r\n                    Agendamentos\r\n                </Tab>\r\n                <Tab page={'profissionais'} selected={pageSelected === 'profissionais'}>Profissionais</Tab>\r\n                <Tab page={'administrativo'}  selected={pageSelected === 'administrativo'}>Administrativo</Tab>\r\n                <Tab page={'salas'}  selected={pageSelected === 'salas'}>Salas</Tab>\r\n                <Tab page={'logs'} selected={pageSelected === 'logs'}>Logs</Tab>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>{userLogged ? userLogged.nome : 'Catherine Torres'}</h2>\r\n                    <h4>Administrador</h4>\r\n                </div>\r\n            </div>\r\n            <img\r\n                alt={'profile_pic'}\r\n                className={'profile_pic'} src={userLogged ? userLogged.foto_url : 'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n            <Button\r\n                onClick={() => {\r\n                    logout();\r\n                }}\r\n                width={'5%'}\r\n                text={<i className={'fas fa-door-open'}/>}\r\n                className={'log-off'}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nAdministradorTopbar.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministradorTopbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./CalendarAgendamentos.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../modal_types\";\r\nimport {numberIsBetween} from \"../../AuxFunctions\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport Moment from \"moment/min/moment-with-locales\";\r\nimport {extendMoment} from \"moment-range\";\r\nimport sala_bloqueioDAO from \"../../../DAO/sala_bloqueioDAO\";\r\n\r\nconst moment = extendMoment(Moment)\r\n\r\nconst fillHoras = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 13; i++)\r\n        array.push({label: i + 9 + ':00', value: i + 9});\r\n    return array;\r\n}\r\n\r\nconst horas = fillHoras();\r\n\r\nconst CalendarAgendamentos = props => {\r\n\r\n    React.useEffect(() => {\r\n        sala_bloqueioDAO.findAll().then(res => {\r\n            props.setBloqueiosSalas(res)\r\n        })\r\n    }, [])\r\n\r\n    const checkIfItsBetween = (num, intervalBegin, intervalEnd) => {\r\n        return (num >= intervalBegin && num < intervalEnd)\r\n    }\r\n\r\n    const checkBloqueado = (bloqueios, sala, hora) => {\r\n        for (let bloqueio of bloqueios) {\r\n            if (Array.isArray(bloqueio.sala)) {\r\n                for (let currentSala of bloqueio.sala) {\r\n                    if (currentSala.toString() === sala._id.toString() &&\r\n                        moment(new Date(bloqueio.dia)).add(1, 'day').isSame(props.dateSelected, 'day')) {\r\n                        if (bloqueio.wholeDay) {\r\n                            return true\r\n                        } else if (checkIfItsBetween(hora, bloqueio.horaInicio, bloqueio.horaFim)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (bloqueio.sala.toString() === sala._id.toString() &&\r\n                    moment(new Date(bloqueio.dia)).isSame(props.dateSelected, 'day')) {\r\n                    if (bloqueio.wholeDay) {\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <div className={'calendar_agendamentos_container'}>\r\n            <h1>\r\n                <span\r\n                    onClick={() => {\r\n                        props.selectDate(moment(props.dateSelected).subtract(1, 'day').toDate())\r\n                    }}\r\n                    className={'chevron_date'}\r\n                    style={{float: 'left'}}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                </span>\r\n                {moment(props.dateSelected).locale('pt-BR').format(' DD MMMM YYYY')}\r\n                <span\r\n                    onClick={() => {\r\n                        props.selectDate(moment(props.dateSelected).add(1, 'day').toDate())\r\n                    }}\r\n                    className={'chevron_date'}\r\n                    style={{float: 'right'}}>\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </span>\r\n            </h1>\r\n            <div className={'container_table'}>\r\n                <table className={'calendar_table'}>\r\n                    {/*aqui vai a numeracao das salas*/}\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '10%'}}></th>\r\n                        {\r\n                            props.salas.map((sala, index) => <th key={index}>{sala.nome}</th>)\r\n                        }\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        horas.map((hora, index) => (\r\n                            <tr key={index}>\r\n                                <td>{hora.label}</td>\r\n                                {props.salas.map((sala, indexSala) => {\r\n                                    let agendamentosDaSala = reservaDAO.getAgendamentosFromSala(props.agendamentos, sala);\r\n                                    let [isOccupied, isMonthly] = [false, false];\r\n                                    let agnd = null;\r\n                                    agendamentosDaSala.forEach((agendamento, index) => {\r\n                                        if ('hora_inicio' in agendamento) {\r\n                                            if (numberIsBetween(hora.value, agendamento.hora_inicio, agendamento.hora_fim)\r\n                                                && (moment(props.dateSelected).isSame(new Date(agendamento.data), 'day'))\r\n                                                && !agendamento.cancelado) {\r\n                                                isOccupied = true;\r\n                                                agnd = agendamento;\r\n                                            }\r\n                                        } else if ('mes' in agendamento\r\n                                            && moment(agendamento[\"mes\"]).isSame(props.dateSelected, 'month')) {\r\n                                            isMonthly = true;\r\n                                        }\r\n                                    });\r\n                                    if (!isOccupied) {\r\n                                        if (isMonthly) {\r\n                                            return (<td key={indexSala} className={'alugado'}>\r\n                                                <i>Alugado Mensalmente</i>\r\n                                            </td>)\r\n                                        } else if (checkBloqueado(props.bloqueiosSalas, sala, hora.value)) {\r\n                                            return <td className={'alugado'} key={indexSala}>\r\n                                                <i>Bloqueada</i>\r\n                                            </td>\r\n                                        } else {\r\n                                            return (\r\n                                                <td key={indexSala} className={'free'} onClick={() => {\r\n                                                    props.openModal(ModalTypes.adicionarAgendamentoAdm);\r\n                                                    props.selectSala(sala);\r\n                                                }}>\r\n                                                    <i className={'fa fa-plus'}/>\r\n                                                </td>\r\n                                            )\r\n                                        }\r\n                                    } else if (agnd) {\r\n                                        if (isMonthly) {\r\n                                            return (<td key={indexSala} className={'occupied'}>\r\n                                                {agnd ? (agnd.profissional ? agnd.profissional.nome :\r\n                                                    <i>Usuário Excluído</i>) : ''}\r\n                                            </td>)\r\n                                        } else {\r\n                                            if (agnd.hora_inicio === hora.value) {\r\n                                                return (<td\r\n                                                    onClick={() => {\r\n                                                        props.openModal(ModalTypes.editarAgendamento);\r\n                                                        props.selectAgendamentos(agnd);\r\n                                                    }}\r\n                                                    key={indexSala}\r\n                                                    rowSpan={agnd.hora_fim - agnd.hora_inicio}\r\n                                                    className={'occupied'}>\r\n                                                    {agnd ? (agnd.profissional ? agnd.profissional.nome :\r\n                                                        <i>Usuário Excluído</i>) : ''}\r\n                                                </td>)\r\n                                            } else {\r\n                                                return <></>\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                })}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCalendarAgendamentos.propTypes = {\r\n    agendamentos: PropTypes.array,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salas: state.salas.salas,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    dateSelected: state.general.dateSelected,\r\n    bloqueiosSalas: state.salas.bloqueiosSalas,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectDate: date => dispatch({type: Actions.selectDate, payload: date}),\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    setBloqueiosSalas: bloqueios => dispatch({type: Actions.setBloqueiosSalas, payload: bloqueios}),\r\n    selectAgendamentos: agendamento => dispatch({type: Actions.selectAgendamentos, payload: agendamento}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarAgendamentos);\r\n","import React from 'react';\r\nimport Select from \"react-select\";\r\nimport Actions from \"../../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../../AuxFunctions\";\r\n\r\nconst HoraAvulsa = ({profissionais, selectProf, salaSelected, dateSelected}) => {\r\n\r\n    const eSabado = () => {\r\n        return (dateSelected.getDay() === 6);\r\n    }\r\n\r\n    const selectOptions = (horaInicial, isHoraFinal = false) => {\r\n        let array = [];\r\n        for (let i = horaInicial; i < (isHoraFinal ? (eSabado() ? 13 : 21 ) : (eSabado() ? 12 : 20)); i++) {\r\n            array.push({label: i+':00', value: i});\r\n        }\r\n        return array;\r\n    };\r\n\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n    const [horaInicial, setHoraInicial] = React.useState(0);\r\n    const [horaFinal, setHoraFinal] = React.useState(0);\r\n    const [horasFinais, setHorasFinais] = React.useState(selectOptions(9, true));\r\n    let selectedOption = null;\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        setProfissionaisOptions(array);\r\n    }, [profissionais]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    required\r\n                    name={'profissional'}\r\n                    onChange={e => { selectProf(e.value) }}\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Profissional'}\r\n                    options={profissionaisOptions}/>\r\n            </div>\r\n            <div className={'horas_intervalo'}>\r\n                <div>\r\n                    <h2>Hora Inicial</h2>\r\n                    <Select\r\n                        name={'hora_inicio'}\r\n                        onChange={e => {\r\n                            setHorasFinais(selectOptions(e.value + 1, true));\r\n                            setHoraInicial(e.value);\r\n                        }}\r\n                        classNamePrefix={'Select'}\r\n                        options={selectOptions(9)}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Hora Final</h2>\r\n                    <Select\r\n                        onChange={e => setHoraFinal(e.value)}\r\n                        name={'hora_fim'}\r\n                        classNamePrefix={'Select'} options={horasFinais}/>\r\n                </div>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>{transformStringToReais(salaSelected.valor_hora)}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>{transformStringToReais(horaFinal === 0 ? 0 : salaSelected.valor_hora * (horaFinal - horaInicial))}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    profissionais: state.profissionais.profissionais,\r\n    salaSelected: state.agendamentos.salaSelected,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n})\r\n\r\nexport default connect(mapStateToProps)(HoraAvulsa);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nconst Turno = props => {\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        props.profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        setProfissionaisOptions(array);\r\n    }, [props.profissionais]);\r\n\r\n    const optionsTurno = [{\r\n        label: '08:00h às 13:00h', value: '08:00h às 13:00h',\r\n    }, {\r\n        label: '14:00h às 18:00h', value: '14:00h às 18:00h',\r\n    }, {\r\n        label: '15:00h às 19:00h', value: '15:00h às 19:00h',\r\n    }, {\r\n        label: '16:00h às 20:00h', value: '16:00h às 20:00h',\r\n    }];\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    placeholder={'Profissional'}\r\n                    classNamePrefix={'Select'}\r\n                    options={profissionaisOptions}/>\r\n                <h2>Duração do Turno</h2>\r\n                <Select\r\n                    placeholder={'Selecione o Horário do Turno'}\r\n                    options={optionsTurno}/>\r\n                <div className={'resume_container'}>\r\n                    <div>\r\n                        <h2>Valor/Hora</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Valor Total:</h2>\r\n                        <h3>R$139,90</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Turno);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst Mensal = props => {\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n    const [optionsMes, setOptionMes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        props.profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        let meses = [];\r\n        for (let i = 0; i < 3; i++)\r\n            meses.push({\r\n                label: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n                value: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n            });\r\n        setOptionMes(meses);\r\n        setProfissionaisOptions(array);\r\n    }, [props.profissionais]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Profissional'}\r\n                    options={profissionaisOptions}/>\r\n                    <h2>Mês a ser Solicitado</h2>\r\n                <Select\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Mês a ser solicitado'}\r\n                    options={optionsMes}/>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>R$39,90</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>R$139,90</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Mensal);","import React from 'react';\r\nimport HoraAvulsa from \"./hora_avulsa\";\r\nimport Turno from \"./turno\";\r\nimport Mensal from \"./mensal\";\r\n\r\nconst Options = props => {\r\n\r\n    const [selectedPage, selectPage] = React.useState('Hora Avulsa');\r\n    const renderPage = page => {\r\n        switch (page) {\r\n            case 'Hora Avulsa':\r\n                return (<HoraAvulsa selectProf={props.selectProf}/>);\r\n            case 'Turno':\r\n                return (<Turno/>);\r\n            case 'Mensal':\r\n                return (<Mensal />);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={'options'}>\r\n                <div\r\n                    onClick={() => selectPage('Hora Avulsa')}\r\n                    className={(selectedPage === 'Hora Avulsa')\r\n                        ? 'option selected' : 'option'}>\r\n                    <p>Hora Avulsa</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Turno')}\r\n                    className={(selectedPage === 'Turno') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Turno</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Mensal')}\r\n                    className={(selectedPage === 'Mensal') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Mensal</p>\r\n                </div>\r\n            </div>\r\n            {renderPage(selectedPage)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../../../button/button\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Options from \"./tipos/options\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\n\r\nconst ModalAgendamentoAdm = ({show, close, mongoClient, dateSelected, salaSelected, userLogged, agendamentos, setAgendamentos}) => {\r\n\r\n    const [selectedProfissional, selectProf] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const profissional = selectedProfissional;\r\n        setLoading(true);\r\n        const data = {\r\n            profissional_id: profissional._id,\r\n            hora_inicio: Number(form.hora_inicio.value),\r\n            hora_fim: Number(form.hora_fim.value),\r\n            sala_id: salaSelected._id,\r\n            data: moment(dateSelected).toDate(),\r\n            valorTotal: Number((salaSelected.valor_hora * (Number(form.hora_fim.value) - Number(form.hora_inicio.value))).toFixed(2)),\r\n            cancelado: false,\r\n            pago: false,\r\n            executado: false,\r\n        }\r\n        if ('_id' in selectedProfissional) {\r\n            await reservaDAO.createHoraAvulsa(data, agendamentos, dateSelected, async () => {\r\n                await reservaDAO.create(data, userLogged);\r\n                let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                setAgendamentos(novasReservas)\r\n                setLoading(false);\r\n                alert('Adicionado com sucesso!');\r\n                close();\r\n            }, () => {\r\n                alert(\"Erro! O horário já se encontra reservado ou horário inválido.\");\r\n                setLoading(false)\r\n                close();\r\n            })\r\n        } else {\r\n            alert('Por favor, selecione um profissional.')\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={handleSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>Adicionar Reserva</h1>\r\n                             <h3>\r\n                                 {moment(dateSelected).locale('pt-BR')\r\n                                     .format('DD [de] MMMM [de] YYYY')} - {salaSelected.nome}\r\n                             </h3>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={close}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <Options selectProf={selectProf}/>\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nModalAgendamentoAdm.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    dateSelected: state.general.dateSelected,\r\n    salaSelected: state.agendamentos.salaSelected,\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAgendamentoAdm);\r\n\r\n","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Button from \"../../../button/button\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from 'moment/min/moment-with-locales.min';\r\nimport \"./EditAgendamento.sass\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\n\r\nconst ModalEditAgendamento = props => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [executing, setExecuting] = React.useState(false);\r\n    const [finalizado, setFinalizado] = React.useState(false);\r\n    const [pago, setPago] = React.useState(false);\r\n\r\n    const setSubtitle = () => {\r\n        if ('profissional' in props.agendamentoSelected) {\r\n            return props.agendamentoSelected.profissional.nome + ' - ' +\r\n                moment(props.dateSelected).locale('pt-BR').format('DD MMMM [de] YYYY');\r\n        }\r\n        return '';\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setExecuting(('execucao_inicio' in props.agendamentoSelected)\r\n            && !('execucao_fim' in props.agendamentoSelected));\r\n        setFinalizado(('execucao_inicio' in props.agendamentoSelected)\r\n            && ('execucao_fim' in props.agendamentoSelected));\r\n        setPago(props.agendamentoSelected.pago);\r\n    }, [props]);\r\n\r\n    const updateAgendamentos = async () => {\r\n        let agendamentos = await reservaDAO.findAll(props.mongoClient);\r\n        props.setAgendamentos(agendamentos);\r\n        props.selectAgendamentos(reservaDAO.getAgendamentosById(agendamentos, props.agendamentoSelected._id));\r\n    }\r\n\r\n    //Modal para fazer trocar pagamento, execução ou cancelar.\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <div>\r\n                    <h1>Editar Reserva</h1>\r\n                    <h3>{setSubtitle()}</h3>\r\n                </div>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'body_edit_agendamento'}>\r\n                <h2>Execução</h2>\r\n                <h3>\r\n                    {finalizado ? `Reserva já foi finalizada. Início às ${\r\n                            moment(props.agendamentoSelected.execucao_inicio).format('HH:mm')\r\n                        }, e fim às ${moment(props.agendamentoSelected.execucao_fim).format('HH:mm')}`\r\n                        : (executing ? 'Reserva está sendo executada' : 'Reserva ainda não executada')}\r\n                    <br/><br/>\r\n                    {\r\n                        finalizado ? <></> :\r\n                            <div style={{display: 'flex'}}>\r\n                                <Button\r\n                                    onClick={async () => {\r\n                                        setLoading(true);\r\n                                        if (executing) {\r\n                                            await reservaDAO.executaReserva(props.agendamentoSelected._id);\r\n                                            await updateAgendamentos();\r\n                                            alert('Execução Finalizada com Sucesso!');\r\n                                        } else {\r\n                                            await reservaDAO.comecaReserva(props.agendamentoSelected._id);\r\n                                            await updateAgendamentos();\r\n                                        }\r\n                                        setLoading(false);\r\n                                    }}\r\n                                    type={'button'}\r\n                                    text={'execucao_inicio' in props.agendamentoSelected ?\r\n                                        'Finalizar' : 'Iniciar'\r\n                                    }\r\n                                    loading={loading}\r\n                                    width={'30%'}/> &nbsp; &nbsp;\r\n                                <Button text={'Cancelar Reserva'}\r\n                                        width={'45%'}\r\n                                        onClick={async () => {\r\n                                            if (window.confirm('Tem certeza que deseja cancelar a reserva?')) {\r\n                                                await reservaDAO.cancelaReserva(props.agendamentoSelected._id)\r\n                                                props.close()\r\n                                            }\r\n                                        }}/>\r\n                            </div>\r\n                    }\r\n                </h3>\r\n                <h2>Pagamento</h2>\r\n                <h3>\r\n                    {pago ? 'Reserva já foi paga.' : 'Reserva ainda não foi paga.'} <br/><br/>\r\n                    {pago ? <></>\r\n                        : <Button\r\n                            onClick={async () => {\r\n                                setLoading(true);\r\n                                await reservaDAO.pagaReserva(props.agendamentoSelected._id, true);\r\n                                await updateAgendamentos();\r\n                                setLoading(false);\r\n                            }}\r\n                            loading={loading}\r\n                            type={'button'}\r\n                            text={'Pagar'}\r\n                            width={'45%'}/>}\r\n                    {pago ?\r\n                        <Button onClick={async () => {\r\n                            setLoading(true);\r\n                            await reservaDAO.pagaReserva(props.agendamentoSelected._id, false)\r\n                            await updateAgendamentos();\r\n                            setLoading(false)\r\n                        }} text={'Desfazer'}\r\n                                width={'45%'}/> : <></>}\r\n                </h3>\r\n            </div>}\r\n            footer={\r\n                <div className={'footer footer_edit_agendamento'}>\r\n                    {'sala' in props.agendamentoSelected ?\r\n                        <div className={'flex crud_ops'}>\r\n                            <Button text={'Cancelar'} type={'button'} onClick={async () => {\r\n                            }}/>\r\n                            <Button className={'submit'} loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                        </div> : <></>}\r\n                </div>\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    agendamentoSelected: state.agendamentos.agendamentoSelected,\r\n    dateSelected: state.general.dateSelected,\r\n    mongoClient: state.general.mongoClient,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAgendamentos: agnds => dispatch({type: Actions.setAgendamentos, payload: agnds}),\r\n    selectAgendamentos: agnd => dispatch({type: Actions.selectAgendamentos, payload: agnd}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditAgendamento);\r\n","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CalendarAgendamentos from \"../../../assets/component/calendar_agendamentos/CalendarAgendamentos\";\r\nimport './agendamentos.sass';\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalAgendamentoAdm\r\n    from \"../../../assets/component/modals/administrativo/modal_new_agendamento_adm/modal_new_agendamento_adm.jsx\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport logDAO from \"../../../DAO/logDAO\";\r\nimport {Redirect, useHistory} from \"react-router\";\r\nimport ModalEditAgendamento from \"../../../assets/component/modals/administrativo/modal_edit_agendamento/EditAgendamento\";\r\nimport sala_bloqueioDAO from \"../../../DAO/sala_bloqueioDAO\";\r\n\r\nconst AgendamentosAdministrador = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    const watcher = async () => {\r\n        const stream = await props.database.collection('reservas').watch()\r\n\r\n        stream.onNext((change) => {\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n            });\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.database) {\r\n            watcher().then(() => console.log('connection established'))\r\n        }\r\n    }, [props.database])\r\n\r\n    React.useEffect(() => {\r\n        if (clienteDAO.db) {\r\n            if ('ocupacao' in props.userLogged) {\r\n                hist.push('/');\r\n            }\r\n            clienteDAO.findAll().then(res => {\r\n                props.setProfissionais(res);\r\n            });\r\n\r\n            sala_bloqueioDAO.findAll().then(res => {\r\n                props.setBloqueiosSalas(res)\r\n            });\r\n\r\n            salaDAO.findAll().then(res => {\r\n                let array = res.sort((a,b) => {\r\n                    let [first, second] = [ a.nome.split(' '), b.nome.split(' ') ]\r\n                    if (+first[1] > +second[1]) { return 1 }\r\n                    if (+first[1] < +second[1]) { return -1 }\r\n                    else return 0\r\n                })\r\n                props.setSalas(array);\r\n            });\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n            });\r\n            logDAO.findAll().then(res => {\r\n                props.setLogs(res);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    return ('nome' in props.userLogged) ?\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'agendamento_adm'} />\r\n            <div className={'container_salas'}>\r\n                <ModalAgendamentoAdm\r\n                    close={() => props.closeModal()}\r\n                    show={props.showModal &&\r\n                    props.modalType === ModalTypes.adicionarAgendamentoAdm}\r\n                />\r\n                <ModalEditAgendamento\r\n                    close={() => props.closeModal()}\r\n                    show={props.showModal &&\r\n                    props.modalType === ModalTypes.editarAgendamento}\r\n                />\r\n                <CalendarAgendamentos/>\r\n            </div>\r\n        </div> : <Redirect to={'/'} />\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    database: state.general.database,\r\n    userLogged: state.general.userLogged,\r\n    client: state.general.mongoClient,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setProfissionais: prof => dispatch({type: Actions.setProfissionais, payload: prof}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n    setLogs: logs => dispatch({type: Actions.setLogs, payload: logs}),\r\n    setBloqueiosSalas: bloqueios => dispatch({type: Actions.setBloqueiosSalas, payload: bloqueios})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AgendamentosAdministrador);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport \"./dash.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport moment from \"moment\";\r\n\r\nconst DashboardPage = props => {\r\n    const [agendamentosPendentes, setAgendamentosPendentes] = React.useState([]);\r\n    const [agendamentosNaoCancelados, setAgendamentosNaoCancelados] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let agendamentos_nao_cancelados = []\r\n        for (let i = 0; i < props.agendamentos.length;i++) {\r\n            if(!props.agendamentos[i].cancelado && props.agendamentos[i].executado){\r\n                agendamentos_nao_cancelados.push(props.agendamentos[i]);\r\n            }\r\n        }\r\n        setAgendamentosPendentes(agendamentos_nao_cancelados)\r\n    }, [props])\r\n\r\n    const [agendamentosCancelados, setAgendamentosCancelados] = React.useState([]);\r\n    React.useEffect(() => {\r\n        let agendamentosCancelados = []\r\n        for (let i = 0; i < props.agendamentos.length;i++) {\r\n            if(props.agendamentos[i].cancelado){\r\n                agendamentosCancelados.push(props.agendamentos[i]);\r\n            }\r\n        }\r\n        setAgendamentosCancelados(agendamentosCancelados);\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n\r\n        setAgendamentosNaoCancelados(props.agendamentos.filter(value => !value.cancelado));\r\n        //Cria array com datas\r\n        let array = [];\r\n        let date = moment(\"2020/03/01\", \"YYYY/MM/DD\");\r\n        while (!moment(new Date()).isSame(date, 'day')) {\r\n            array.push({date: date.toDate(), value: 0});\r\n            date.add(1, 'day');\r\n        }\r\n\r\n        //Cria Frequency Table\r\n        let tabelaFreq = {};\r\n        props.agendamentos.forEach(agendamento => {\r\n            if (moment(new Date(agendamento.data)).format('DD/MM/YYYY') in tabelaFreq) {\r\n                tabelaFreq[moment(new Date(agendamento.data)).format('DD/MM/YYYY')] += 1;\r\n            } else {\r\n                tabelaFreq[moment(new Date(agendamento.data)).format('DD/MM/YYYY')] = 0;\r\n            }\r\n        });\r\n\r\n        //Criar o objeto de verdade {date: moment().toDate(), value: quantidadeDeAgendamentosDoDia }\r\n        Object.keys(tabelaFreq).forEach(key => {\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (moment(array[i].date).isSame(moment(key, 'DD/MM/YYYY'), 'day')) {\r\n                    array[i].value = tabelaFreq[key];\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        let chart = am4core.create('chart_agendamentos', am4charts.XYChart);\r\n\r\n        chart.paddingRight = 20;\r\n\r\n        chart.data = array;\r\n\r\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n\r\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = chart.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n\r\n        series.tooltipText = \"{valueY.value}\";\r\n        chart.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        chart.scrollbarX = scrollbarX;\r\n    }, []);\r\n\r\n\r\n    return (('nome' in props.userLogged) ? (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'dashboard'}/>\r\n            <div className={'indicators_container'}>\r\n                <div>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                    <h2>{agendamentosPendentes.length} reservas no mês</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>{agendamentosCancelados.length} reservas canceladas</h2>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                </div>\r\n            </div>\r\n            <div className={'bottom_column'}>\r\n                <div className={'agendamentos_chart_container'}>\r\n                    <h2>Agendamentos</h2>\r\n                    <div id={'chart_agendamentos'}/>\r\n                </div>\r\n                <div className={'quickdetails_container'}>\r\n                    <h2>Informações</h2>\r\n                    <h3>{props.profissionais.length} Novos Profissionais</h3>\r\n                    <h3>{props.agendamentos.length} agendamentos</h3>\r\n                    <h3>{props.profissionais.length + props.administradores.length} usuários cadastrados</h3>\r\n                    <h3>{agendamentosPendentes.length} agendamentos até o momento</h3>\r\n                    <h3>5 pacientes para profissionais</h3>\r\n                    <h3>{agendamentosCancelados.length} cancelamentos</h3>\r\n                </div>\r\n            </div>\r\n        </div>) : <Redirect to={'/'} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    userLogged: state.general.userLogged,\r\n    administradores: state.administradores.administradores\r\n});\r\n\r\nexport default connect(mapStateToProps)(DashboardPage);\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport moment from \"moment/min/moment-with-locales.min\";\r\n\r\nconst CardLog = props => {\r\n    return (\r\n        <div className={'card_log'}>\r\n            <img\r\n                alt={'Profile_pic'}\r\n                className={'profile_pic'} src={props.log.usuario.foto_url}/>\r\n            <div>\r\n                <h3>{props.log.usuario.nome}</h3>\r\n                <h1>{props.log.log}</h1>\r\n            </div>\r\n            <div>\r\n                <h4>{moment(new Date(props.log.data_hora)).locale('pt-BR').format(' DD/MM/YYYY HH:mm')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardLog;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardLog from \"../../../assets/component/card_log/cardLog\";\r\nimport \"./logs.sass\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst LogsPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    if ('ocupacao' in props.userLogged) {\r\n        hist.push('/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'logs'} />\r\n            <div className={'logs'}>\r\n                {\r\n                    (props.logs.length === 0) ?\r\n                        (<h2 style={{color: '#888'}}>Ainda não há logs para exibir.</h2>) :\r\n                        props.logs.map(log => (\r\n                            <CardLog log={log}/>\r\n                        ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    logs: state.logs.logs,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLogs: logs => dispatch({type: Actions.setLogs, payload: logs}),\r\n});\r\n\r\nexport default connect(mapStateToProps)(LogsPage);\r\n","import React from 'react';\r\nimport './styles.sass';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../button/button\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardProfissional = props => {\r\n    return (\r\n        <div className={'card_profissional'}>\r\n            <img\r\n                alt={'profissional_pic'}\r\n                src={props.profissional.foto_url}/>\r\n            <h2>{props.profissional.nome}</h2>\r\n            <h3>{props.profissional.ocupacao}</h3>\r\n            <Button text={'Informações'} onClick={ () => {\r\n                props.selectProfissional(props.profissional);\r\n                props.openModal(ModalTypes.adicionarProfissional);\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardProfissional.propTypes = {\r\n    profissional: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectProfissional: prof => dispatch({type: Actions.selectProfissional, payload: prof}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardProfissional);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Fab.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\n\r\nconst Fab = props => {\r\n    return (\r\n        <div className={props.open ? 'Fab open' : 'Fab'} onClick={() => {\r\n            props.onClick(props.open);\r\n            props.selectAdministrador();\r\n        } }>\r\n            <i className={'fa fa-plus'} />\r\n        </div>\r\n    );\r\n}\r\n\r\nFab.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectAdministrador: () => dispatch({type: Actions.selectAdministrador, payload: {}})\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Fab);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./FileInput.sass\";\r\nimport InputText from \"../inputText/input\";\r\n\r\nconst FileInput = props => {\r\n\r\n    const url = 'https://teste.integracps.com.br/uploads/';\r\n\r\n    let realUploadButton = React.createRef();\r\n    const [fileName, setFileName] = React.useState('Nenhum arquivo selecionado.');\r\n    const [fileURL, setFileURL] = React.useState('');\r\n    const onChange = e => {\r\n        // Verifica se é URL ou Arquivo\r\n        if (e.target.files) {\r\n            if (e.target.files[0]) {\r\n                setFileName(e.target.files[0].name);\r\n                setFileURL(URL.createObjectURL(e.target.files[0]))\r\n                props.onChangeFile(e.target.files[0], url + e.target.files[0].name);\r\n            } else {\r\n                setFileURL('');\r\n                setFileName('Nenhum arquivo selecionado.');\r\n            }\r\n        } else {\r\n            props.onChangeFile(null, e.target.value);\r\n            setFileURL(e.target.value);\r\n        }\r\n    }\r\n\r\n    const [isURL, setURL] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'preview_input_container'}>\r\n            <div className={'file_input_container'}>\r\n                <img\r\n                    alt={'Preview'}\r\n                    src={fileURL === '' ? require('../../preview.jpg') : fileURL}/>\r\n                <input type={'file'}\r\n                       name={props.fileName}\r\n                       id={'real_file'}\r\n                       onChange={onChange}\r\n                       hidden\r\n                       accept={'image/png, image/jpeg, image/jpg, image/gif'}\r\n                       ref={realUploadButton}/>\r\n                <div className={'buttons'}>\r\n                    <button\r\n                        disabled={isURL}\r\n                        onClick={() => setURL(true)}\r\n                        className={isURL ? 'button_secondary selected' : 'button_secondary'}>\r\n                        URL\r\n                    </button>\r\n                    <button disabled={!isURL}\r\n                            onClick={() => setURL(false)}\r\n                            className={!isURL ? 'button_secondary selected' : 'button_secondary'}>\r\n                        Arquivo\r\n                    </button>\r\n                </div>\r\n                <div className={'arquivo_upload'} style={!isURL ? {} : {display: 'none'}}>\r\n                    <button type={'button'} onClick={() => {\r\n                        realUploadButton.current.click();\r\n                    }}>\r\n                        <i className={'fa fa-upload'}/>\r\n                    </button>\r\n                    <span>{fileName}</span>\r\n                </div>\r\n                <InputText\r\n                    name={props.urlName}\r\n                    style={!isURL ? {display: 'none'} : {width: '100%'}}\r\n                    label={'URL da foto'}\r\n                    onChange={onChange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFileInput.propTypes = {\r\n    onChangeFile: PropTypes.func,\r\n    data: PropTypes.any,\r\n    setData: PropTypes.func,\r\n    fileName: PropTypes.string.isRequired,\r\n    urlName: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default FileInput;","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./modal_new_profissional.sass\";\r\nimport clienteDAO from \"../../../../../DAO/clienteDAO\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport {post} from 'axios';\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalNewProfissional = ({\r\n                                  show,\r\n                                  close,\r\n                                  mongoClient,\r\n                                  closeModal,\r\n                                  setProfissionais,\r\n                                  profissionalSelected,\r\n                                  selectProfissional,\r\n                              }) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newProfissional = async form => {\r\n        if (fileURL === '') {\r\n            try {\r\n                await clienteDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                    nome: form.nome.value,\r\n                    telefone: form.telefone.value,\r\n                    ocupacao: form.ocupacao.value,\r\n                    descricao: form.descricao.value,\r\n                    foto_url: 'https://jsl-online.com/wp-content/uploads/2017/01/placeholder-user.png',\r\n                    email: form.email.value,\r\n                });\r\n                setProfissionais(await clienteDAO.findAll());\r\n                alert('Profissional Adicionado com Sucesso!')\r\n            } catch(e) {\r\n                alert(e)\r\n            }\r\n        } else {\r\n            if (checkIfURLIsImage(fileURL)) {\r\n                try {\r\n                    await fileUpload(file);\r\n                    await clienteDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                        nome: form.nome.value,\r\n                        telefone: form.telefone.value,\r\n                        ocupacao: form.ocupacao.value,\r\n                        descricao: form.descricao.value,\r\n                        foto_url: fileURL,\r\n                        email: form.email.value,\r\n                    });\r\n                    setProfissionais(await clienteDAO.findAll());\r\n                    alert('Profissional Adicionado com Sucesso!')\r\n                } catch (err) {\r\n                    alert(err);\r\n                }\r\n            } else {\r\n                alert('Informe uma imagem válida acima. Caso não queira adicionar uma imagem, deixe o campo em branco.');\r\n            }\r\n        }\r\n    }\r\n\r\n    const editProfissional = async form => {\r\n        try {\r\n            await clienteDAO.update({_id: profissionalSelected._id}, {\r\n                nome: form.nome.value,\r\n                telefone: form.telefone.value,\r\n                ocupacao: form.ocupacao.value,\r\n                descricao: form.descricao.value,\r\n                email: form.email.value,\r\n            });\r\n            const profs = await clienteDAO.findAll();\r\n            setProfissionais(profs);\r\n            selectProfissional();\r\n            alert('Profissional editado com Sucesso!')\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    const removeProfissional = async () => {\r\n        try {\r\n            await clienteDAO.delete({_id: profissionalSelected._id})\r\n            const profs = await clienteDAO.findAll();\r\n            setProfissionais(profs);\r\n            alert('Profissional removido com sucesso');\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const form = e.target;\r\n        if (!editing) {\r\n            if (form.senha.value !== form.confirmar_senha.value) {\r\n                alert('Confirmação de senha não é igual a senha definida.')\r\n            } else if (form.senha.value.length < 6 && form.senha.value.length > 128) {\r\n                alert('A senha necessita conter entre 6 e 128 caracteres.')\r\n            } else {\r\n                await newProfissional(form);\r\n                selectProfissional();\r\n                setEditing(false);\r\n                form.reset();\r\n                closeModal();\r\n            }\r\n        } else {\r\n            await editProfissional(form);\r\n            selectProfissional();\r\n            setEditing(false);\r\n            form.reset();\r\n            closeModal();\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={onSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>{'nome' in profissionalSelected ? 'Informações do Profissional' : 'Adicionar Profissional'}</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={() => {\r\n                             close();\r\n                             selectProfissional();\r\n                             setEditing(false);\r\n                         }}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <FileInput\r\n                             onChangeFile={(file, url) => {\r\n                                 setFile(file);\r\n                                 setFileURL(url);\r\n                             }}\r\n                             urlName={'foto_url'}\r\n                             fileName={'userfile'}/>\r\n                         <InputText\r\n                             disabled={'nome' in profissionalSelected && !editing}\r\n                             defaultValue={profissionalSelected.nome}\r\n                             required={true}\r\n                             name={'nome'} label={'Nome'}/>\r\n                         <div className={'flex'}>\r\n                             <InputText\r\n                                 disabled={'nome' in profissionalSelected && !editing}\r\n                                 defaultValue={profissionalSelected.telefone}\r\n                                 required={true}\r\n                                 name={'telefone'}\r\n                                 label={'Telefone'}/>\r\n                             <InputText\r\n                                 disabled={'nome' in profissionalSelected && !editing}\r\n                                 defaultValue={profissionalSelected.ocupacao}\r\n                                 name={'ocupacao'}\r\n                                 label={'Ocupação'}/>\r\n                         </div>\r\n                         <InputText\r\n                             required={true}\r\n                             disabled={'nome' in profissionalSelected && !editing}\r\n                             defaultValue={profissionalSelected.descricao}\r\n                             name={'descricao'} label={'Descrição'}/>\r\n                         <InputText name={'email'}\r\n                                    required={true}\r\n                                    disabled={'nome' in profissionalSelected && !editing}\r\n                                    defaultValue={profissionalSelected.email}\r\n                                    label={'Email'}\r\n                                    placeholder={'E-mail utilizado para Login'}/>\r\n                         {\r\n                             'email' in profissionalSelected ? <></> :\r\n                                 (\r\n                                     <div className={'flex'}>\r\n                                         <InputText label={'Senha'} name={'senha'} type={'password'} required={true} />\r\n                                         <InputText name={'confirmar_senha'} label={'Confirmar Senha'} type={'password'} required={true}/>\r\n                                     </div>)\r\n                         }\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             {'nome' in profissionalSelected ?\r\n                                 <div className={'flex crud_ops'}>\r\n                                     <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                                         if (window.confirm(\"Tem certeza que deseja apagar esse profissional do sistema?\")) {\r\n                                             await removeProfissional();\r\n                                             closeModal();\r\n                                             selectProfissional()\r\n                                             setEditing(false);\r\n                                         }\r\n                                     }}/>\r\n                                     <Button editing={editing}\r\n                                             onClick={() => setEditing(true)}\r\n                                             text={'Editar'}\r\n                                             type={'button'}/>\r\n                                 </div> : <></>}\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    profissionalSelected: state.profissionais.profissionalSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setProfissionais: profs => dispatch({type: Actions.setProfissionais, payload: profs}),\r\n    selectProfissional: () => dispatch({type: Actions.selectProfissional, payload: {}}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewProfissional);\r\n","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardProfissional from \"../../../assets/component/card_profissional/cardProfissional\";\r\nimport \"./profissionais.sass\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalNewProfissional\r\n    from \"../../../assets/component/modals/administrativo/modal_new_profissional/modal_new_profissional\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ProfissionaisPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n\r\n        if ('ocupacao' in props.userLogged) {\r\n            hist.push('/');\r\n        }\r\n\r\n        if (clienteDAO.db) {\r\n            clienteDAO.findAll().then(res => {\r\n                props.setProfissionais(res);\r\n            })\r\n        }\r\n    }, [props.client]);\r\n    \r\n    return (\r\n        <div>\r\n            <ModalNewProfissional\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarProfissional}/>\r\n            <AdministradorTopbar pageSelected={'profissionais'}/>\r\n            <div className={'profissionais_container'}>\r\n                {\r\n                    props.profissionais.map(profissional => (\r\n                        <CardProfissional profissional={profissional}/>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Fab onClick={() => { props.openModal(ModalTypes.adicionarProfissional)}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    setProfissionais: profs => dispatch({type: Actions.setProfissionais, payload: profs}),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfissionaisPage);","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardAdministrativo = props => {\r\n    return (\r\n        <div className={'card_administrativo'}>\r\n            <img\r\n                alt={'administrativo_pic'}\r\n                src={props.administrador.foto_url}/>\r\n            <h2>{props.administrador.nome}</h2>\r\n            <Button text={'Informações'} onClick={() => {\r\n                props.selectAdministrador(props.administrador);\r\n                props.openModal(ModalTypes.adicionarAdministrador);\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardAdministrativo.propTypes = {\r\n    administrador: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectAdministrador: adm => dispatch({type: Actions.selectAdministrador, payload: adm}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardAdministrativo);","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./modal_new_administrativo.sass\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {post} from 'axios';\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\nimport administradorDAO from \"../../../../../DAO/administradorDAO\";\r\n\r\nconst ModalNewAdministrativo = ({\r\n                                    show,\r\n                                    close,\r\n                                    mongoClient,\r\n                                    closeModal,\r\n                                    administradorSelected = {},\r\n                                    setAdministrativo,\r\n                                    unselectAdministrativo\r\n                                }) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n    const [editing, setEditing] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setEditing(false);\r\n    }, []);\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newAdministrativo = async form => {\r\n        try {\r\n        if (fileURL === '') {\r\n            await administradorDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                nome: form.nome.value,\r\n                foto_url: 'https://jsl-online.com/wp-content/uploads/2017/01/placeholder-user.png',\r\n                email: form.email.value,\r\n            });\r\n            alert('Administrador adicionado com Sucesso!');\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            closeModal();\r\n        } else {\r\n            if (checkIfURLIsImage(fileURL)) {\r\n                try {\r\n                    await fileUpload(file);\r\n                    await administradorDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                        nome: form.nome.value,\r\n                        foto_url: fileURL,\r\n                        email: form.email.value,\r\n                    });\r\n                    checkIfURLIsImage(fileURL);\r\n                    alert('Administrador adicionado com Sucesso!');\r\n                    const adms = await administradorDAO.findAll();\r\n                    setAdministrativo(adms);\r\n                    closeModal();\r\n                } catch (err) {\r\n                    alert(err);\r\n                }\r\n            }\r\n        }\r\n        } catch(e) {\r\n            setLoading(false)\r\n            alert(e)\r\n        }\r\n    };\r\n\r\n    const editAdministrativo = async form => {\r\n        try {\r\n            await administradorDAO.update({_id: administradorSelected._id}, {\r\n                nome: form.nome.value,\r\n                email: form.email.value,\r\n            });\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            alert('Administrador editado com Sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const removeAdministrativo = async () => {\r\n        try {\r\n            await administradorDAO.delete({_id: administradorSelected._id});\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            alert('Administrador deletado com Sucesso!');\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        const form = e.target;\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!editing) {\r\n            await newAdministrativo(form);\r\n        } else {\r\n            await editAdministrativo(form);\r\n        }\r\n        unselectAdministrativo();\r\n        setEditing(false);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <ModalParent\r\n            onSubmit={onSubmit}\r\n            show={show}\r\n            header={<header>\r\n                <div>\r\n                    <h1>{'nome' in administradorSelected ? 'Informações do Administrador' : 'Adicionar Administrativo'}</h1>\r\n                </div>\r\n                <div className={'close_container'} onClick={() => {\r\n                    close();\r\n                    setEditing(false);\r\n                    unselectAdministrativo();\r\n                }}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div>\r\n                <FileInput\r\n                    onChangeFile={(file, url) => {\r\n                        setFile(file);\r\n                        setFileURL(url);\r\n                    }}\r\n                    urlName={'foto_url'}\r\n                    fileName={'userfile'}/>\r\n                <InputText\r\n                    defaultValue={administradorSelected.nome}\r\n                    disabled={'nome' in administradorSelected && !editing}\r\n                    label={'Nome'}\r\n                    name={'nome'}/>\r\n                <InputText\r\n                    defaultValue={administradorSelected.email}\r\n                    disabled={'nome' in administradorSelected && !editing}\r\n                    label={'Login'}\r\n                    name={'email'}/>\r\n                {\r\n                    'email' in administradorSelected ? <></> :\r\n                        (\r\n                            <div className={'flex'}>\r\n                                <InputText label={'Senha'} type={'password'} name={'senha'}/>\r\n                                <InputText label={'Confirmar Senha'} type={'password'}/>\r\n                            </div>)\r\n                }\r\n\r\n            </div>}\r\n            footer={\r\n                <div className={'footer'}>\r\n                    {'nome' in administradorSelected ?\r\n                        <div className={'flex crud_ops'}>\r\n                            <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                            if (window.confirm(\"Tem certeza que deseja apagar esse administrador do sistema?\")) {\r\n                                await removeAdministrativo();\r\n                                closeModal();\r\n                                setEditing(false);\r\n                            }\r\n                        }}/>\r\n                            <Button editing={editing}\r\n                                    onClick={() => setEditing(true)}\r\n                                    text={'Editar'}\r\n                                    type={'button'}/>\r\n                        </div> : <></>}\r\n                    <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                </div>}/>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    administradorSelected: state.administradores.administradorSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAdministrativo: adms => dispatch({type: Actions.setAdministrativo, payload: adms}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    unselectAdministrativo: () => dispatch({type: Actions.selectAdministrador, payload: {}})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewAdministrativo)\r\n","import React from 'react';\r\nimport './admin.sass';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardAdministrativo from \"../../../assets/component/card_administrativo/cardAdministrativo\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalNewAdministrativo\r\n    from \"../../../assets/component/modals/administrativo/modal_new_administrativo/modal_new_administrativo\";\r\nimport {connect} from \"react-redux\";\r\nimport administradorDAO from \"../../../DAO/administradorDAO\";\r\nimport {Redirect, useHistory} from \"react-router\";\r\n\r\nconst AdministrativoPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (administradorDAO.db) {\r\n            administradorDAO.findAll().then(adms => {\r\n                props.setAdministrativo(adms);\r\n            });\r\n        }\r\n        if ('ocupacao' in props.userLogged) {\r\n            hist.push('/');\r\n        }\r\n    }, [props.client]);\r\n\r\n    return ('nome' in props.userLogged) ? (\r\n        <div>\r\n            <ModalNewAdministrativo\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarAdministrador}\r\n            />\r\n            <AdministradorTopbar pageSelected={'administrativo'}/>\r\n            <div className={'container_adms'}>\r\n                {\r\n                    props.administradores.map((adm, index) => (\r\n                        <CardAdministrativo key={index}  administrador={adm} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <Fab onClick={() => {\r\n                props.openModal(ModalTypes.adicionarAdministrador);\r\n            }} />\r\n        </div>\r\n    ) : <Redirect to={'/'} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    administradores: state.administradores.administradores,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setAdministrativo: adms => dispatch({type: Actions.setAdministrativo, payload: adms})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministrativoPage);\r\n","import React from 'react';\r\nimport './styles.sass';\r\nimport Button from \"../button/button\";\r\nimport PropTypes from 'prop-types';\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardSala = props => {\r\n    return (\r\n        <div className={'card_sala'}>\r\n            <img\r\n                alt={'sala'}\r\n                src={props.sala.fotos[0]}/>\r\n            <div>\r\n                <h2>{props.sala.nome}</h2>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.openModal(ModalTypes.adicionarSalas);\r\n                        props.selectSala(props.sala);\r\n                    }}\r\n                    text={'Informações'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardSala.propTypes = {\r\n    sala: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardSala);","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport salaDAO from \"../../../../../DAO/salaDAO\";\r\nimport {post} from \"axios\";\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalNewSalas = ({show, closeModal, mongoClient, close, salaSelected, unselectSala}) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newSala = async form => {\r\n        if (checkIfURLIsImage(fileURL)) {\r\n            try {\r\n                await fileUpload(file);\r\n                await salaDAO.create({\r\n                    nome: form.nome.value,\r\n                    descricao: form.descricao.value,\r\n                    valor_hora: Number(form.valor_hora.value),\r\n                    fotos: [fileURL],\r\n                });\r\n                alert('Sala adicionada com Sucesso!');\r\n                closeModal();\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const editSala = async form => {\r\n        try {\r\n            await salaDAO.update({_id: salaSelected._id}, {\r\n                nome: form.nome.value,\r\n                descricao: form.descricao.value,\r\n                valor_hora: Number(form.valor_hora.value),\r\n            });\r\n            alert('Sala editada com sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const removeSala = async () => {\r\n        try {\r\n            await salaDAO.delete({_id: salaSelected._id});\r\n            alert('Sala removida com sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        unselectSala();\r\n        setLoading(false);\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        setLoading(true);\r\n        if (!editing) {\r\n            await newSala(form);\r\n        } else {\r\n            await editSala(form);\r\n        }\r\n        unselectSala();\r\n        setEditing(false);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={onSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>{'nome' in salaSelected ? 'Informações da Sala' : 'Adicionar Sala'}</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={() => {\r\n                             close();\r\n                             unselectSala();\r\n                             setEditing(false);\r\n                         }}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <FileInput onChangeFile={(file, url) => {\r\n                             setFile(file);\r\n                             setFileURL(url);\r\n                         }} fileName={'userfile'} urlName={'file_url'} />\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.nome}\r\n                             label={\"Nome\"} name={'nome'} required/>\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.descricao}\r\n                             label={\"Descrição\"} name={'descricao'} required />\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.valor_hora}\r\n                             label={'Valor da Hora'} name={'valor_hora'} type={'number'} required />\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             {'nome' in salaSelected ?\r\n                                 <div className={'flex crud_ops'}>\r\n                                     <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                                         if (window.confirm(\"Tem certeza que deseja apagar essa sala do sistema?\")) {\r\n                                             await removeSala();\r\n                                             closeModal();\r\n                                             setEditing(false);\r\n                                         }\r\n                                     }}/>\r\n                                     <Button editing={editing}\r\n                                             onClick={() => setEditing(true)}\r\n                                             text={'Editar'}\r\n                                             type={'button'}/>\r\n                                 </div> : <></>}\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    salaSelected: state.salas.salaSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    unselectSala: () => dispatch({type: Actions.selectSala, payload: {}})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewSalas)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Select from \"react-select\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./ModalBloquearSala.sass\"\r\nimport CheckBox from \"../../../checkbox/checkbox\";\r\n\r\nconst ModalBloquearSala = props => {\r\n\r\n    const fillHours = () => {\r\n        let array = []\r\n        for (let i = 8; i < 21; i++)\r\n            array.push({label: i + \":00\", value: i})\r\n        return array\r\n    }\r\n\r\n    const [salasOpcoes, setSalasOpcoes] = React.useState([])\r\n    const [horaInicio, setHoraInicio] = React.useState(fillHours())\r\n\r\n    React.useEffect(() => {\r\n        let array = []\r\n        props.salas.forEach(sala => {\r\n            array.push({label: sala.nome, value: sala._id.toString()})\r\n        })\r\n        setSalasOpcoes(array)\r\n    }, [])\r\n\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            onSubmit={props.onSubmit}\r\n            header={<header>\r\n                <div>\r\n                    <h1>Bloquear Sala</h1>\r\n                </div>\r\n                <div className={'close_container'} onClick={() => {\r\n                    props.close();\r\n                }}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            close={props.close}\r\n            body={<div className={'bloquear_salas_body'}>\r\n                <h2>Salas</h2>\r\n                <Select\r\n                    closeMenuOnSelect={false}\r\n                    name={'select_salas'}\r\n                    onChange={props.handleChange}\r\n                    classNamePrefix={'select_salas'}\r\n                    isMulti={true}\r\n                    options={salasOpcoes}/>\r\n                    <div className={'flex_content'}>\r\n                        <div>\r\n                            <h2>Dia</h2>\r\n                            <input type={'date'} name={'date'} />\r\n                        </div>\r\n                        <div>\r\n                            <h2>Horário</h2>\r\n                            <p>\r\n                                <CheckBox\r\n                                    onCheck={checked => {\r\n                                        props.setWholeDay(!checked)\r\n                                    }}\r\n                                    label={'Dia inteiro'}/>\r\n                            </p>\r\n                            <div className={'flex_content'}>\r\n                                <div className={'select_container'}>\r\n                                    <Select\r\n                                        classNamePrefix={'select'}\r\n                                        name={'hora_inicio'}\r\n                                        options={horaInicio}/>\r\n                                </div>\r\n                                <p>até</p>\r\n                                <div className={'select_container'}>\r\n                                    <Select\r\n                                        classNamePrefix={'select'}\r\n                                        name={'hora_fim'}\r\n                                        options={horaInicio}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>}\r\n            footer={<div className={'footer'}>\r\n                <Button type={'submit'} loading={props.loading} text={props.loading ? 'Carregando...' : 'Confirmar'}/>\r\n            </div>}\r\n        />\r\n    );\r\n}\r\n\r\nModalBloquearSala.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    setWholeDay: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salas: state.salas.salas,\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalBloquearSala);\r\n","import React from 'react';\r\nimport \"./salas.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CardSala from \"../../../assets/component/card_sala/cardSala\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport ModalNewSalas from \"../../../assets/component/modals/administrativo/modal_new_salas/modal_new_salas\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useHistory} from \"react-router\";\r\nimport ModalBloquearSala from \"../../../assets/component/modals/administrativo/modal_bloquear_sala/ModalBloquearSala\";\r\nimport sala_bloqueioDAO from \"../../../DAO/sala_bloqueioDAO\";\r\n\r\nconst SalasPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [wholeDay, setWholeDay] = React.useState(false)\r\n\r\n    if ('ocupacao' in props.userLogged) {\r\n        hist.push('/');\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (salaDAO.db) {\r\n            salaDAO.findAll().then(res => {\r\n                props.setSalas(res);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    const [salas, selectSalas] = React.useState([])\r\n\r\n    const sortSalas = (a, b) => {\r\n        let [first, second] = [a.nome.split(' '), b.nome.split(' ')]\r\n        if (+first[1] > +second[1]) return 1\r\n        if (+first[1] < +second[1]) return -1\r\n        else return 0\r\n    }\r\n\r\n    const handleChange = (selectedSalas) => {selectSalas(selectedSalas)}\r\n\r\n\r\n    return ('nome' in props.userLogged) ? (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'salas'}/>\r\n            <ModalBloquearSala\r\n                setWholeDay={setWholeDay}\r\n                loading={loading}\r\n                handleChange={handleChange}\r\n                onSubmit={async e => {\r\n                    e.preventDefault()\r\n                    setLoading(true)\r\n                    const form = e.target;\r\n\r\n                    let getSalas = () => {\r\n                        if (salas.length === 0) {\r\n                            return {$oid: salas[0].value}\r\n                        } else {\r\n                            let newArray = []\r\n                            salas.forEach(sala => newArray.push({$oid: sala.value}))\r\n                            return newArray\r\n                        }\r\n                    }\r\n\r\n                    let data = {\r\n                        sala: getSalas(),\r\n                        dia: new Date(form.date.value),\r\n                        wholeDay: wholeDay,\r\n                    }\r\n                    if (!wholeDay)\r\n                        data = {...data, horaInicio: form.hora_inicio.value, horaFim: form.hora_fim.value}\r\n                    try {\r\n                        await sala_bloqueioDAO.create(data)\r\n                        props.closeModal()\r\n                    } catch (e) {\r\n                        alert('Erro: ' + e)\r\n                    }\r\n\r\n                    setLoading(false)\r\n                }}\r\n                close={() => props.closeModal()}\r\n                show={\r\n                    props.showModal &&\r\n                    props.modalType === ModalTypes.bloquearSalas\r\n                }/>\r\n            <ModalNewSalas\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarSalas}\r\n            />\r\n            <div className={'salas_container'}>\r\n                <div className={'header_salas'}>\r\n                    <div style={{flexGrow: 1}}>\r\n                        <h1>Salas Cadastradas</h1>\r\n                        <h3>Abaixo seguem as salas possuídas pela Integra</h3>\r\n                    </div>\r\n                    <div style={{width: 'auto'}}>\r\n                        <Button\r\n                            width={'250px'}\r\n                            text={'Bloquear Salas'}\r\n                            onClick={() => props.openModal(ModalTypes.bloquearSalas)}/>\r\n                    </div>\r\n                </div>\r\n                <div className={'salas'}>\r\n                    {\r\n                        props.salas.sort(sortSalas).map((sala, index) => (\r\n                            <CardSala sala={sala} key={index}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Fab onClick={() => props.openModal(ModalTypes.adicionarSalas)}/>\r\n        </div>\r\n    ) : (<Redirect to={'/'}/>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    salas: state.salas.salas,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalasPage);\r\n","import React from 'react';\r\nimport \"./resetPassword.sass\"\r\nimport {connect} from 'react-redux';\r\nimport InputText from \"../../../assets/component/inputText/input\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport qs from 'qs'\r\nimport {UserPasswordAuthProviderClient} from 'mongodb-stitch-browser-sdk'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ResetPassword = props => {\r\n\r\n    const story = useHistory()\r\n\r\n    const [tokens, setTokens] = React.useState(null)\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const tokens = {\r\n            token: qs.parse(props.location.search, {ignoreQueryPrefix: true}).token,\r\n            tokenId: qs.parse(props.location.search).tokenId,\r\n        }\r\n\r\n        if (!tokens.token) {\r\n            story.push('/')\r\n        }\r\n        setTokens(tokens)\r\n        console.log(tokens)\r\n    }, [])\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        const form = e.target\r\n        const [senha, confSenha] = [form.nova_senha.value, form.conf_senha.value]\r\n        if (senha !== confSenha) {\r\n            alert('As senhas não conferem.')\r\n        } else if (senha.length < 6) {\r\n            alert('Por favor, insira uma senha com mais de 6 caracteres.')\r\n        } else {\r\n            //Passou.\r\n            setLoading(true)\r\n            try {\r\n                const emailPassClient = props.mongoClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory)\r\n                await emailPassClient.resetPassword(tokens.token, tokens.tokenId, senha)\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n return (\r\n    <div className={'reset_password_container'}>\r\n        <img src={require('../../../assets/integra_logo.png')} alt={''}/>\r\n        <form onSubmit={onSubmit}>\r\n            <h1 style={{color: '#888', marginTop: 0}}>Redefinir Senha</h1>\r\n            <InputText label={'Nova Senha'} type={'password'} name={'nova_senha'}/>\r\n            <InputText label={'Confirmar Senha'} type={'password'} name={'conf_senha'}/>\r\n            <Button text={'Confirmar'} type={'submit'} loading={loading} />\r\n        </form>\r\n    </div>\r\n );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport \"./Configuracoes.sass\"\r\nimport InputText from \"../../../assets/component/inputText/input\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Configuracoes = props => {\r\n    return (\r\n        <div className={'configuracoes_container'}>\r\n            <ClienteTopbar/>\r\n            <div style={{marginTop: 35}}>\r\n                <Link to={'/agendamentos'}><i className={'fas fa-chevron-left'}/> &nbsp; Voltar para Página\r\n                    Inicial</Link>\r\n            </div>\r\n            <div className={'configuracoes_body'}>\r\n                <h2>Alterar Descrição</h2>\r\n                <p>Sua descrição é seu currículo, você pode incluir o que você faz, sua formação acadêmica, e quanto tempo de experiência na área que você atua.</p>\r\n                <p><textarea placeholder={'Sua nova descrição vai aqui.'} style={{width: '50%', height: 150, padding: 15}}/></p>\r\n                <Button text={'Confirmar'} width={'250px'}/>\r\n                <h2>Recuperar Senha</h2>\r\n                <p>Enviaremos um e-mail para seu e-mail cadastrado para redefinir a sua senha.</p>\r\n                <Button text={'Enviar e-mail'} width={'350px'}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Configuracoes);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport \"./tipoUsuario.sass\"\r\nimport {useHistory} from \"react-router\";\r\nimport administradorDAO from \"../../DAO/administradorDAO\";\r\n\r\nconst TipoUsuario = props => {\r\n\r\n    const story = useHistory()\r\n\r\n    const [loading, setLoading] = React.useState(true)\r\n\r\n    const checkAdm = async () => {\r\n        setLoading(true)\r\n        return administradorDAO.find({email: props.userLogged.email})\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        checkAdm().then(res => {\r\n            if (res.length === 0) {\r\n                story.push('/')\r\n            }\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (<div>\r\n            <h1>Carregando...</h1>\r\n        </div>)\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div onClick={() => story.push('/agendamento_adm')}>\r\n                    <h1>Entrar como Administrador</h1>\r\n                </div>\r\n                <div>\r\n                    <h1>Entrar como Profissional</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TipoUsuario);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk';\r\nimport {Provider} from 'react-redux';\r\nimport Store from \"./redux/store\";\r\nimport Actions from \"./redux/actions/actions\";\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport LoginPage from \"./pages/login\";\r\nimport ClienteAgendamentos from \"./pages/cliente/agendamentos\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport MinhasReservasPage from \"./pages/cliente/reservas\";\r\nimport AgendamentosAdministrador from \"./pages/administrador/agendamentos\";\r\nimport DashboardPage from \"./pages/administrador/dashboard\";\r\nimport LogsPage from \"./pages/administrador/logs\";\r\nimport ProfissionaisPage from \"./pages/administrador/profissionais\";\r\nimport AdministrativoPage from \"./pages/administrador/administrativo\";\r\nimport SalasPage from \"./pages/administrador/salas\";\r\nimport clienteDAO from \"./DAO/clienteDAO\";\r\nimport administradorDAO from \"./DAO/administradorDAO\";\r\nimport salaDAO from \"./DAO/salaDAO\";\r\nimport reservaDAO from \"./DAO/reservaDAO\";\r\nimport logDAO from \"./DAO/logDAO\";\r\nimport ResetPassword from \"./pages/login/resetPassword/resetPassword\";\r\nimport Configuracoes from \"./pages/cliente/configuracoes/Configuracoes\";\r\nimport tipoUsuario from \"./pages/login/tipoUsuario\";\r\nimport sala_bloqueioDAO from \"./DAO/sala_bloqueioDAO\";\r\n\r\nfunction App() {\r\n\r\n    const setDatabaseIntoDAOs = (db) => {\r\n        clienteDAO.setDb(db);\r\n        administradorDAO.setDb(db);\r\n        salaDAO.setDb(db);\r\n        reservaDAO.setDb(db);\r\n        logDAO.setDb(db);\r\n        sala_bloqueioDAO.setDb(db);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        //Inicializa o Banco de Dados.\r\n        const client = Stitch.initializeDefaultAppClient('integra-rhnuz');\r\n        const db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('Integra');\r\n\r\n        //Coloca ambos dentro da Store.\r\n        Store.dispatch({type: Actions.setMongoClient, payload: client});\r\n        Store.dispatch({type: Actions.setDatabase, payload: db});\r\n\r\n        setDatabaseIntoDAOs(db);\r\n    }, []);\r\n\r\n  return (\r\n      <Provider store={Store}>\r\n          <Router>\r\n              <Route path={'/'} exact={true} component={LoginPage} />\r\n              <Route path={'/agendamentos'} component={ClienteAgendamentos} />\r\n              <Route path={'/minhas_reservas'} component={MinhasReservasPage} />\r\n              <Route path={'/agendamento_adm'} component={AgendamentosAdministrador} />\r\n              <Route path={'/dashboard'} component={DashboardPage} />\r\n              <Route path={'/administrativo'} component={AdministrativoPage} />\r\n              <Route path={'/profissionais'} component={ProfissionaisPage} />\r\n              <Route path={'/tipoUsuario'} component={tipoUsuario} />\r\n              <Route path={'/salas'} component={SalasPage} />\r\n              <Route path={'/configuracoes'} component={Configuracoes} />\r\n              <Route path={'/recuperarSenha'} component={ResetPassword} />\r\n              <Route path={'/logs'} component={LogsPage} />\r\n          </Router>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}