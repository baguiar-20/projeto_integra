{"version":3,"sources":["assets/integra_logo.png","assets/sala.png","redux/actions/actions.js","redux/reducers/general_reducer.js","redux/store.js","DAO/administradorDAO.js","assets/component/inputText/input.js","assets/component/button/button.js","assets/component/checkbox/checkbox.js","assets/component/modoPaisagem/modoPaisagem.js","pages/login/index.js","assets/component/cliente_topbar/topbar.js","assets/component/reserva_cliente/reserva_cliente.js","assets/component/week_calendar/calendar.js","assets/component/sala/sala.js","assets/component/modal_parent/modal.js","assets/component/modal_agendamento/modalAgendamento.js","assets/modal_types.js","assets/component/modal_detalhes_sala/detalhesSala.js","assets/component/alternating_tab/alt_tab.js","assets/component/Snack/snack.js","pages/cliente/agendamentos/index.js","pages/cliente/reservas/index.js","assets/component/adm_topbar/adm_topbar.js","assets/component/calendar_agendamentos/CalendarAgendamentos.js","pages/administrador/agendamentos/index.js","pages/administrador/dashboard/index.js","assets/component/card_log/cardLog.js","pages/administrador/logs/index.js","assets/component/card_profissional/cardProfissional.js","pages/administrador/profissionais/index.js","assets/component/card_administrativo/cardAdministrativo.js","pages/administrador/administrativo/index.js","assets/component/card_sala/cardSala.js","pages/administrador/salas/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Actions","setDatabase","setMongoClient","setUserLogged","showModal","closeModal","initialState","database","mongoClient","modalType","userLogged","GeneralReducer","state","action","type","payload","Store","createStore","combineReducers","general","administradorDAO","create","db","adm","collection","insertOne","update","query","changes","updateMany","$set","delete","deleteMany","findAll","find","toArray","anonymousLogin","client","auth","loginWithCredential","AnonymousCredential","InputText","props","className","placeholder","name","label","Button","style","width","onClick","text","CheckBox","onCheck","React","useState","checked","setChecked","ModoPaisagem","connect","dispatch","user","logged","setLogged","loggedAdm","setLoggedAdm","login","a","useEffect","src","require","onSubmit","e","preventDefault","target","email","value","to","ClienteTopbar","ReservaCliente","executado","Reserva","ReservaAdm","days","WeekCalendar","map","day","addReservaListener","isAdm","Sala","onClickDetalhesListener","ModalParent","show","header","body","footer","selectOptions","ModalAgendamento","close","options","ModalTypes","reservaCliente","detalhesSala","ModalDetalhesSala","alt","AlternatingTab","elements","element","index","selectedIndex","Snack","openModal","open","selectedTab","selectTab","Tab","story","useHistory","push","page","selected","children","AdministradorTopbar","pageSelected","horas","array","i","fillHoras","salas","Array","fill","CalendarAgendamentos","float","sala","hora","Math","round","random","AgendamentosAdministrador","DashboardPage","setChart","chart","am4core","am4charts","paddingRight","data","visits","date","Date","xAxes","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","id","CardLog","CardProfissional","ProfissionaisPage","CardAdministrativo","AdministrativoPage","CardSala","SalasPage","App","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","factory","store","path","exact","component","LoginPage","ClienteAgendamentos","MinhasReservasPage","LogsPage","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4935a29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/integra_logo.ffdf0581.png\";","module.exports = __webpack_public_path__ + \"static/media/sala.6f283a64.png\";","const Actions = {\r\n    setDatabase: 'SET_DATABASE',\r\n    setMongoClient: 'SET_MONGO_CLIENT',\r\n    setUserLogged: 'SET_USER_LOGGED',\r\n    showModal: 'SHOW_MODAL',\r\n    closeModal: 'CLOSE_MODAL',\r\n}\r\n\r\nexport default Actions;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    database: null,\r\n    mongoClient: null,\r\n    modalType: '',\r\n    userLogged: null,\r\n    showModal: false,\r\n};\r\n\r\nconst GeneralReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.setMongoClient:\r\n            return {...state, mongoClient: action.payload};\r\n        case Actions.setDatabase:\r\n            return {...state, database: action.payload};\r\n        case Actions.setUserLogged:\r\n            return {...state, userLogged: action.payload};\r\n        case Actions.showModal:\r\n            return {...state, showModal: true, modalType: action.payload};\r\n        case Actions.closeModal:\r\n            return {...state, showModal: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default GeneralReducer;","import {createStore, combineReducers} from 'redux';\r\nimport GeneralReducer from \"./reducers/general_reducer\";\r\n\r\nconst Store = createStore(combineReducers({\r\n    general: GeneralReducer,\r\n}));\r\n\r\nexport default Store;","import {AnonymousCredential} from 'mongodb-stitch-browser-sdk';\r\n\r\nconst COLLECTION = 'administradores';\r\n\r\nconst administradorDAO = {\r\n    create(db, adm) {\r\n        return db.collection(COLLECTION).insertOne(adm);\r\n    },\r\n    update(db, query, changes) {\r\n        return db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(db, query) {\r\n        return db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll(db) {\r\n        return db.collection(COLLECTION).find({}).toArray();\r\n    },\r\n    anonymousLogin(client) {\r\n        return client.auth.loginWithCredential(new AnonymousCredential());\r\n    }\r\n};\r\n\r\nexport default administradorDAO;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.sass';\r\n\r\nconst InputText = props => {\r\n    return (\r\n        <div className={'input_text'}>\r\n            <input\r\n                placeholder={props.placeholder}\r\n                type={props.type ? props.type : 'text'}\r\n                name={props.name ? props.name : ''} />\r\n            <label className={'label'}>{props.label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nInputText.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            type={props.type}\r\n            style={props.width ? {width: props.width} : {}}\r\n            onClick={props.onClick}\r\n            className={'button'}>\r\n            {props.text}\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    type: PropTypes.string,\r\n    width: PropTypes.string,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.sass\";\r\n\r\nconst CheckBox = ({onCheck = () => {}, label}) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'checkbox_container'}>\r\n            <div className={checked ? 'checkbox checked' : 'checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n            </div>\r\n            <label>{label}</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CheckBox;","import React from 'react';\r\nimport \"./styles.sass\";\r\n\r\nconst ModoPaisagem = () => {\r\n    return (\r\n        <div className={'modo_paisagem'}>\r\n            <h2>Por favor, vire o seu celular! :(</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModoPaisagem;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../redux/actions/actions\";\r\nimport administradorDAO from \"../../DAO/administradorDAO\";\r\nimport './styles.sass';\r\nimport InputText from \"../../assets/component/inputText/input\";\r\nimport Button from \"../../assets/component/button/button\";\r\nimport CheckBox from \"../../assets/component/checkbox/checkbox\";\r\nimport {Redirect} from \"react-router\";\r\nimport ModoPaisagem from \"../../assets/component/modoPaisagem/modoPaisagem\";\r\n\r\nconst LoginPage = ({mongoClient, userLogged, setUserLogged}) => {\r\n\r\n    const [logged, setLogged] = React.useState(false);\r\n    const [loggedAdm, setLoggedAdm] = React.useState(false);\r\n\r\n    const login = async () => {\r\n        if (mongoClient) {\r\n            const user = await administradorDAO.anonymousLogin(mongoClient);\r\n            setUserLogged(user);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        login();\r\n    });\r\n\r\n    return (\r\n        <div className={'login_container'}>\r\n            <ModoPaisagem />\r\n            <div className={'ball'} />\r\n            <div className={'logo_container'}>\r\n                <img src={require('../../assets/integra_logo.png')} />\r\n                <p>Sistema de Gerenciamento</p>\r\n            </div>\r\n            <div className={'login'}>\r\n                <h1>Login</h1>\r\n                <div className={'card'}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        const form = e.target;\r\n                        if (form.email.value === 'adm') {\r\n                            setLoggedAdm(true);\r\n                        } else {\r\n                            setLogged(true);\r\n                        }\r\n                    }}>\r\n                        <InputText\r\n                            name={'email'}\r\n                            label={'E-mail'}\r\n                            placeholder={'Ex: joao@example.com'} />\r\n                        <InputText\r\n                            name={'senha'}\r\n                            label={'Senha'}\r\n                            type={'password'}\r\n                            placeholder={'Informe sua senha'} />\r\n                        <CheckBox label={'Manter-me Conectado'} />\r\n                        <Button type=\"submit\" text={'Confirmar'}/>\r\n                    </form>\r\n                    {logged && <Redirect to={'/agendamentos'} />}\r\n                    {loggedAdm && <Redirect to={'/agendamento_adm'} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    database: state.general.database,\r\n    userLogged: state.general.userLogged\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user =>\r\n        dispatch({type: Actions.setUserLogged, payload: user})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ClienteTopbar = props => {\r\n    return (\r\n        <div className={'topbar_container'}>\r\n            <div className={'img_container'}>\r\n                <img src={require('../../integra_logo.png')} />\r\n            </div>\r\n            <div className={'titulo'}>\r\n                <h2>Portal da Equipe</h2>\r\n                <h4>Agendamentos</h4>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>Catherine Torres</h2>\r\n                    <h4>Fisioterapeuta</h4>\r\n                </div>\r\n            </div>\r\n            <img className={'profile_pic'} src={'https://randomuser.me/api/portraits/women/43.jpg'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClienteTopbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst ReservaCliente = props => {\r\n    return (\r\n        <div className={props.executado ? 'container_reserva_cliente executado' : 'container_reserva_cliente'}>\r\n            <div>\r\n                <h1>27/01/2019</h1>\r\n                <h4>14:00 ~ 16:00</h4>\r\n            </div>\r\n            <div>\r\n                <h4>Sala</h4>\r\n                <h1>05</h1>\r\n            </div>\r\n            <div>\r\n                <h4>Situação</h4>\r\n                <h2>Pendente</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nReservaCliente.propTypes = {\r\n    executado: PropTypes.bool,\r\n}\r\n\r\nexport default ReservaCliente;","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport ReservaCliente from \"../reserva_cliente/reserva_cliente\";\r\nconst Reserva = props => {\r\n    return (\r\n        <div className={'reserva'}>\r\n            <i><h2>Reservado</h2></i>\r\n            <h4>15:00 ~ 16:00</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ReservaAdm = props => {\r\n    return (\r\n        <div className={'reserva'}>\r\n            <i><h4>Reservado</h4></i>\r\n            <h3>Igor Nogueira</h3>\r\n            <h4>15:00 ~ 16:00</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst days = ['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'];\r\n\r\nconst WeekCalendar = props => {\r\n    return (\r\n        <div className={'container_week'}>\r\n            <div className={'chevron'}><p><i className={'fas fa-chevron-left'}/></p></div>\r\n            {days.map((day) => (\r\n                <div\r\n                    onClick={props.addReservaListener}\r\n                    className={'week_day'}>\r\n                    <h1>{day}</h1>\r\n                    <h3>29/Jan</h3>\r\n                    {!props.isAdm ? <Reserva /> : <ReservaAdm /> }\r\n                    <div className={'add'}><span>+</span></div>\r\n                </div>\r\n            ))}\r\n            <div\r\n                className={'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-right'}/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeekCalendar.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    addReservaListener: PropTypes.func,\r\n}\r\n\r\nexport default WeekCalendar;","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport WeekCalendar from \"../week_calendar/calendar\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Sala = props => {\r\n    return (\r\n        <div className={'sala_content'}>\r\n            <div className={'sala_container'}>\r\n            <div>\r\n                <h1>Sala 01</h1>\r\n                 <p>Horários Reservados</p>\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    width={'25%'}\r\n                    text={'Detalhes'}\r\n                    onClick={props.onClickDetalhesListener} />\r\n            </div>\r\n            </div>\r\n            <WeekCalendar isAdm={props.isAdm} addReservaListener={props.addReservaListener}/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nSala.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    addReservaListener: PropTypes.func,\r\n    onClickDetalhesListener: PropTypes.func,\r\n}\r\n\r\nexport default Sala;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst ModalParent = props => {\r\n    return (\r\n        <div className={props.show ? 'modal_container' : 'modal_container hidden'}>\r\n                {props.header}\r\n            <div>\r\n                {props.body}\r\n            </div>\r\n                {props.footer}\r\n        </div>\r\n    )\r\n}\r\n\r\nModalParent.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func,\r\n    header: PropTypes.element,\r\n    body: PropTypes.element,\r\n    footer: PropTypes.element,\r\n}\r\n\r\nexport default ModalParent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../button/button\";\r\nimport Select from 'react-select';\r\nimport ModalParent from \"../modal_parent/modal\";\r\n\r\nconst selectOptions = [\r\n    {label: '08:00', value: 8},\r\n    {label: '09:00', value: 9},\r\n]\r\n\r\nconst ModalAgendamento = ({show, close}) => {\r\n    return (\r\n        <ModalParent show={show}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>Adicionar Reserva</h1>\r\n                             <h3>Sexta, 27 de Janeiro de 2019</h3>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={close}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <div className={'options'}>\r\n                             <div className={'option selected'}><p>Hora Avulsa</p></div>\r\n                             <div className={'option'}><p>Turno</p></div>\r\n                             <div className={'option'}><p>Mensal</p></div>\r\n                         </div>\r\n                         <div className={'horas_intervalo'}>\r\n                             <div>\r\n                                 <h2>Hora Inicial</h2>\r\n                                 <Select options={selectOptions}/>\r\n                             </div>\r\n                             <div>\r\n                                 <h2>Hora Final</h2>\r\n                                 <Select options={selectOptions}/>\r\n                             </div>\r\n                         </div>\r\n                         <div className={'resume_container'}>\r\n                             <div>\r\n                                 <h2>Valor/Hora</h2>\r\n                                 <h3>R$39,90</h3>\r\n                             </div>\r\n                             <div>\r\n                                 <h2>Valor Total:</h2>\r\n                                 <h3>R$139,90</h3>\r\n                             </div>\r\n                         </div>\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             <Button text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nModalAgendamento.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n}\r\n\r\nexport default ModalAgendamento;","const ModalTypes = {\r\n    reservaCliente: 'RESERVA_CLIENTE',\r\n    detalhesSala: 'DETALHES_SALA',\r\n};\r\n\r\nexport default ModalTypes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalParent from \"../modal_parent/modal\";\r\nimport \"./styles.sass\";\r\n\r\nconst ModalDetalhesSala = props => {\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <h1>Detalhes - Sala 01</h1>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'modal_sala_body'}>\r\n                <div className={'carousel'}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                        <img alt={''} src={require('../../sala.png')} />\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </div>\r\n                <div className={'sala_details'}>\r\n                    <div>\r\n                        <h2>Valor/Hora:</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>No espaço contém:</h2>\r\n                        <h3>3 cadeiras, 2 estantes, uma sala de estar e ar condicionado</h3>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default ModalDetalhesSala;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\n\r\nconst AlternatingTab = props => {\r\n    return (\r\n        <div className={'alternating_tabs'}>\r\n            {\r\n                props.elements.map((element, index) => (\r\n                    <div\r\n                        className={index === props.selectedIndex ? 'selected' : ''}\r\n                        onClick={element.onClick}>\r\n                        <h2>{element.name}</h2>\r\n                    </div>\r\n                ))\r\n            }\r\n            {(props.selectedIndex === 0) ? <Redirect to='agendamentos' /> : <></>}\r\n            {(props.selectedIndex === 1) ? <Redirect to='minhas_reservas' /> : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nAlternatingTab.propTypes = {\r\n    selectedIndex: PropTypes.number.isRequired,\r\n    elements: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AlternatingTab;\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\n\r\nconst Snack = props => {\r\n    return (\r\n        <div className={'snack_container'}>\r\n            <h2>Você tem 5 reservas agendadas</h2>\r\n        </div>)\r\n}\r\n\r\nexport default Snack;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport Sala from \"../../../assets/component/sala/sala\";\r\nimport \"./styles.sass\";\r\nimport ModalAgendamento from \"../../../assets/component/modal_agendamento/modalAgendamento\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalDetalhesSala from \"../../../assets/component/modal_detalhes_sala/detalhesSala\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport Redirect from 'react-router-dom/Redirect';\r\n\r\nconst ClienteAgendamentos = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(0);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ModalAgendamento\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.reservaCliente}\r\n            />\r\n            <ModalDetalhesSala\r\n                close={() => props.closeModal()}\r\n                show={props.showModal && props.modalType === ModalTypes.detalhesSala}\r\n            />\r\n            <ClienteTopbar />\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => { selectTab(1) },\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_salas'}>\r\n                <Sala\r\n                    onClickDetalhesListener={() => {\r\n                        props.openModal(ModalTypes.detalhesSala);\r\n                    }}\r\n                    addReservaListener={() =>\r\n                        props.openModal(ModalTypes.reservaCliente)}/>\r\n                <Sala />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteAgendamentos)","import React from 'react';\r\nimport './style.sass';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ReservaCliente from \"../../../assets/component/reserva_cliente/reserva_cliente\";\r\n\r\nconst MinhasReservasPage = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(1);\r\n\r\n    return (\r\n        <div>\r\n            <ClienteTopbar />\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => selectTab(1),\r\n                }]}/>\r\n                <Snack />\r\n            </div>\r\n            <div className={'container_reservas'}>\r\n                <h1 className={'title'}>Minhas Reservas</h1>\r\n                <ReservaCliente />\r\n                <ReservaCliente />\r\n                <h1 className={'title'}>Histórico</h1>\r\n                <ReservaCliente executado/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MinhasReservasPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Tab = props => {\r\n    const story = useHistory();\r\n\r\n    return (\r\n            <div onClick={() => {\r\n                story.push('/' + props.page);\r\n            }} className={'tab ' + (props.selected ? 'selected': '')}>\r\n                <p>{props.children}</p>\r\n\r\n            </div>\r\n    )\r\n};\r\n\r\nconst AdministradorTopbar = ({pageSelected}) => {\r\n    return (\r\n        <div className={'topbar_container'}>\r\n            <div className={'img_container'}>\r\n                <img src={require('../../integra_logo.png')}/>\r\n            </div>\r\n            <div className={'tabs'}>\r\n                <Tab\r\n                    page={'dashboard'}\r\n                    selected={pageSelected === 'dashboard'}>\r\n                    Dashboard\r\n                </Tab>\r\n                <Tab\r\n                    page={'agendamento_adm'}\r\n                    selected={pageSelected === 'agendamentos'}>\r\n                    Agendamentos\r\n                </Tab>\r\n                <Tab page={'profissionais'} selected={pageSelected === 'profissionais'}>Profissionais</Tab>\r\n                <Tab page={'administrativo'}  selected={pageSelected === 'administrativo'}>Administrativo</Tab>\r\n                <Tab page={'salas'}  selected={pageSelected === 'salas'}>Salas</Tab>\r\n                <Tab page={'logs'} selected={pageSelected === 'logs'}>Logs</Tab>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>Catherine Torres</h2>\r\n                    <h4>Fisioterapeuta</h4>\r\n                </div>\r\n            </div>\r\n            <img className={'profile_pic'} src={'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nAdministradorTopbar.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AdministradorTopbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./CalendarAgendamentos.sass\";\r\n\r\nconst fillHoras = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 13; i++)\r\n        array.push(i + 8 + ':00');\r\n    return array;\r\n}\r\n\r\nconst horas = fillHoras();\r\nconst salas = new Array(8).fill('Sala 02');\r\n\r\nconst CalendarAgendamentos = props => {\r\n    return (\r\n        <div className={'calendar_agendamentos_container'}>\r\n            <h1>\r\n                <span style={{float: 'left'}}><i className={'fa fa-chevron-left'}/> </span>\r\n                17 de Fevereiro de 2020\r\n                <span style={{float: 'right'}}><i className={'fa fa-chevron-right'}/> </span>\r\n            </h1>\r\n            <table className={'calendar_table'}>\r\n                {/*aqui vai a numeracao das salas*/}\r\n                <thead>\r\n                    <tr>\r\n                        <td></td>\r\n                        {\r\n                            salas.map(sala => <td>{sala}</td>)\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    horas.map(hora => (\r\n                        <tr>\r\n                            <td>{hora}</td>\r\n                            { salas.map(sala => {\r\n                                if (Math.round(Math.random())) {\r\n                                    return (\r\n                                        <td className={'free'}>\r\n                                        <i className={'fa fa-plus'}/>\r\n                                        </td>\r\n                                    )\r\n                                } else {\r\n                                    return (<td className={'occupied'}>\r\n                                        Igor Nogueira\r\n                                    </td>)\r\n                                }\r\n                            })}\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarAgendamentos;","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport WeekCalendar from \"../../../assets/component/week_calendar/calendar\";\r\nimport Sala from \"../../../assets/component/sala/sala\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport CalendarAgendamentos from \"../../../assets/component/calendar_agendamentos/CalendarAgendamentos\";\r\n\r\nconst AgendamentosAdministrador = props => {\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'agendamentos'} />\r\n            <div className={'container_salas'}>\r\n                <CalendarAgendamentos/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgendamentosAdministrador;","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport * as am4themes_animated from '@amcharts/amcharts4/themes/animated';\r\nimport \"./styles.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\n\r\nconst DashboardPage = props => {\r\n\r\n    const [chartState, setChart] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n\r\n        let chart = am4core.create('chart_agendamentos', am4charts.XYChart);\r\n\r\n        chart.paddingRight = 20;\r\n\r\n        let data = [];\r\n        let visits = 10;\r\n        for (let i = 1; i < 366; i++) {\r\n            visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n            data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n        }\r\n\r\n        chart.data = data;\r\n\r\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n\r\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = chart.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n\r\n        series.tooltipText = \"{valueY.value}\";\r\n        chart.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        chart.scrollbarX = scrollbarX;\r\n\r\n        setChart(chart);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'dashboard'}/>\r\n            <div className={'indicators_container'}>\r\n                <div>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                    <h2>25 reservas no mês</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>35 reservas canceladas</h2>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                </div>\r\n            </div>\r\n            <div className={'bottom_column'}>\r\n                <div className={'agendamentos_chart_container'}>\r\n                    <h2>Agendamentos</h2>\r\n                    <div id={'chart_agendamentos'}/>\r\n                </div>\r\n                <div className={'quickdetails_container'}>\r\n                    <h2>Informações</h2>\r\n                    <h3>5 Novos Profissionais</h3>\r\n                    <h3>57 agendamentos</h3>\r\n                    <h3>15 usuários cadastrados</h3>\r\n                    <h3>183 agendamentos até o momento</h3>\r\n                    <h3>5 pacientes para profissionais</h3>\r\n                    <h3>23 cancelamentos</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst CardLog = props => {\r\n    return (\r\n        <div className={'card_log'}>\r\n            <img className={'profile_pic'} src={'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n            <div>\r\n                <h3>Brian Ito</h3>\r\n                <h1>Solicitou uma nova sala</h1>\r\n            </div>\r\n            <div>\r\n                <h4>Seg, 24/Jan/2020 15:35</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardLog;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardLog from \"../../../assets/component/card_log/cardLog\";\r\nimport \"./styles.sass\";\r\n\r\nconst LogsPage = props => {\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'logs'} />\r\n            <div className={'logs'}>\r\n                <CardLog />\r\n                <CardLog />\r\n                <CardLog />\r\n                <CardLog />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(LogsPage);","import React from 'react';\r\nimport './styles.sass';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../button/button\";\r\n\r\nconst CardProfissional = props => {\r\n    return (\r\n        <div className={'card_profissional'}>\r\n            <img src={'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n            <h2>Claudio Correa de Andrade Matias Pinto</h2>\r\n            <h3>Fisioterapeuta</h3>\r\n            <Button text={'Informações'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nCardProfissional.propTypes = {\r\n\r\n};\r\n\r\nexport default CardProfissional;","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardProfissional from \"../../../assets/component/card_profissional/cardProfissional\";\r\nimport \"./styles.sass\";\r\n\r\nconst ProfissionaisPage = props => {\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'profissionais'}/>\r\n            <div className={'profissionais_container'}>\r\n                <CardProfissional />\r\n                <CardProfissional />\r\n                <CardProfissional />\r\n                <CardProfissional />\r\n                <CardProfissional />\r\n                <CardProfissional />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfissionaisPage;","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\n\r\nconst CardAdministrativo = props => {\r\n    return (\r\n        <div className={'card_administrativo'}>\r\n            <img src={'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n            <h2>Claudio Correa de Andrade Matias Pinto</h2>\r\n            <Button text={'Informações'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardAdministrativo;","import React from 'react';\r\nimport './styles.sass';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardAdministrativo from \"../../../assets/component/card_administrativo/cardAdministrativo\";\r\n\r\nconst AdministrativoPage = props => {\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'administrativo'}/>\r\n            <div className={'container_adms'}>\r\n                <CardAdministrativo/>\r\n                <CardAdministrativo/>\r\n                <CardAdministrativo/>\r\n                <CardAdministrativo/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdministrativoPage;","import React from 'react';\r\nimport './styles.sass';\r\nimport Button from \"../button/button\";\r\n\r\nconst CardSala = props => {\r\n    return (\r\n        <div className={'card_sala'}>\r\n            <img src={'https://integracps.com.br/uploads/gallery/2019/04/estrutura-11556120340.jpg'} />\r\n            <h2>Sala 03</h2>\r\n            <Button text={'Informações'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardSala;","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CardSala from \"../../../assets/component/card_sala/cardSala\";\r\n\r\nconst SalasPage = props => {\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'salas'}/>\r\n            <div className={'salas_container'}>\r\n                <div className={'header_salas'}>\r\n                    <div>\r\n                        <h1>Salas Cadastradas</h1>\r\n                        <h3>Abaixo seguem as salas possuídas pela Integra</h3>\r\n                    </div>\r\n                    <div>\r\n                        <Button width={'50%'} text={'Nova Sala'}/>\r\n                    </div>\r\n                </div>\r\n                <div className={'salas'}>\r\n                    <CardSala />\r\n                    <CardSala />\r\n                    <CardSala />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalasPage;","import React from 'react';\r\nimport './App.css';\r\nimport { Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk';\r\nimport {Provider} from 'react-redux';\r\nimport Store from \"./redux/store\";\r\nimport Actions from \"./redux/actions/actions\";\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport LoginPage from \"./pages/login\";\r\nimport ClienteAgendamentos from \"./pages/cliente/agendamentos\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport MinhasReservasPage from \"./pages/cliente/reservas\";\r\nimport AgendamentosAdministrador from \"./pages/administrador/agendamentos\";\r\nimport DashboardPage from \"./pages/administrador/dashboard\";\r\nimport LogsPage from \"./pages/administrador/logs\";\r\nimport ProfissionaisPage from \"./pages/administrador/profissionais\";\r\nimport AdministrativoPage from \"./pages/administrador/administrativo\";\r\nimport SalasPage from \"./pages/administrador/salas\";\r\n\r\nfunction App() {\r\n\r\n    React.useEffect(() => {\r\n        //Inicializa o Banco de Dados.\r\n        const client = Stitch.initializeDefaultAppClient('integra-rhnuz');\r\n        const db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('Integra');\r\n\r\n        //Coloca ambos dentro da Store.\r\n        Store.dispatch({type: Actions.setMongoClient, payload: client});\r\n        Store.dispatch({type: Actions.setDatabase, payload: db});\r\n    }, []);\r\n\r\n  return (\r\n      <Provider store={Store}>\r\n          <Router>\r\n              <Route path={'/'} exact={true} component={LoginPage} />\r\n              <Route path={'/agendamentos'} component={ClienteAgendamentos} />\r\n              <Route path={'/minhas_reservas'} component={MinhasReservasPage} />\r\n              <Route path={'/agendamento_adm'} component={AgendamentosAdministrador} />\r\n              <Route path={'/dashboard'} component={DashboardPage} />\r\n              <Route path={'/administrativo'} component={AdministrativoPage} />\r\n              <Route path={'/profissionais'} component={ProfissionaisPage} />\r\n              <Route path={'/salas'} component={SalasPage} />\r\n              <Route path={'/logs'} component={LogsPage} />\r\n          </Router>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}