{"version":3,"sources":["assets/integra_logo.png","assets/preview.jpg","redux/actions/actions.js","redux/reducers/general_reducer.js","redux/reducers/profissionais_reducer.js","redux/reducers/administradores_reducer.js","redux/reducers/salas_reducer.js","redux/reducers/agendamentos_reducer.js","redux/reducers/logs_reducer.js","redux/store.js","DAO/administradorDAO.js","assets/component/inputText/input.jsx","assets/component/button/button.js","assets/component/checkbox/checkbox.js","assets/component/modoPaisagem/modoPaisagem.js","DAO/clienteDAO.js","pages/login/index.js","assets/component/cliente_topbar/topbar.jsx","DAO/logDAO.js","DAO/reservaDAO.js","assets/AuxFunctions.js","assets/component/week_calendar/calendar.jsx","assets/component/sala/sala.jsx","assets/component/modals/modal_parent/modal.jsx","assets/component/modals/cliente/modal_agendamento/tipos/horaAvulsa.jsx","assets/component/modals/cliente/modal_agendamento/tipos/turno.jsx","assets/component/modals/cliente/modal_agendamento/tipos/mensal.jsx","assets/component/modals/cliente/modal_agendamento/tipos/options.jsx","assets/component/modals/cliente/modal_agendamento/modalAgendamento.jsx","assets/modal_types.js","assets/component/modals/cliente/modal_detalhes_sala/detalhesSala.jsx","assets/component/alternating_tab/alt_tab.js","assets/component/Snack/snack.jsx","DAO/salaDAO.js","pages/cliente/agendamentos/index.js","assets/component/reserva_cliente/reserva_cliente.jsx","assets/component/cancel_checkbox/CancelCheckbox.jsx","pages/cliente/reservas/index.js","assets/component/hamburgerMenu/hamburgerMenu.js","assets/component/responsiveMenu/responsiveMenu.js","assets/component/adm_topbar/adm_topbar.jsx","assets/component/calendar_agendamentos/CalendarAgendamentos.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/hora_avulsa.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/turno.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/mensal.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/options.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/modal_new_agendamento_adm.jsx","assets/component/modals/administrativo/modal_edit_agendamento/EditAgendamento.jsx","pages/administrador/agendamentos/index.js","pages/administrador/dashboard/index.js","assets/component/card_log/cardLog.js","pages/administrador/logs/index.js","assets/component/card_profissional/cardProfissional.jsx","assets/component/Fab/Fab.jsx","assets/component/file_input/FileInput.js","assets/component/modals/administrativo/modal_new_profissional/modal_new_profissional.jsx","pages/administrador/profissionais/index.js","assets/component/card_administrativo/cardAdministrativo.jsx","assets/component/modals/administrativo/modal_new_administrativo/modal_new_administrativo.jsx","pages/administrador/administrativo/index.js","assets/component/card_sala/cardSala.jsx","assets/component/modals/administrativo/modal_new_salas/modal_new_salas.jsx","pages/administrador/salas/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Actions","setDatabase","setMongoClient","setUserLogged","showModal","closeModal","setProfissionais","setAdministrativo","setSalas","selectDate","selectSala","selectAgendamentos","setAgendamentos","selectAdministrador","selectProfissional","setLogs","setProfissionalReservas","initialState","database","mongoClient","modalType","userLogged","dateSelected","Date","GeneralReducer","state","action","type","payload","profissionais","profissionalSelected","profissionalReservas","ProfissionaisReducer","administradores","administradorSelected","AdministradoresReducer","salas","salaSelected","SalasReducer","agendamentos","agendamentoSelected","AgendamentosReducer","logs","LogsReducer","Store","createStore","combineReducers","general","applyMiddleware","thunk","COLLECTION","administradorDAO","db","setDb","this","create","adm","console","log","collection","insertOne","update","query","changes","updateMany","$set","delete","deleteMany","findAll","find","toArray","addUser","client","email","password","clienteData","emailPasswordClient","auth","getProviderClient","UserPasswordAuthProviderClient","factory","registerWithEmail","anonymousLogin","loginWithCredential","AnonymousCredential","userPasswordLogin","user","credentials","UserPasswordCredential","InputText","props","className","style","placeholder","onChange","step","required","disabled","defaultValue","name","label","Button","width","onClick","editing","loading","text","CheckBox","onCheck","React","useState","checked","setChecked","ModoPaisagem","clienteDAO","deleteOne","cliente","editCliente","id_cliente","edits","_id","login","sort","fixarSalaNoTopo","sala","updateOne","sala_fixa","connect","dispatch","reservas","logged","setLogged","loggedAdm","setLoggedAdm","setLoading","saveUserLogged","pwd","localStorage","setItem","alert","performLogin","senha","a","clientes","length","errorCode","useEffect","getItem","hist","useHistory","push","alt","src","require","onSubmit","e","preventDefault","target","value","to","nome","ocupacao","foto_url","removeItem","logDAO","reservaDAO","reserva","usuario","data_hora","cancelaReserva","id_reserva","cancelado","cancelaMuitasReservas","promises","i","Promise","all","executaReserva","executado","execucao_fim","pagaReserva","pago","editaReserva","comecaReserva","execucao_inicio","findReservaDeCliente","profissional_id","forEach","profissional","toString","callFunction","getAgendamentosById","agendamento_id","agendamento","getAgendamentosFromSala","array","checkIfURLIsImage","url","string","split","toLowerCase","transformStringToReais","toFixed","includes","replace","numberToHours","number","Reserva","hora_inicio","hora_fim","days","agendamentosDaSala","setAgendamentosDaSala","moment","selectedDate","subtract","isSame","map","day","index","date","toDate","locale","startOf","add","key","format","data","addReservaListener","isSameOrAfter","salaFixa","setSalaFixa","aluguelMensal","setMensal","sala_id","mes","getMonth","verificaAluguelMensal","id","place","effect","data-for","data-tip","data-iscapture","onClickDetalhesListener","isAdm","ModalParent","form","useRef","current","setTimeout","reset","show","header","ref","encType","body","footer","eSabado","getDay","selectOptions","horaInicial","isHoraFinal","setHoraInicial","horaFinal","setHoraFinal","horasFinais","setHorasFinais","classNamePrefix","options","valor_hora","selectTurno","optionsMes","setOptionMes","meses","selectMes","marginLeft","marginRight","Options","selectedPage","selectPage","page","renderPage","close","selectedTurno","selectedMes","prepareData","Number","valorTotal","handleSubmit","then","res","ModalTypes","reservaCliente","detalhesSala","adicionarAdministrador","adicionarProfissional","adicionarAgendamentoAdm","adicionarSalas","adicionarAgendamento","editarAgendamento","fotos","descricao","AlternatingTab","elements","element","selectedIndex","count","getReservasAgendadas","salaDAO","openModal","open","selectedTab","selectTab","story","x","y","ReservaCliente","propTypes","PropTypes","func","isRequired","CancelCheckbox","agnds","cancelando","setCancelando","selectedReservas","selectReservas","handleConfirmCancelamento","window","confirm","filter","arrayValue","arrayExecutados","renderHistorico","HamburgerMenu","pages","pageName","pageLabel","ResponsiveMenu","pageSelected","history","Tab","selected","children","hambOpen","setHambOpen","horas","fillHoras","Array","fill","float","hora","indexSala","isOccupied","isMonthly","agnd","start","end","rowSpan","selectProf","profissionaisOptions","setProfissionaisOptions","prof","selectedProfissional","executing","setExecuting","finalizado","setFinalizado","setPago","updateAgendamentos","DashboardPage","chart","am4core","am4charts","paddingRight","visits","Math","round","random","xAxes","renderer","grid","template","location","valueAxis","yAxes","tooltip","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","CardLog","FileInput","realUploadButton","createRef","fileName","setFileName","fileURL","setFileURL","files","URL","createObjectURL","onChangeFile","isURL","setURL","hidden","accept","display","click","urlName","profs","file","setFile","setEditing","fileUpload","formData","FormData","append","config","headers","post","newProfissional","telefone","editProfissional","removeProfissional","administrador","adms","unselectAdministrativo","newAdministrativo","editAdministrativo","removeAdministrativo","unselectSala","newSala","editSala","removeSala","App","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","setDatabaseIntoDAOs","store","path","exact","component","LoginPage","ClienteAgendamentos","MinhasReservasPage","AgendamentosAdministrador","AdministrativoPage","ProfissionaisPage","SalasPage","LogsPage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33bc2cbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/integra_logo.ffdf0581.png\";","module.exports = __webpack_public_path__ + \"static/media/preview.0a0f74fa.jpg\";","const Actions = {\r\n    setDatabase: 'SET_DATABASE',\r\n    setMongoClient: 'SET_MONGO_CLIENT',\r\n    setUserLogged: 'SET_USER_LOGGED',\r\n    showModal: 'SHOW_MODAL',\r\n    closeModal: 'CLOSE_MODAL',\r\n    setProfissionais: 'SET_PROFISSIONAIS',\r\n    setAdministrativo: 'SET_ADMS',\r\n    setSalas: 'SET_SALAS',\r\n    selectDate: 'SELECT_DATE',\r\n    selectSala: 'SELECT_SALA',\r\n    selectAgendamentos: 'SELECT_AGENDAMENTO',\r\n    setAgendamentos: 'SET_AGENDAMENTOS',\r\n    selectAdministrador: 'SELECT_ADM',\r\n    selectProfissional: 'SELECT_PROF',\r\n    setLogs: 'SET_LOGS',\r\n    setProfissionalReservas: 'SET_PROF_RESERVAS',\r\n}\r\n\r\nexport default Actions;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    database: null,\r\n    mongoClient: null,\r\n    modalType: '',\r\n    userLogged: {},\r\n    showModal: false,\r\n    dateSelected: new Date(),\r\n};\r\n\r\nconst GeneralReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.setMongoClient:\r\n            return {...state, mongoClient: action.payload};\r\n        case Actions.setDatabase:\r\n            return {...state, database: action.payload};\r\n        case Actions.setUserLogged:\r\n            return {...state, userLogged: action.payload};\r\n        case Actions.showModal:\r\n            return {...state, showModal: true, modalType: action.payload};\r\n        case Actions.closeModal:\r\n            return {...state, showModal: false};\r\n        case Actions.selectDate:\r\n            return {...state, dateSelected: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default GeneralReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    profissionais: [],\r\n    profissionalSelected: {},\r\n    //para ser usado somente no Cliente\r\n    profissionalReservas: [],\r\n}\r\n\r\nconst ProfissionaisReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setProfissionais:\r\n            return {...state, profissionais: payload};\r\n        case Actions.selectProfissional:\r\n            return {...state, profissionalSelected: payload};\r\n        case Actions.setProfissionalReservas:\r\n            return {...state, profissionalReservas: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProfissionaisReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    administradores: [],\r\n    administradorSelected: {},\r\n}\r\n\r\nconst AdministradoresReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setAdministrativo:\r\n            return {...state, administradores: payload};\r\n        case Actions.selectAdministrador:\r\n            return {...state, administradorSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AdministradoresReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    salas: [],\r\n    salaSelected: {},\r\n}\r\n\r\nconst SalasReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setSalas:\r\n            return {...state, salas: payload};\r\n        case Actions.selectSala:\r\n            return {...state, salaSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SalasReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    salaSelected: {},\r\n    agendamentos: [],\r\n    agendamentoSelected: {},\r\n};\r\n\r\nconst AgendamentosReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.selectSala:\r\n            return {...state, salaSelected: payload};\r\n        case Actions.setAgendamentos:\r\n            return {...state, agendamentos: payload};\r\n        case Actions.selectAgendamentos:\r\n            return {...state, agendamentoSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AgendamentosReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    logs: [],\r\n};\r\n\r\nconst LogsReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setLogs:\r\n            return {...state, logs: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default LogsReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport GeneralReducer from \"./reducers/general_reducer\";\r\nimport ProfissionaisReducer from \"./reducers/profissionais_reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport AdministradoresReducer from \"./reducers/administradores_reducer\";\r\nimport SalasReducer from \"./reducers/salas_reducer\";\r\nimport AgendamentosReducer from \"./reducers/agendamentos_reducer\";\r\nimport LogsReducer from \"./reducers/logs_reducer\";\r\n\r\nconst Store = createStore(combineReducers({\r\n    general: GeneralReducer,\r\n    profissionais: ProfissionaisReducer,\r\n    administradores: AdministradoresReducer,\r\n    salas: SalasReducer,\r\n    agendamentos: AgendamentosReducer,\r\n    logs: LogsReducer,\r\n}, applyMiddleware(thunk)));\r\n\r\nexport default Store;","import {AnonymousCredential, UserPasswordAuthProviderClient, UserPasswordCredential} from 'mongodb-stitch-browser-sdk';\r\n\r\nconst COLLECTION = 'administradores';\r\n\r\n/*\r\n    foto_url: string,\r\n    login: string,\r\n    nome: string,\r\n    senha: string,\r\n */\r\n\r\nconst administradorDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(adm) {\r\n        console.log('created administrador');\r\n        return this.db.collection(COLLECTION).insertOne(adm);\r\n    },\r\n    update(query, changes) {\r\n        console.log('update administrador');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(query) {\r\n        console.log('delete administrador');\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll() {\r\n        console.log('find administrador');\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    },\r\n    async addUser(client, email, password, clienteData){\r\n        console.log('add User');\r\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\r\n        await emailPasswordClient.registerWithEmail(email, password);\r\n        return this.create({ ...clienteData, email });\r\n    },\r\n    anonymousLogin(client) {\r\n        console.log('Anonymous Login');\r\n        return client.auth.loginWithCredential(new AnonymousCredential());\r\n    },\r\n    find(query) {\r\n        console.log('Query administrador');\r\n        return this.db.collection(COLLECTION).find(query).toArray();\r\n    },\r\n    userPasswordLogin(client, user, password) {\r\n        console.log('User Password Login');\r\n        const credentials = new UserPasswordCredential(user, password);\r\n        return client.auth.loginWithCredential(credentials);\r\n    }\r\n};\r\n\r\nexport default administradorDAO;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.sass';\r\n\r\nconst InputText = props => {\r\n    return (\r\n        <div className={'input_text'} style={props.style}>\r\n            <input\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                step={'0.01'}\r\n                required={props.required}\r\n                disabled={props.disabled}\r\n                defaultValue={props.defaultValue}\r\n                type={props.type ? props.type : 'text'}\r\n                name={props.name ? props.name : ''} />\r\n            <label className={'label'}>{props.label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nInputText.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    defaultValue: PropTypes.string,\r\n    style: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            type={props.type}\r\n            style={props.width ? {width: props.width} : {}}\r\n            onClick={props.onClick}\r\n            editing={props.editing}\r\n            disabled={props.loading || props.editing}\r\n            className={(props.loading || props.editing) ?\r\n                'button '+props.className+' loading' : 'button '+props.className }>\r\n            { props.loading ? 'Carregando' : (props.editing ? 'Editando' : props.text)}\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    type: PropTypes.string,\r\n    width: PropTypes.string,\r\n    editing: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.sass\";\r\n\r\nconst CheckBox = ({onCheck = () => {}, label}) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'checkbox_container'}>\r\n            <div className={checked ? 'checkbox checked' : 'checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n            </div>\r\n            <label>{label}</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CheckBox;","import React from 'react';\r\nimport \"./styles.sass\";\r\n\r\nconst ModoPaisagem = () => {\r\n    return (\r\n        <div className={'modo_paisagem'}>\r\n            <h2>Por favor, vire o seu celular! :(</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModoPaisagem;","import { UserPasswordCredential, UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nconst COLLECTION = 'clientes'\r\nconst clienteDAO = {\r\n    db: null,\r\n    setDb(db){\r\n        this.db = db;\r\n    },\r\n    async delete(query) {\r\n        console.log('delete cliente');\r\n        return this.db.collection(COLLECTION).deleteOne(query);\r\n    },\r\n    create(cliente){\r\n        console.log('create cliente');\r\n        return this.db.collection(COLLECTION).insertOne(cliente);\r\n    },\r\n    update(query, changes){\r\n        console.log('update cliente');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes});\r\n    },\r\n    editCliente(id_cliente, edits){\r\n        console.log('edit cliente');\r\n        return this.update({_id: id_cliente}, edits);\r\n    },\r\n    async addUser(client, email, password, clienteData){\r\n        console.log('add cliente user');\r\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\r\n        await emailPasswordClient.registerWithEmail(email, password);\r\n        return this.create({ ...clienteData, email });\r\n    },\r\n    login(client, email, password){\r\n        console.log('login cliente');\r\n        return client.auth.loginWithCredential(new UserPasswordCredential(email, password));\r\n    },\r\n    findAll(){\r\n        console.log('find all clientes');\r\n        return this.db.collection(COLLECTION).find({}, {sort: {'nome': 1}}).toArray();\r\n    },\r\n    find(query) {\r\n        console.log('find query clientes');\r\n        return this.db.collection(COLLECTION).find(query).toArray();\r\n    },\r\n    fixarSalaNoTopo(sala, user) {\r\n        return this.db.collection(COLLECTION).updateOne({_id: user._id}, {$set: {sala_fixa: sala._id}});\r\n    },\r\n};\r\nexport default clienteDAO;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../redux/actions/actions\";\r\nimport administradorDAO from \"../../DAO/administradorDAO\";\r\nimport './login.sass';\r\nimport InputText from \"../../assets/component/inputText/input\";\r\nimport Button from \"../../assets/component/button/button\";\r\nimport CheckBox from \"../../assets/component/checkbox/checkbox\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ModoPaisagem from \"../../assets/component/modoPaisagem/modoPaisagem\";\r\nimport clienteDAO from \"../../DAO/clienteDAO\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst LoginPage = ({mongoClient, userLogged, setUserLogged}) => {\r\n\r\n    const [logged, setLogged] = React.useState(false);\r\n    const [loggedAdm, setLoggedAdm] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const saveUserLogged = (email, pwd) => {\r\n        if (checked) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('pwd', pwd);\r\n            alert(\"Adicionado ao local storage\");\r\n        }\r\n    }\r\n\r\n    const performLogin = async (email, senha) => {\r\n        let [clientes, administradores] = [[], []];\r\n        setLoading(true);\r\n        try {\r\n            await clienteDAO.login(mongoClient, email, senha);\r\n            clientes = await clienteDAO.find({email: email});\r\n            if (clientes.length > 0) {\r\n                setLogged(true);\r\n                setUserLogged(clientes[0]);\r\n                saveUserLogged(email, senha);\r\n            } else {\r\n                administradores = await administradorDAO.find({email: email});\r\n                if (administradores.length > 0) {\r\n                    setLoggedAdm(true);\r\n                    setUserLogged(administradores[0]);\r\n                    saveUserLogged(email, senha);\r\n                } else {\r\n                    alert('Erro interno. Por favor, contate os desenvolvedores.');\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            if (err.errorCode === 46) {\r\n                alert('Usuário ou senha inválidos.');\r\n            } else {\r\n                alert('Erro desconhecido! Log do erro '+ err);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let [email, senha] = [localStorage.getItem('email'), localStorage.getItem('pwd')];\r\n        if (mongoClient)\r\n            if (email && senha)\r\n                performLogin(email, senha);\r\n    }, [mongoClient]);\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if ('nome' in userLogged) {\r\n            setLoading(true);\r\n            if ('ocupacao' in userLogged)\r\n                hist.push('/agendamentos');\r\n            else\r\n                hist.push('/agendamento_adm');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [userLogged]);\r\n\r\n    return (\r\n        <div className={'login_container'}>\r\n            <ModoPaisagem />\r\n            <div className={'ball'} />\r\n            <div className={'logo_container'}>\r\n                <img\r\n                    alt={'integra_logo'}\r\n                    src={require('../../assets/integra_logo.png')} />\r\n                <p>Sistema de Gerenciamento</p>\r\n            </div>\r\n            <div className={'login'}>\r\n                <h1>Login</h1>\r\n                <div className={'card'}>\r\n                    <form onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        await performLogin(e.target.email.value, e.target.senha.value);\r\n                        setLoading(false);\r\n                    }}>\r\n                        <InputText\r\n                            name={'email'}\r\n                            label={'E-mail'}\r\n                            placeholder={'Ex: joao@example.com'} />\r\n                        <InputText\r\n                            name={'senha'}\r\n                            label={'Senha'}\r\n                            type={'password'}\r\n                            placeholder={'Informe sua senha'} />\r\n                        <CheckBox\r\n                            onCheck={ checked => {\r\n                                setChecked(!checked)\r\n                            }}\r\n                            label={'Manter-me Conectado'} />\r\n                        <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                    </form>\r\n                    {logged && <Redirect to={'/agendamentos'} />}\r\n                    {loggedAdm && <Redirect to={'/agendamento_adm'} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    database: state.general.database,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user =>\r\n        dispatch({type: Actions.setUserLogged, payload: user}),\r\n    //Para uso somente no login do cliente.\r\n    setProfissionalReservas: reservas =>\r\n        dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"../button/button\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ClienteTopbar = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        props.setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className={'topbar_container'}>\r\n            <div className={'img_container'}>\r\n                <img\r\n                    alt={'logo'}\r\n                    src={require('../../integra_logo.png')} />\r\n            </div>\r\n            <div className={'titulo'}>\r\n                <h2>Portal da Equipe</h2>\r\n                <h4>Agendamentos</h4>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>{props.userLogged ? props.userLogged.nome : 'Catherine Torres'}</h2>\r\n                    <h4>{props.userLogged ? props.userLogged.ocupacao : 'Fisioterapeuta'}</h4>\r\n                </div>\r\n            </div>\r\n            <img\r\n                alt={'profile_pic'}\r\n                className={'profile_pic'} src={\r\n                    props.userLogged ?\r\n                        props.userLogged.foto_url : 'https://randomuser.me/api/portraits/women/43.jpg'} />\r\n                        <Button\r\n                            onClick={() => {\r\n                                logout();\r\n                            }}\r\n                            width={'5%'}\r\n                            text={<i className={'fas fa-door-open'}/>}\r\n                            className={'log-off'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nClienteTopbar.propTypes = {\r\n    usuario: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteTopbar);","const COLLECTION = 'logs';\r\n\r\nconst logDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n      this.db = db;\r\n    },\r\n    create(log){\r\n        console.log('create login');\r\n        return this.db.collection(COLLECTION).insertOne(log);\r\n    },\r\n    findAll(){\r\n        console.log('find all logs');\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default logDAO;","import logDAO from \"./logDAO\";\r\n\r\nconst COLLECTION = 'reservas'\r\nconst reservaDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n\r\n        this.db = db;\r\n    },\r\n    create(reserva, userLogged = null) {\r\n        if (userLogged) {\r\n            console.log('Create reserva');\r\n            logDAO.create({usuario: userLogged, log: 'Adicionou uma reserva', data_hora: new Date()})\r\n        }\r\n        return this.db.collection(COLLECTION).insertOne(reserva);\r\n    },\r\n    update(query, changes) {\r\n        console.log('Update reserva');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes});\r\n    },\r\n    cancelaReserva(id_reserva) {\r\n        console.log('Cancela reserva');\r\n        return this.update({_id: id_reserva}, {cancelado: true});\r\n    },\r\n    cancelaMuitasReservas(reservas) {\r\n        console.log('Cancela muita reserva');\r\n        const promises = [];\r\n        for (let i = 0; i < reservas.length; i++) {\r\n            promises.push(this.cancelaReserva(reservas[i]._id));\r\n        }\r\n        return Promise.all(promises);\r\n    },\r\n    executaReserva(id_reserva) {\r\n        console.log('Executa reserva');\r\n        return this.update({_id: id_reserva}, {executado: true, execucao_fim: new Date()});\r\n    },\r\n    pagaReserva(id_reserva) {\r\n        console.log('Paga reserva');\r\n        return this.update({_id: id_reserva}, {pago: true});\r\n    },\r\n    editaReserva(id_reserva, edits) {\r\n        console.log('Edita reserva');\r\n        return this.update({_id: id_reserva}, edits);\r\n    },\r\n    comecaReserva(id_reserva) {\r\n        console.log('Começa a executar a reserva');\r\n        return this.update({_id: id_reserva}, {execucao_inicio: new Date()});\r\n    },\r\n    findReservaDeCliente(profissional_id, reservas) {\r\n        console.log('Find Reserva de Cliente');\r\n        let profissionalReservas = [];\r\n        reservas.forEach(reserva => {\r\n            if (reserva.profissional) {\r\n                if (reserva.profissional._id.toString() === profissional_id.toString())\r\n                    profissionalReservas.push(reserva);\r\n            }\r\n        });\r\n        return profissionalReservas;\r\n    },\r\n    findAll(client) {\r\n        console.log('Find All de Cliente');\r\n        return client.callFunction('getAgendamentos');\r\n    },\r\n    getAgendamentosById(agendamentos, agendamento_id) {\r\n        let agendamentoSelected = null;\r\n        agendamentos.forEach(agendamento => {\r\n            if (agendamento._id.toString() === agendamento_id.toString()) {\r\n                agendamentoSelected = agendamento;\r\n            }\r\n        });\r\n        return agendamentoSelected;\r\n    },\r\n    getAgendamentosFromSala(agendamentos, sala) {\r\n        console.log('get Agendamentos da sala');\r\n        let array = [];\r\n        agendamentos.forEach(agendamento => {\r\n            if ('sala' in agendamento) {\r\n                if (sala.nome === agendamento.sala.nome) {\r\n                    array.push(agendamento);\r\n                }\r\n            }\r\n        });\r\n        return array;\r\n    }\r\n};\r\n\r\nexport default reservaDAO;","const checkIfURLIsImage = url => {\r\n    let string = url.split('.');\r\n    if (string.length > 0) {\r\n        return (string[string.length - 1].toLowerCase() === 'jpg' ||\r\n            string[string.length - 1].toLowerCase() === 'jpeg' ||\r\n            string[string.length - 1].toLowerCase() === 'gif' ||\r\n            string[string.length - 1].toLowerCase() === 'png');\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst transformStringToReais = string => {\r\n    if (typeof string == 'number') {\r\n        string = string.toFixed(2);\r\n    }\r\n    string = 'R$ ' + string;\r\n    if (string.includes('.') || string.includes(',')) {\r\n        string = string.replace('.', ',');\r\n    } else {\r\n        string = string + ',00';\r\n    }\r\n    return string;\r\n};\r\n\r\nconst transformReaisToFloat = string => {\r\n    string = string.replace(',', '.');\r\n    string = string.replace('R$ ', '');\r\n    return Number(string);\r\n};\r\n\r\nconst numberIsBetween = (number, start, end) => {\r\n    return (number >= start) && (number < end);\r\n}\r\n\r\nconst numberToHours = number => {\r\n    return number+\":00\";\r\n}\r\n\r\nconst removeElementFromArray = (arr, value) => {\r\n    const filter = (arrayValue) => {\r\n        return arrayValue !== value;\r\n    }\r\n    return arr.filter(filter);\r\n};\r\n\r\nconst findInArrayAndReturnIndex = (arr, key) => {\r\n    for (let i = 0; i < arr.length; i++)\r\n        if (arr[i] === key)\r\n            return i\r\n}\r\n\r\nconst sendToTopArray = (arr, key) => {\r\n    let first = key;\r\n    arr.sort(function(x,y){ return x === first ? -1 : y === first ? 1 : 0; });\r\n}\r\n\r\nexport {checkIfURLIsImage,\r\n    removeElementFromArray,\r\n    transformStringToReais,\r\n    transformReaisToFloat,\r\n    numberIsBetween,\r\n    numberToHours};","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport moment from \"moment/min/moment-with-locales.min\";\r\nimport {connect} from \"react-redux\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport {numberToHours} from \"../../AuxFunctions\";\r\n\r\nconst Reserva = props => {\r\n    return (\r\n        <div className={'reserva'}>\r\n            <i><h2>Reservado</h2></i>\r\n            <h4>{numberToHours(props.reserva.hora_inicio)} ~ {numberToHours(props.reserva.hora_fim)}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst days = ['Dom','Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\r\n\r\nconst WeekCalendar = props => {\r\n\r\n    const [agendamentosDaSala, setAgendamentosDaSala] = React.useState([]);\r\n    const [selectedDate, selectDate] = React.useState(moment());\r\n\r\n    React.useEffect(() => {\r\n        setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n    }, [props]);\r\n\r\n    return (\r\n        <div className={'container_week'}>\r\n            <div\r\n                onClick={() => {\r\n                    setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n                    selectDate(selectedDate.subtract(1, 'week'));\r\n                }}\r\n                className={selectedDate.isSame(new Date(), 'week') ? 'chevron hidden' : 'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-left'}/>\r\n                </p>\r\n            </div>\r\n            {days.map((day, index) => {\r\n\r\n                let date = moment(selectedDate.toDate()).locale('pt-BR').startOf('week').add(index, 'days');\r\n\r\n                return (\r\n                    <div\r\n                        key={day}\r\n                        className={'week_day'}>\r\n                        <h1 className={date.isSame(new Date(), 'day') ? 'today': ''}>{day}</h1>\r\n                        <h3 className={date.isSame(new Date(), 'day') ? 'today': ''}>{date.format('DD/MMM')}</h3>\r\n                        {\r\n                            agendamentosDaSala.map((agendamento, index) => {\r\n                                if (date.isSame(agendamento.data, 'day') && !agendamento.cancelado) {\r\n                                    if ('mes' in agendamento) {\r\n                                        if (date.isSame(new Date(), 'day')) {\r\n                                            return (\r\n                                                <div\r\n                                                    onClick={() => props.addReservaListener(date)}\r\n                                                    className={'add'}>\r\n                                                    <span>+</span>\r\n                                                </div>\r\n                                            )\r\n                                        } else {\r\n                                            return <></>\r\n                                        }\r\n                                    }\r\n                                    return <Reserva key={index} reserva={agendamento}/>\r\n                                } else {\r\n                                    return <></>\r\n                                }\r\n                            })\r\n                        }\r\n                        {\r\n                            date.isSameOrAfter(new Date(), 'day') ?\r\n                            (<div\r\n                            onClick={() => props.addReservaListener(date)}\r\n                            className={'add'}>\r\n                            <span>+</span>\r\n                            </div>) : <></>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n            <div\r\n                onClick={() => {\r\n                    setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n                    selectDate(selectedDate.add(1, 'week'));\r\n                }}\r\n                className={selectedDate.isSame(moment().add(2, 'week'), 'week') ? 'chevron hidden' : 'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-right'}/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeekCalendar.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    sala: PropTypes.object,\r\n    addReservaListener: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nexport default connect(mapStateToProps)(WeekCalendar);","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport WeekCalendar from \"../week_calendar/calendar\";\r\nimport PropTypes from 'prop-types';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {connect} from \"react-redux\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\n\r\nconst Sala = props => {\r\n\r\n    const [salaFixa, setSalaFixa] = React.useState(false);\r\n    const [aluguelMensal, setMensal] = React.useState(false);\r\n\r\n    const verificaAluguelMensal = () => {\r\n        for (let i = 0; i < props.agendamentos.length; i++) {\r\n            if ('mes' in props.agendamentos[i]) {\r\n                if (props.agendamentos[i].sala_id.toString() === props.sala._id.toString()\r\n                    && props.agendamentos[i].mes.getMonth() === new Date().getMonth())\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if ('sala_fixa' in props.userLogged && '_id' in props.sala) {\r\n            setSalaFixa(props.sala._id.toString() === props.userLogged.sala_fixa.toString());\r\n        }\r\n        setMensal(verificaAluguelMensal());\r\n    }, [props]);\r\n    return (\r\n        <div className={'sala_content'}>\r\n            <ReactTooltip id='main' place={'left'} type={'info'} effect={'solid'}/>\r\n            <div className={'sala_container'}>\r\n                <div>\r\n                    <h1>\r\n                        <span\r\n                            className={salaFixa ? 'fixa' : ''}\r\n                            onClick={async () => {\r\n                                await clienteDAO.fixarSalaNoTopo(props.sala, props.userLogged);\r\n                                props.setUserLogged({...props.userLogged, sala_fixa: props.sala._id});\r\n                            }}\r\n                            data-for={'main'} data-tip={'Fixar no Topo'} data-iscapture={'true'}>\r\n                             <i className={'fas fa-thumbtack'}/> {'\\u00A0'}\r\n                        </span>\r\n                        {props.sala.nome}\r\n                    </h1>\r\n                    <p>Horários Reservados</p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        className={'btn_detalhes'}\r\n                        text={'Detalhes'}\r\n                        onClick={props.onClickDetalhesListener}/>\r\n                </div>\r\n            </div>\r\n            { aluguelMensal ?\r\n                <h2 className={'aluguel_mensal'}>Esta sala está alugada por todo o mês e não está disponível para agendamentos.</h2>\r\n                :\r\n                <WeekCalendar sala={props.sala} isAdm={props.isAdm} addReservaListener={props.addReservaListener}/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nSala.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    addReservaListener: PropTypes.func,\r\n    onClickDetalhesListener: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sala);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst ModalParent = props => {\r\n\r\n    const form = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        if (form.current) {\r\n            setTimeout(() => {\r\n                if (form.current) {\r\n                    form.current.reset();\r\n                }\r\n            }, 300);\r\n        }\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div className={props.show ? 'modal_container' : 'modal_container hidden'}>\r\n            {props.header}\r\n            <form ref={form} onSubmit={props.onSubmit} encType={'multipart/form-data'}>\r\n                <div>\r\n                    {props.body}\r\n                </div>\r\n                {props.footer}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nModalParent.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func,\r\n    header: PropTypes.element,\r\n    body: PropTypes.element,\r\n    footer: PropTypes.element,\r\n    onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ModalParent;","import React from 'react';\r\nimport Select from \"react-select\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../../AuxFunctions\";\r\n\r\nconst HoraAvulsaCliente = props => {\r\n\r\n    const eSabado = () => {\r\n        return (props.dateSelected.getDay() === 6);\r\n    }\r\n\r\n    const selectOptions = (horaInicial, isHoraFinal = false) => {\r\n        let array = [];\r\n        for (let i = horaInicial; i < (isHoraFinal ? (eSabado() ? 13 : 21 ) : (eSabado() ? 12 : 20)); i++) {\r\n            array.push({label: i+':00', value: i});\r\n        }\r\n        return array;\r\n    };\r\n    const [horaInicial, setHoraInicial] = React.useState(0);\r\n    const [horaFinal, setHoraFinal] = React.useState(0);\r\n    const [horasFinais, setHorasFinais] = React.useState(selectOptions(8));\r\n\r\n    return (\r\n        <div>\r\n            <div className={'horas_intervalo'}>\r\n                <div>\r\n                    <h2>Hora Inicial</h2>\r\n                    <Select\r\n                        name={'hora_inicio'}\r\n                        onChange={e => {\r\n                            setHorasFinais(selectOptions(e.value + 1, true));\r\n                            setHoraInicial(e.value);\r\n                        }}\r\n                        classNamePrefix={'Select'}\r\n                        options={selectOptions(8)}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Hora Final</h2>\r\n                    <Select\r\n                        onChange={e => setHoraFinal(e.value)}\r\n                        name={'hora_fim'}\r\n                        classNamePrefix={'Select'} options={horasFinais}/>\r\n                </div>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>{transformStringToReais(props.salaSelected.valor_hora)}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>{transformStringToReais(horaFinal === 0 ? 0 : props.salaSelected.valor_hora * (horaFinal - horaInicial))}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salaSelected: state.salas.salaSelected,\r\n    dateSelected: state.general.dateSelected,\r\n})\r\n\r\nexport default connect(mapStateToProps)(HoraAvulsaCliente);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TurnoCliente = props => {\r\n\r\n    const optionsTurno = [{\r\n        label: '08:00h às 13:00h', value: {\r\n            hora_inicio: 8,\r\n            hora_fim: 13,\r\n        },\r\n    }, {\r\n        label: '14:00h às 18:00h', value: {\r\n            hora_inicio: 14,\r\n            hora_fim: 18,\r\n        },\r\n    }, {\r\n        label: '15:00h às 19:00h', value: {\r\n            hora_inicio: 15,\r\n            hora_fim: 19,\r\n        },\r\n    }, {\r\n        label: '16:00h às 20:00h', value: {\r\n            hora_inicio: 16,\r\n            hora_fim: 20,\r\n        },\r\n    }];\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <h2>Duração do Turno</h2>\r\n                <Select\r\n                    onChange={e => props.selectTurno(e.value)}\r\n                    name={'hora_turno'}\r\n                    placeholder={'Selecione o Horário do Turno'}\r\n                    options={optionsTurno}/>\r\n                <div className={'resume_container'}>\r\n                    <div>\r\n                        <h2>Valor/Hora</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Valor Total:</h2>\r\n                        <h3>R$139,90</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTurnoCliente.propTypes = {\r\n    selectTurno: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TurnoCliente);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst MensalCliente = props => {\r\n\r\n    const [optionsMes, setOptionMes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let meses = [];\r\n        for (let i = 1; i < 4; i++)\r\n            meses.push({\r\n                label: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n                value: moment(new Date()).locale('pt-BR').add(i, 'month').toDate(),\r\n            });\r\n        setOptionMes(meses);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <h2>Mês a ser Solicitado</h2>\r\n                <Select\r\n                    onChange={e => {\r\n                        props.selectMes(e.value);\r\n                        console.log(e.value);\r\n                    }}\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Mês a ser solicitado'}\r\n                    options={optionsMes}/>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor Mensal:</h2>\r\n                    <h3>R$139,90</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MensalCliente);","import React from 'react';\r\nimport HoraAvulsaCliente from \"./horaAvulsa\";\r\nimport TurnoCliente from \"./turno\";\r\nimport MensalCliente from \"./mensal\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Options = ({selectedPage, selectPage, selectTurno, selectMes}) => {\r\n\r\n    const renderPage = page => {\r\n        switch (page) {\r\n            case 'Hora Avulsa':\r\n                return (<HoraAvulsaCliente />);\r\n            case 'Turno':\r\n                return (<TurnoCliente selectTurno={selectTurno}/>);\r\n            case 'Mensal':\r\n                return (<MensalCliente selectMes={selectMes}/>);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={'options'}>\r\n                <div\r\n                    onClick={() => selectPage('Hora Avulsa')}\r\n                    className={(selectedPage === 'Hora Avulsa')\r\n                        ? 'option selected' : 'option'}>\r\n                    <p>Hora Avulsa</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Turno')}\r\n                    className={(selectedPage === 'Turno') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Turno</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Mensal')}\r\n                    className={(selectedPage === 'Mensal') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Mensal</p>\r\n                </div>\r\n            </div>\r\n            {renderPage(selectedPage)}\r\n        </div>\r\n    );\r\n};\r\n\r\nOptions.propTypes = {\r\n    selectedPage: PropTypes.string.isRequired,\r\n    selectPage: PropTypes.func.isRequired,\r\n    selectTurno: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Options;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../../../button/button\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Options from \"./tipos/options\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\n\r\nconst ModalAgendamento = ({\r\n                              show,\r\n                              close,\r\n                              dateSelected,\r\n                              userLogged,\r\n                              salaSelected,\r\n                              setAgendamentos,\r\n                              mongoClient,\r\n                              agendamentos,\r\n                              setProfissionalReservas\r\n                          }) => {\r\n\r\n        const [loading, setLoading] = React.useState(false);\r\n        const [selectedPage, selectPage] = React.useState('Hora Avulsa');\r\n        const [selectedTurno, selectTurno] = React.useState({});\r\n        const [selectedMes, selectMes] = React.useState(null);\r\n\r\n        const prepareData = form => {\r\n            let data = {\r\n                profissional_id: userLogged._id,\r\n                sala_id: salaSelected._id,\r\n                data: dateSelected,\r\n                cancelado: false,\r\n                pago: false,\r\n                executado: false,\r\n            };\r\n            switch (selectedPage) {\r\n                case 'Hora Avulsa':\r\n                    return {\r\n                        ...data,\r\n                        hora_inicio: Number(form.hora_inicio.value),\r\n                        hora_fim: Number(form.hora_fim.value),\r\n                        valorTotal: Number((salaSelected.valor_hora *\r\n                            (Number(form.hora_fim.value) - Number(form.hora_inicio.value))).toFixed(2)),\r\n                    };\r\n                case 'Turno':\r\n                    return {\r\n                        ...data,\r\n                        ...selectedTurno,\r\n                        valorTotal: salaSelected.valor_hora * (selectedTurno.hora_fim - selectedTurno.hora_inicio)\r\n                    }\r\n                case 'Mensal':\r\n                    return {\r\n                        ...data,\r\n                        mes: selectedMes,\r\n                        valorTotal: 3500\r\n                    }\r\n            }\r\n        }\r\n\r\n        const handleSubmit = async e => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            setLoading(true);\r\n            let data = prepareData(form);\r\n            await reservaDAO.create(data, userLogged);\r\n            setLoading(false);\r\n            alert('Adicionado com sucesso!');\r\n            close();\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            if (mongoClient) {\r\n                reservaDAO.findAll(mongoClient).then(res => {\r\n                    setAgendamentos(res);\r\n                    if ('nome' in userLogged) {\r\n                        setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, res));\r\n                    }\r\n                });\r\n            }\r\n        }, [mongoClient]);\r\n\r\n        return (\r\n            <ModalParent show={show}\r\n                         onSubmit={handleSubmit}\r\n                         header={<header>\r\n                             <div>\r\n                                 <h1>Adicionar Reserva</h1>\r\n                                 <h3>\r\n                                     {moment(dateSelected).locale('pt-BR')\r\n                                         .format('DD [de] MMMM [de] YYYY')} - {salaSelected.nome}\r\n                                 </h3>\r\n                             </div>\r\n                             <div className={'close_container'} onClick={close}>\r\n                                 <i className={'fa fa-times'}/>\r\n                             </div>\r\n                         </header>}\r\n                         body={<div>\r\n                             <Options\r\n                                 selectedPage={selectedPage}\r\n                                 selectPage={selectPage}\r\n                                 selectMes={selectMes}\r\n                                 selectTurno={selectTurno}/>\r\n                         </div>}\r\n                         footer={\r\n                             <div className={'footer'}>\r\n                                 <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                             </div>}/>\r\n        )\r\n    }\r\n;\r\n\r\nModalAgendamento.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dateSelected: state.general.dateSelected,\r\n    salaSelected: state.salas.salaSelected,\r\n    userLogged: state.general.userLogged,\r\n    mongoClient: state.general.mongoClient,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAgendamento);","const ModalTypes = {\r\n    reservaCliente: 'RESERVA_CLIENTE',\r\n    detalhesSala: 'DETALHES_SALA',\r\n    adicionarAdministrador: 'ADD_ADM',\r\n    adicionarProfissional: 'ADD_PROF',\r\n    adicionarAgendamentoAdm: 'ADD_TASK_ADM',\r\n    adicionarSalas: 'ADD_SALAS',\r\n    adicionarAgendamento: 'ADD_AGENDAMENTO',\r\n    editarAgendamento: 'EDIT_AGENDAMENTO_ADM',\r\n};\r\n\r\nexport default ModalTypes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport \"./styles.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalDetalhesSala = props => {\r\n\r\n\r\n    const renderImage = () => {\r\n        if ('fotos' in props.salaSelected)\r\n        {\r\n            return (\r\n                <div className={'carrousel'}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                    {props.salaSelected ? <img alt={''} src={props.salaSelected.fotos[0]}/> : <></>}\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <h1>Detalhes - {props.salaSelected.nome}</h1>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'modal_sala_body'}>\r\n                    {renderImage()}\r\n                <div className={'sala_details'}>\r\n                    <div>\r\n                        <h2>Valor/Hora:</h2>\r\n                        <h3>{transformStringToReais(props.salaSelected.valor_hora)}</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>No espaço contém:</h2>\r\n                        <h3>{props.salaSelected.descricao}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        />\r\n    )\r\n};\r\n\r\nModalDetalhesSala.propTypes = {\r\n    sala: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salaSelected: state.salas.salaSelected,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ModalDetalhesSala);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\n\r\nconst AlternatingTab = props => {\r\n    return (\r\n        <div className={'alternating_tabs'}>\r\n            {\r\n                props.elements.map((element, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={index === props.selectedIndex ? 'selected' : ''}\r\n                        onClick={element.onClick}>\r\n                        <h2>{element.name}</h2>\r\n                    </div>\r\n                ))\r\n            }\r\n            {(props.selectedIndex === 0) ? <Redirect to='agendamentos' /> : <></>}\r\n            {(props.selectedIndex === 1) ? <Redirect to='minhas_reservas' /> : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nAlternatingTab.propTypes = {\r\n    selectedIndex: PropTypes.number.isRequired,\r\n    elements: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AlternatingTab;\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Snack = props => {\r\n\r\n    const getReservasAgendadas = () => {\r\n        let count = 0;\r\n        props.profissionalReservas.forEach(reserva => {\r\n            if (!reserva.cancelado && !reserva.executado)\r\n                count++;\r\n        })\r\n        return count;\r\n    }\r\n    return (\r\n        <div className={'snack_container'}>\r\n            <h2>Você tem {getReservasAgendadas()} reservas agendadas</h2>\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionalReservas: state.profissionais.profissionalReservas,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Snack);","const COLLECTION = 'salas'\r\n\r\nconst salaDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(sala){\r\n        return this.db.collection(COLLECTION).insertOne(sala);\r\n    },\r\n    update(query, changes) {\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(query) {\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll() {\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default salaDAO;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport Sala from \"../../../assets/component/sala/sala\";\r\nimport \"./agenda.sass\";\r\nimport ModalAgendamento from \"../../../assets/component/modals/cliente/modal_agendamento/modalAgendamento\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalDetalhesSala from \"../../../assets/component/modals/cliente/modal_detalhes_sala/detalhesSala\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ModoPaisagem from \"../../../assets/component/modoPaisagem/modoPaisagem\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ClienteAgendamentos = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(0);\r\n\r\n    const story = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!('nome' in props.userLogged))\r\n            story.push('/');\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if (clienteDAO.db && 'nome' in props.userLogged) {\r\n            salaDAO.findAll().then(res => {\r\n                if ('sala_fixa' in props.userLogged) {\r\n                    let salaFixa = props.userLogged.sala_fixa.toString();\r\n                    res.sort(function(x,y){ return x._id.toString() == salaFixa ? -1 : y._id.toString() == salaFixa ? 1 : 0; });\r\n                }\r\n                props.setSalas(res);\r\n            });\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n                props.setProfissionalReservas(reservaDAO.findReservaDeCliente(props.userLogged._id, res));\r\n            });\r\n        }\r\n    }, [props.client]);\r\n\r\n    return (\r\n        <div>\r\n            <ModoPaisagem/>\r\n            <ModalAgendamento\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.reservaCliente}\r\n            />\r\n            <ModalDetalhesSala\r\n                close={() => props.closeModal()}\r\n                show={props.showModal && props.modalType === ModalTypes.detalhesSala}\r\n            />\r\n            <ClienteTopbar/>\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => {\r\n                        selectTab(1)\r\n                    },\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_salas'}>\r\n                {\r\n                    props.salas.map((sala, index) => (\r\n                        <Sala\r\n                            sala={sala}\r\n                            key={index}\r\n                            onClickDetalhesListener={() => {\r\n                                props.selectSala(sala)\r\n                                props.openModal(ModalTypes.detalhesSala);\r\n                            }}\r\n                            addReservaListener={date => {\r\n                                props.selectDate(date.toDate());\r\n                                console.log(date.toDate());\r\n                                props.selectSala(sala);\r\n                                props.openModal(ModalTypes.reservaCliente)\r\n                            }}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    salas: state.salas.salas,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    selectDate: date => dispatch({type: Actions.selectDate, payload: date}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteAgendamentos)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport moment from 'moment/min/moment-with-locales.min';\r\nimport {numberToHours} from \"../../AuxFunctions\";\r\n\r\nconst ReservaCliente = props => {\r\n    if (props.reserva.cancelado) {\r\n        return <></>\r\n    } else {\r\n        return (\r\n            <div className={props.executado ? 'container_reserva_cliente executado' : 'container_reserva_cliente'}>\r\n                <div>\r\n                    <h1>{moment(props.reserva.data).format('DD/MM/YYYY')}</h1>\r\n                    <h4>{'mes' in props.reserva ? (<i>Alugado por todo o Mês de {moment(props.reserva.mes).locale('pt-BR').format('MMMM')}</i>) :\r\n                        <div>{numberToHours(props.reserva.hora_inicio)} ~ {numberToHours(props.reserva.hora_fim)}</div>}</h4>\r\n                </div>\r\n                <div>\r\n                    <h4>Sala</h4>\r\n                    <h1>{'sala' in props.reserva ? props.reserva.sala.nome : 'Sem nome'}</h1>\r\n                </div>\r\n                <div>\r\n                    <h4>Situação</h4>\r\n                    <h2>{props.reserva.pago ? 'Pago' : 'Pendente'}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReservaCliente.propTypes = {\r\n    executado: PropTypes.bool,\r\n}\r\n\r\nexport default ReservaCliente;","import PropTypes from \"prop-types\";\r\nimport CheckBox from \"../checkbox/checkbox\";\r\nimport React from \"react\";\r\nimport './CancelCheckbox.sass';\r\n\r\nconst CancelCheckbox = ({ onCheck }) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'cancel_checkbox_container'}>\r\n            <div className={checked ? 'cancel_checkbox checked' : 'cancel_checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n                <i className={'fas fa-check'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CancelCheckbox;","import React from 'react';\r\nimport './reservas.sass';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ReservaCliente from \"../../../assets/component/reserva_cliente/reserva_cliente\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CancelCheckbox from \"../../../assets/component/cancel_checkbox/CancelCheckbox\";\r\nimport {removeElementFromArray} from \"../../../assets/AuxFunctions\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\n\r\nconst MinhasReservasPage = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(1);\r\n    const [cancelando, setCancelando] = React.useState(false);\r\n    const [selectedReservas, selectReservas] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!('nome' in props.userLogged)) {\r\n            hist.push('/');\r\n        }\r\n    });\r\n\r\n    const renderHistorico = () => {\r\n        let arrayExecutados = [];\r\n        props.profissionalReservas.forEach(reserva => {\r\n            if (reserva.executado)\r\n                arrayExecutados.push(reserva);\r\n        });\r\n        if (arrayExecutados > 0) {\r\n            return arrayExecutados.map((reserva, index) => (\r\n                <ReservaCliente reserva={reserva} executado key={index}/>\r\n            ))\r\n        } else {\r\n            return <h2 className={'empty_array'}>Não há agendamentos executados até o momento.</h2>\r\n        }\r\n    };\r\n\r\n    const handleConfirmCancelamento = async () => {\r\n        if (window.confirm(\"Você tem certeza que deseja cancelar esses agendamentos?\")) {\r\n            setLoading(true);\r\n            try {\r\n                await reservaDAO.cancelaMuitasReservas(selectedReservas);\r\n                const reservas = await reservaDAO.findAll(props.mongoClient);\r\n                props.setAgendamentos(reservas);\r\n                props.setProfissionalReservas(reservaDAO.findReservaDeCliente(props.userLogged._id, reservas));\r\n                alert(\"Cancelamento realizado com sucesso!\");\r\n            } catch (err) {\r\n                alert(\"Erro! Informações: \"+err);\r\n            }\r\n            setLoading(false);\r\n            setCancelando(false);\r\n        }\r\n    };\r\n\r\n    const renderReservas = () => {\r\n        if (props.profissionalReservas.length > 0) {\r\n            return props.profissionalReservas.map((reserva, index) => {\r\n                if (!reserva.executado && !reserva.cancelado)\r\n                    return (\r\n                        <div className={cancelando ? 'flex flex_margin' : 'flex'}>\r\n                            {cancelando ? <CancelCheckbox onCheck={checked => {\r\n                                if (!checked) {\r\n                                    //Se estiver marcado\r\n                                    selectReservas([...selectedReservas, reserva]);\r\n                                } else {\r\n                                    // Se não estiver\r\n                                    selectReservas(removeElementFromArray(selectedReservas, reserva));\r\n                                }\r\n                            }}/> : <></>}\r\n                            <ReservaCliente reserva={reserva} key={index}/>\r\n                        </div>\r\n                    );\r\n                else\r\n                    return <></>\r\n            })\r\n        } else {\r\n            return <h2 className={'empty_array'}>Não há agendamentos marcados até o momento.</h2>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'reservas_page_container'}>\r\n            <ClienteTopbar/>\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => selectTab(1),\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_reservas'}>\r\n                <div className={'flex'}>\r\n                    <h1 className={'title'}>Minhas Reservas</h1>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setCancelando(!cancelando)\r\n                        }}\r\n                        className={'cancelar_agendamentos'}\r\n                        text={cancelando ? 'Parar Cancelamento' : 'Cancelar Agendamentos'}/>\r\n                </div>\r\n                {\r\n                    renderReservas()\r\n                }\r\n                {cancelando ? <Button\r\n                    onClick={handleConfirmCancelamento}\r\n                    text={'Confirmar Cancelamento'}\r\n                    loading={loading}\r\n                    className={'cancelar_button'} />: <></>}\r\n                <h1 className={'title'}>Histórico</h1>\r\n                {\r\n                    renderHistorico()\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n    mongoClient: state.general.mongoClient,\r\n    profissionalReservas: state.profissionais.profissionalReservas,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAgendamentos: agnds => dispatch({type: Actions.setAgendamentos, payload: agnds}),\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MinhasReservasPage);","import React from 'react';\r\nimport './hamburgerMenu.sass';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HamburgerMenu = props => {\r\n    return (\r\n        <div className={'hamburger_container'} onClick={props.onClick}>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nHamburgerMenu.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default HamburgerMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './responsiveMenu.sass';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst pages = [{\r\n    pageName: 'dashboard',\r\n    pageLabel: 'Dashboard',\r\n}, {\r\n    pageName: 'agendamento_adm',\r\n    pageLabel: 'Agendamentos',\r\n}, {\r\n    pageName: 'administrativo',\r\n    pageLabel: 'Administrativo',\r\n}, {\r\n    pageName: 'logs',\r\n    pageLabel: 'Logs'\r\n}, {\r\n  pageName: 'Salas',\r\n  pageLabel: 'Salas',\r\n}, {\r\n    pageName: 'profissionais',\r\n    pageLabel: 'Profissionais'\r\n},];\r\n\r\nconst ResponsiveMenu = ({pageSelected, onClick, open}) => {\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <div className={'responsive_menu ' + (open ? 'open': '')}>\r\n            <ul>\r\n                {pages.map((page, index) => (\r\n                    <li\r\n                        key={index}\r\n                        onClick={() => {\r\n                            onClick();\r\n                            history.push(page.pageName)\r\n                        }}\r\n                        className={pageSelected === page.pageName ? 'selected' : ''}>\r\n                        {page.pageLabel}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nResponsiveMenu.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n    open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ResponsiveMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport HamburgerMenu from \"../hamburgerMenu/hamburgerMenu\";\r\nimport ResponsiveMenu from \"../responsiveMenu/responsiveMenu\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport Button from \"../button/button\";\r\n\r\nconst Tab = props => {\r\n    const story = useHistory();\r\n\r\n    return (\r\n            <div onClick={() => {\r\n                story.push('/' + props.page);\r\n            }} className={'tab ' + (props.selected ? 'selected': '')}>\r\n                <p>{props.children}</p>\r\n\r\n            </div>\r\n    )\r\n};\r\n\r\nconst AdministradorTopbar = ({pageSelected, userLogged, setUserLogged}) => {\r\n\r\n    const [hambOpen, setHambOpen] = React.useState(false);\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className={'topbar_container topbar_container_adm'}>\r\n            <HamburgerMenu onClick={() => setHambOpen(true)}/>\r\n            <ResponsiveMenu open={hambOpen} pageSelected={pageSelected} onClick={() => setHambOpen(false)}/>\r\n            <div className={'img_container'}>\r\n                <img\r\n                    alt={'integra_logo'}\r\n                    src={require('../../integra_logo.png')}/>\r\n            </div>\r\n            <div className={'tabs'}>\r\n                <Tab\r\n                    page={'dashboard'}\r\n                    selected={pageSelected === 'dashboard'}>\r\n                    Dashboard\r\n                </Tab>\r\n                <Tab\r\n                    page={'agendamento_adm'}\r\n                    selected={pageSelected === 'agendamento_adm'}>\r\n                    Agendamentos\r\n                </Tab>\r\n                <Tab page={'profissionais'} selected={pageSelected === 'profissionais'}>Profissionais</Tab>\r\n                <Tab page={'administrativo'}  selected={pageSelected === 'administrativo'}>Administrativo</Tab>\r\n                <Tab page={'salas'}  selected={pageSelected === 'salas'}>Salas</Tab>\r\n                <Tab page={'logs'} selected={pageSelected === 'logs'}>Logs</Tab>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>{userLogged ? userLogged.nome : 'Catherine Torres'}</h2>\r\n                    <h4>Administrador</h4>\r\n                </div>\r\n            </div>\r\n            <img\r\n                alt={'profile_pic'}\r\n                className={'profile_pic'} src={userLogged ? userLogged.foto_url : 'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n            <Button\r\n                onClick={() => {\r\n                    logout();\r\n                }}\r\n                width={'5%'}\r\n                text={<i className={'fas fa-door-open'}/>}\r\n                className={'log-off'}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nAdministradorTopbar.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministradorTopbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./CalendarAgendamentos.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../modal_types\";\r\nimport {numberIsBetween} from \"../../AuxFunctions\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst fillHoras = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 13; i++)\r\n        array.push({label: i + 8 + ':00', value: i + 8});\r\n    return array;\r\n}\r\n\r\nconst horas = fillHoras();\r\nconst salas = new Array(8).fill('Sala 02');\r\n\r\nconst CalendarAgendamentos = props => {\r\n    return (\r\n        <div className={'calendar_agendamentos_container'}>\r\n            <h1>\r\n                <span\r\n                    onClick={() => {\r\n                        props.selectDate(moment(props.dateSelected).subtract(1, 'day').toDate())\r\n                    }}\r\n                    className={'chevron_date'}\r\n                    style={{float: 'left'}}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                </span>\r\n                {moment(props.dateSelected).locale('pt-BR').format(' DD MMMM YYYY')}\r\n                <span\r\n                    onClick={() => {\r\n                        props.selectDate(moment(props.dateSelected).add(1, 'day').toDate())\r\n                    }}\r\n                    className={'chevron_date'}\r\n                    style={{float: 'right'}}>\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </span>\r\n            </h1>\r\n            <div className={'container_table'}>\r\n                <table className={'calendar_table'}>\r\n                    {/*aqui vai a numeracao das salas*/}\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '10%'}}></th>\r\n                        {\r\n                            props.salas.map((sala, index) => <th key={index}>{sala.nome}</th>)\r\n                        }\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        horas.map((hora, index) => (\r\n                            <tr key={index}>\r\n                                <td>{hora.label}</td>\r\n                                {props.salas.map((sala, indexSala) => {\r\n                                    let agendamentosDaSala = reservaDAO.getAgendamentosFromSala(props.agendamentos, sala);\r\n                                    let [isOccupied, isMonthly] = [false, false];\r\n                                    let agnd = null;\r\n                                    agendamentosDaSala.forEach((agendamento, index) => {\r\n                                        if ('hora_inicio' in agendamento) {\r\n                                            if (numberIsBetween(hora.value, agendamento.hora_inicio, agendamento.hora_fim)\r\n                                                && (moment(props.dateSelected).isSame(new Date(agendamento.data), 'day'))\r\n                                                && !agendamento.cancelado) {\r\n                                                isOccupied = true;\r\n                                                agnd = agendamento;\r\n                                                console.log(agnd);\r\n                                            }\r\n                                        } else if ('mes' in agendamento) {\r\n                                            isMonthly = true;\r\n                                        }\r\n                                    });\r\n                                    if (!isOccupied) {\r\n                                        if (isMonthly) {\r\n                                            return (<td key={indexSala} className={'alugado'}>\r\n                                                    <i>Alugado Mensalmente</i>\r\n                                            </td>)\r\n                                        } else {\r\n                                            return (\r\n                                                <td key={indexSala} className={'free'} onClick={() => {\r\n                                                    props.openModal(ModalTypes.adicionarAgendamentoAdm);\r\n                                                    props.selectSala(sala);\r\n                                                }}>\r\n                                                    <i className={'fa fa-plus'}/>\r\n                                                </td>\r\n                                            )\r\n                                        }\r\n                                    } else if (agnd) {\r\n                                        if (isMonthly) {\r\n                                            return (<td key={indexSala} className={'occupied'}>\r\n                                                {agnd ? (agnd.profissional ? agnd.profissional.nome :\r\n                                                    <i>Usuário Excluído</i>) : ''}\r\n                                            </td>)\r\n                                        } else {\r\n                                            if (agnd.hora_inicio === hora.value) {\r\n                                                return (<td\r\n                                                            onClick={() => {\r\n                                                                props.openModal(ModalTypes.editarAgendamento);\r\n                                                                props.selectAgendamentos(agnd);\r\n                                                            }}\r\n                                                            key={indexSala}\r\n                                                            rowSpan={agnd.hora_fim - agnd.hora_inicio}\r\n                                                            className={'occupied'}>\r\n                                                    {agnd ? (agnd.profissional ? agnd.profissional.nome :\r\n                                                        <i>Usuário Excluído</i>) : ''}\r\n                                                </td>)\r\n                                            } else {\r\n                                                return <></>\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                })}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCalendarAgendamentos.propTypes = {\r\n    agendamentos: PropTypes.array,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salas: state.salas.salas,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectDate: date => dispatch({type: Actions.selectDate, payload: date}),\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    selectAgendamentos: agendamento => dispatch({type: Actions.selectAgendamentos, payload: agendamento}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarAgendamentos);","import React from 'react';\r\nimport Select from \"react-select\";\r\nimport Actions from \"../../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../../AuxFunctions\";\r\n\r\nconst HoraAvulsa = ({profissionais, selectProf, salaSelected, dateSelected}) => {\r\n\r\n    const eSabado = () => {\r\n        return (dateSelected.getDay() === 6);\r\n    }\r\n\r\n    const selectOptions = (horaInicial, isHoraFinal = false) => {\r\n        let array = [];\r\n        for (let i = horaInicial; i < (isHoraFinal ? (eSabado() ? 13 : 21 ) : (eSabado() ? 12 : 20)); i++) {\r\n            array.push({label: i+':00', value: i});\r\n        }\r\n        return array;\r\n    };\r\n\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n    const [horaInicial, setHoraInicial] = React.useState(0);\r\n    const [horaFinal, setHoraFinal] = React.useState(0);\r\n    const [horasFinais, setHorasFinais] = React.useState(selectOptions(8, true));\r\n    let selectedOption = null;\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        setProfissionaisOptions(array);\r\n    }, [profissionais]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    name={'profissional'}\r\n                    onChange={e => { selectProf(e.value) }}\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Profissional'}\r\n                    options={profissionaisOptions}/>\r\n            </div>\r\n            <div className={'horas_intervalo'}>\r\n                <div>\r\n                    <h2>Hora Inicial</h2>\r\n                    <Select\r\n                        name={'hora_inicio'}\r\n                        onChange={e => {\r\n                            setHorasFinais(selectOptions(e.value + 1, true));\r\n                            setHoraInicial(e.value);\r\n                        }}\r\n                        classNamePrefix={'Select'}\r\n                        options={selectOptions(8)}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Hora Final</h2>\r\n                    <Select\r\n                        onChange={e => setHoraFinal(e.value)}\r\n                        name={'hora_fim'}\r\n                        classNamePrefix={'Select'} options={horasFinais}/>\r\n                </div>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>{transformStringToReais(salaSelected.valor_hora)}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>{transformStringToReais(horaFinal === 0 ? 0 : salaSelected.valor_hora * (horaFinal - horaInicial))}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    profissionais: state.profissionais.profissionais,\r\n    salaSelected: state.agendamentos.salaSelected,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n})\r\n\r\nexport default connect(mapStateToProps)(HoraAvulsa);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nconst Turno = props => {\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        props.profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        setProfissionaisOptions(array);\r\n    }, [props.profissionais]);\r\n\r\n    const optionsTurno = [{\r\n        label: '08:00h às 13:00h', value: '08:00h às 13:00h',\r\n    }, {\r\n        label: '14:00h às 18:00h', value: '14:00h às 18:00h',\r\n    }, {\r\n        label: '15:00h às 19:00h', value: '15:00h às 19:00h',\r\n    }, {\r\n        label: '16:00h às 20:00h', value: '16:00h às 20:00h',\r\n    }];\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    placeholder={'Profissional'}\r\n                    classNamePrefix={'Select'}\r\n                    options={profissionaisOptions}/>\r\n                <h2>Duração do Turno</h2>\r\n                <Select\r\n                    placeholder={'Selecione o Horário do Turno'}\r\n                    options={optionsTurno}/>\r\n                <div className={'resume_container'}>\r\n                    <div>\r\n                        <h2>Valor/Hora</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Valor Total:</h2>\r\n                        <h3>R$139,90</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Turno);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst Mensal = props => {\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n    const [optionsMes, setOptionMes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        props.profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        let meses = [];\r\n        for (let i = 0; i < 3; i++)\r\n            meses.push({\r\n                label: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n                value: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n            });\r\n        setOptionMes(meses);\r\n        setProfissionaisOptions(array);\r\n    }, [props.profissionais]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Profissional'}\r\n                    options={profissionaisOptions}/>\r\n                    <h2>Mês a ser Solicitado</h2>\r\n                <Select\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Mês a ser solicitado'}\r\n                    options={optionsMes}/>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>R$39,90</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>R$139,90</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Mensal);","import React from 'react';\r\nimport HoraAvulsa from \"./hora_avulsa\";\r\nimport Turno from \"./turno\";\r\nimport Mensal from \"./mensal\";\r\n\r\nconst Options = props => {\r\n\r\n    const [selectedPage, selectPage] = React.useState('Hora Avulsa');\r\n    const renderPage = page => {\r\n        switch (page) {\r\n            case 'Hora Avulsa':\r\n                return (<HoraAvulsa selectProf={props.selectProf}/>);\r\n            case 'Turno':\r\n                return (<Turno/>);\r\n            case 'Mensal':\r\n                return (<Mensal />);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={'options'}>\r\n                <div\r\n                    onClick={() => selectPage('Hora Avulsa')}\r\n                    className={(selectedPage === 'Hora Avulsa')\r\n                        ? 'option selected' : 'option'}>\r\n                    <p>Hora Avulsa</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Turno')}\r\n                    className={(selectedPage === 'Turno') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Turno</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Mensal')}\r\n                    className={(selectedPage === 'Mensal') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Mensal</p>\r\n                </div>\r\n            </div>\r\n            {renderPage(selectedPage)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../../../button/button\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Options from \"./tipos/options\";\r\nimport moment from 'moment';\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\n\r\nconst ModalAgendamentoAdm = ({show, close, dateSelected, salaSelected, userLogged}) => {\r\n\r\n    const [selectedProfissional, selectProf] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const profissional = selectedProfissional;\r\n        setLoading(true);\r\n        await reservaDAO.create({\r\n            profissional_id: profissional._id,\r\n            hora_inicio: Number(form.hora_inicio.value),\r\n            hora_fim: Number(form.hora_fim.value),\r\n            sala_id: salaSelected._id,\r\n            data: moment(dateSelected).toDate(),\r\n            valorTotal: Number((salaSelected.valor_hora * (Number(form.hora_fim.value) - Number(form.hora_inicio.value))).toFixed(2)),\r\n            cancelado: false,\r\n            pago: false,\r\n            executado: false,\r\n        }, userLogged);\r\n        setLoading(false);\r\n        alert('Adicionado com sucesso!');\r\n        close();\r\n    }\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={handleSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>Adicionar Reserva</h1>\r\n                             <h3>Sexta, 27 de Janeiro de 2019</h3>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={close}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <Options selectProf={selectProf}/>\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nModalAgendamentoAdm.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    dateSelected: state.general.dateSelected,\r\n    salaSelected: state.agendamentos.salaSelected,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAgendamentoAdm);\r\n\r\n","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Button from \"../../../button/button\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from 'moment/min/moment-with-locales.min';\r\nimport \"./EditAgendamento.sass\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\n\r\nconst ModalEditAgendamento = props => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [executing, setExecuting] = React.useState(false);\r\n    const [finalizado, setFinalizado] = React.useState(false);\r\n    const [pago, setPago] = React.useState(false);\r\n\r\n    const setSubtitle = () => {\r\n        if ('profissional' in props.agendamentoSelected) {\r\n            return props.agendamentoSelected.profissional.nome + ' - ' +\r\n                moment(props.dateSelected).locale('pt-BR').format('DD MMMM [de] YYYY');\r\n        }\r\n        return '';\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setExecuting(('execucao_inicio' in props.agendamentoSelected)\r\n            && !('execucao_fim' in props.agendamentoSelected));\r\n        setFinalizado(('execucao_inicio' in props.agendamentoSelected)\r\n            && ('execucao_fim' in props.agendamentoSelected));\r\n        setPago(props.agendamentoSelected.pago);\r\n    }, [props]);\r\n\r\n    const updateAgendamentos = async () => {\r\n        let agendamentos = await reservaDAO.findAll(props.mongoClient);\r\n        props.setAgendamentos(agendamentos);\r\n        props.selectAgendamentos(reservaDAO.getAgendamentosById(agendamentos, props.agendamentoSelected._id));\r\n    }\r\n\r\n    //Modal para fazer trocar pagamento, execução ou cancelar.\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <div>\r\n                    <h1>Editar Reserva</h1>\r\n                    <h3>{setSubtitle()}</h3>\r\n                </div>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'body_edit_agendamento'}>\r\n                <h2>Execução</h2>\r\n                <h3>\r\n                    {finalizado ? `Reserva já foi finalizada. Início às ${\r\n                        moment(props.agendamentoSelected.execucao_inicio).format('HH:mm')\r\n                    }, e fim às ${moment(props.agendamentoSelected.execucao_fim).format('HH:mm')}`\r\n                        : (executing ? 'Reserva está sendo executada' : 'Reserva ainda não executada')}\r\n                    <br/><br/>\r\n                    {\r\n                        finalizado ? <></> :\r\n                            <Button\r\n                                onClick={async () => {\r\n                                    setLoading(true);\r\n                                        if (executing) {\r\n                                            await reservaDAO.executaReserva(props.agendamentoSelected._id);\r\n                                            await updateAgendamentos();\r\n                                            alert('Execução Finalizada com Sucesso!');\r\n                                        } else {\r\n                                        await reservaDAO.comecaReserva(props.agendamentoSelected._id);\r\n                                        await updateAgendamentos();\r\n                                    }\r\n                                    setLoading(false);\r\n                                }}\r\n                                type={'button'}\r\n                                text={'execucao_inicio' in props.agendamentoSelected ?\r\n                                    'Finalizar' : 'Iniciar'\r\n                                }\r\n                                loading={loading}\r\n                                width={'30%'}/>\r\n                    }\r\n                </h3>\r\n                <h2>Pagamento</h2>\r\n                <h3>\r\n                    {pago ? 'Reserva já foi paga.' : 'Reserva ainda não foi paga.'} <br/><br/>\r\n                    {pago ? <></>\r\n                        :<Button\r\n                            onClick={async () => {\r\n                                setLoading(true);\r\n                                await reservaDAO.pagaReserva(props.agendamentoSelected._id);\r\n                                await updateAgendamentos();\r\n                                setLoading(false);\r\n                            }}\r\n                            loading={loading}\r\n                            type={'button'}\r\n                            text={'Pagar'}\r\n                            width={'30%'}/> }\r\n\r\n                </h3>\r\n            </div>}\r\n            footer={\r\n                <div className={'footer footer_edit_agendamento'}>\r\n                    {'sala' in props.agendamentoSelected ?\r\n                        <div className={'flex crud_ops'}>\r\n                            <Button text={'Cancelar'} type={'button'} onClick={async () => {\r\n                            }}/>\r\n                            <Button className={'submit'} loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                        </div> : <></>}\r\n                </div>\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    agendamentoSelected: state.agendamentos.agendamentoSelected,\r\n    dateSelected: state.general.dateSelected,\r\n    mongoClient: state.general.mongoClient,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAgendamentos: agnds => dispatch({type: Actions.setAgendamentos, payload: agnds}),\r\n    selectAgendamentos: agnd => dispatch({type: Actions.selectAgendamentos, payload: agnd}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditAgendamento);","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CalendarAgendamentos from \"../../../assets/component/calendar_agendamentos/CalendarAgendamentos\";\r\nimport './agendamentos.sass';\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalAgendamentoAdm\r\n    from \"../../../assets/component/modals/administrativo/modal_new_agendamento_adm/modal_new_agendamento_adm.jsx\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport logDAO from \"../../../DAO/logDAO\";\r\nimport {useHistory} from \"react-router\";\r\nimport ModalEditAgendamento from \"../../../assets/component/modals/administrativo/modal_edit_agendamento/EditAgendamento\";\r\n\r\nconst AgendamentosAdministrador = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (clienteDAO.db) {\r\n            if ('ocupacao' in props.userLogged) {\r\n                hist.push('/');\r\n            }\r\n            clienteDAO.findAll().then(res => {\r\n                props.setProfissionais(res);\r\n            });\r\n            salaDAO.findAll().then(res => {\r\n                props.setSalas(res);\r\n            });\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n            });\r\n            logDAO.findAll().then(res => {\r\n                props.setLogs(res);\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'agendamento_adm'} />\r\n            <div className={'container_salas'}>\r\n                <ModalAgendamentoAdm\r\n                    close={() => props.closeModal()}\r\n                    show={props.showModal &&\r\n                    props.modalType === ModalTypes.adicionarAgendamentoAdm}\r\n                />\r\n                <ModalEditAgendamento\r\n                    close={() => props.closeModal()}\r\n                    show={props.showModal &&\r\n                    props.modalType === ModalTypes.editarAgendamento}\r\n                />\r\n                <CalendarAgendamentos/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    userLogged: state.general.userLogged,\r\n    client: state.general.mongoClient,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setProfissionais: prof => dispatch({type: Actions.setProfissionais, payload: prof}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n    setLogs: logs => dispatch({type: Actions.setLogs, payload: logs}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AgendamentosAdministrador);","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport \"./dash.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\n\r\nconst DashboardPage = props => {\r\n\r\n    React.useEffect(() => {\r\n        let chart = am4core.create('chart_agendamentos', am4charts.XYChart);\r\n\r\n        chart.paddingRight = 20;\r\n\r\n        let data = [];\r\n        let visits = 10;\r\n        for (let i = 1; i < 366; i++) {\r\n            visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n            data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n        }\r\n\r\n        chart.data = data;\r\n\r\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n\r\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = chart.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n\r\n        series.tooltipText = \"{valueY.value}\";\r\n        chart.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        chart.scrollbarX = scrollbarX;\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'dashboard'}/>\r\n            <div className={'indicators_container'}>\r\n                <div>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                    <h2>25 reservas no mês</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>35 reservas canceladas</h2>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                </div>\r\n            </div>\r\n            <div className={'bottom_column'}>\r\n                <div className={'agendamentos_chart_container'}>\r\n                    <h2>Agendamentos</h2>\r\n                    <div id={'chart_agendamentos'}/>\r\n                </div>\r\n                <div className={'quickdetails_container'}>\r\n                    <h2>Informações</h2>\r\n                    <h3>5 Novos Profissionais</h3>\r\n                    <h3>57 agendamentos</h3>\r\n                    <h3>15 usuários cadastrados</h3>\r\n                    <h3>183 agendamentos até o momento</h3>\r\n                    <h3>5 pacientes para profissionais</h3>\r\n                    <h3>23 cancelamentos</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport moment from \"moment/min/moment-with-locales.min\";\r\n\r\nconst CardLog = props => {\r\n    return (\r\n        <div className={'card_log'}>\r\n            <img\r\n                alt={'Profile_pic'}\r\n                className={'profile_pic'} src={props.log.usuario.foto_url}/>\r\n            <div>\r\n                <h3>{props.log.usuario.nome}</h3>\r\n                <h1>{props.log.log}</h1>\r\n            </div>\r\n            <div>\r\n                <h4>{moment(new Date(props.log.data_hora)).locale('pt-BR').format(' DD/MM/YYYY HH:mm')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardLog;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardLog from \"../../../assets/component/card_log/cardLog\";\r\nimport \"./logs.sass\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst LogsPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    if ('ocupacao' in props.userLogged) {\r\n        hist.push('/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'logs'} />\r\n            <div className={'logs'}>\r\n                {\r\n                    props.logs.map(log => (\r\n                        <CardLog log={log}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    logs: state.logs.logs,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLogs: logs => dispatch({type: Actions.setLogs, payload: logs}),\r\n});\r\n\r\nexport default connect(mapStateToProps)(LogsPage);","import React from 'react';\r\nimport './styles.sass';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../button/button\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardProfissional = props => {\r\n    return (\r\n        <div className={'card_profissional'}>\r\n            <img\r\n                alt={'profissional_pic'}\r\n                src={props.profissional.foto_url}/>\r\n            <h2>{props.profissional.nome}</h2>\r\n            <h3>{props.profissional.ocupacao}</h3>\r\n            <Button text={'Informações'} onClick={ () => {\r\n                props.selectProfissional(props.profissional);\r\n                props.openModal(ModalTypes.adicionarProfissional);\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardProfissional.propTypes = {\r\n    profissional: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectProfissional: prof => dispatch({type: Actions.selectProfissional, payload: prof}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardProfissional);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Fab.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\n\r\nconst Fab = props => {\r\n    return (\r\n        <div className={props.open ? 'Fab open' : 'Fab'} onClick={() => {\r\n            props.onClick(props.open);\r\n            props.selectAdministrador();\r\n        } }>\r\n            <i className={'fa fa-plus'} />\r\n        </div>\r\n    );\r\n}\r\n\r\nFab.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectAdministrador: () => dispatch({type: Actions.selectAdministrador, payload: {}})\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Fab);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./FileInput.sass\";\r\nimport InputText from \"../inputText/input\";\r\n\r\nconst FileInput = props => {\r\n\r\n    const url = 'https://teste.integracps.com.br/uploads/';\r\n\r\n    let realUploadButton = React.createRef();\r\n    const [fileName, setFileName] = React.useState('Nenhum arquivo selecionado.');\r\n    const [fileURL, setFileURL] = React.useState('');\r\n    const onChange = e => {\r\n        // Verifica se é URL ou Arquivo\r\n        if (e.target.files) {\r\n            if (e.target.files[0]) {\r\n                setFileName(e.target.files[0].name);\r\n                setFileURL(URL.createObjectURL(e.target.files[0]))\r\n                props.onChangeFile(e.target.files[0], url + e.target.files[0].name);\r\n            } else {\r\n                setFileURL('');\r\n                setFileName('Nenhum arquivo selecionado.');\r\n            }\r\n        } else {\r\n            props.onChangeFile(null, e.target.value);\r\n            setFileURL(e.target.value);\r\n        }\r\n    }\r\n\r\n    const [isURL, setURL] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'preview_input_container'}>\r\n            <div className={'file_input_container'}>\r\n                <img\r\n                    alt={'Preview'}\r\n                    src={fileURL === '' ? require('../../preview.jpg') : fileURL}/>\r\n                <input type={'file'}\r\n                       name={props.fileName}\r\n                       id={'real_file'}\r\n                       onChange={onChange}\r\n                       hidden\r\n                       accept={'image/png, image/jpeg, image/jpg, image/gif'}\r\n                       ref={realUploadButton}/>\r\n                <div className={'buttons'}>\r\n                    <button\r\n                        disabled={isURL}\r\n                        onClick={() => setURL(true)}\r\n                        className={isURL ? 'button_secondary selected' : 'button_secondary'}>\r\n                        URL\r\n                    </button>\r\n                    <button disabled={!isURL}\r\n                            onClick={() => setURL(false)}\r\n                            className={!isURL ? 'button_secondary selected' : 'button_secondary'}>\r\n                        Arquivo\r\n                    </button>\r\n                </div>\r\n                <div className={'arquivo_upload'} style={!isURL ? {} : {display: 'none'}}>\r\n                    <button type={'button'} onClick={() => {\r\n                        realUploadButton.current.click();\r\n                    }}>\r\n                        <i className={'fa fa-upload'}/>\r\n                    </button>\r\n                    <span>{fileName}</span>\r\n                </div>\r\n                <InputText\r\n                    name={props.urlName}\r\n                    style={!isURL ? {display: 'none'} : {width: '100%'}}\r\n                    label={'URL da foto'}\r\n                    onChange={onChange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFileInput.propTypes = {\r\n    onChangeFile: PropTypes.func,\r\n    data: PropTypes.any,\r\n    setData: PropTypes.func,\r\n    fileName: PropTypes.string.isRequired,\r\n    urlName: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default FileInput;","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./modal_new_profissional.sass\";\r\nimport clienteDAO from \"../../../../../DAO/clienteDAO\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport {post} from 'axios';\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalNewProfissional = ({\r\n                                  show,\r\n                                  close,\r\n                                  mongoClient,\r\n                                  closeModal,\r\n                                  setProfissionais,\r\n                                  profissionalSelected,\r\n                                  selectProfissional,\r\n                              }) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newProfissional = async form => {\r\n        if (checkIfURLIsImage(fileURL)) {\r\n            try {\r\n                await fileUpload(file);\r\n                await clienteDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                    nome: form.nome.value,\r\n                    telefone: form.telefone.value,\r\n                    ocupacao: form.ocupacao.value,\r\n                    descricao: form.descricao.value,\r\n                    foto_url: fileURL,\r\n                    email: form.email.value,\r\n                });\r\n                setProfissionais(await clienteDAO.findAll());\r\n                checkIfURLIsImage(fileURL);\r\n                alert('Profissional Adicionado com Sucesso!')\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n        } else {\r\n            alert('Informe uma imagem válida acima');\r\n        }\r\n    }\r\n\r\n    const editProfissional = async form => {\r\n        try {\r\n            await clienteDAO.update({_id: profissionalSelected._id}, {\r\n                nome: form.nome.value,\r\n                telefone: form.telefone.value,\r\n                ocupacao: form.ocupacao.value,\r\n                descricao: form.descricao.value,\r\n                email: form.email.value,\r\n            });\r\n            const profs = await clienteDAO.findAll();\r\n            setProfissionais(profs);\r\n            selectProfissional();\r\n            alert('Profissional editado com Sucesso!')\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    const removeProfissional = async () => {\r\n        try {\r\n            await clienteDAO.delete({_id: profissionalSelected._id})\r\n            const profs = await clienteDAO.findAll();\r\n            setProfissionais(profs);\r\n            alert('Profissional removido com sucesso');\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const form = e.target;\r\n        if (!editing) {\r\n            await newProfissional(form);\r\n        } else {\r\n            await editProfissional(form);\r\n        }\r\n        selectProfissional();\r\n        setEditing(false);\r\n        form.reset();\r\n        closeModal();\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={onSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>{'nome' in profissionalSelected ? 'Informações do Profissional' : 'Adicionar Profissional'}</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={() => {\r\n                             close();\r\n                             selectProfissional();\r\n                             setEditing(false);\r\n                         }}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <FileInput\r\n                             onChangeFile={(file, url) => {\r\n                                 setFile(file);\r\n                                 setFileURL(url);\r\n                             }}\r\n                             urlName={'foto_url'}\r\n                             fileName={'userfile'}/>\r\n                         <InputText\r\n                             disabled={'nome' in profissionalSelected && !editing}\r\n                             defaultValue={profissionalSelected.nome}\r\n                             name={'nome'} label={'Nome'}/>\r\n                         <div className={'flex'}>\r\n                             <InputText\r\n                                 disabled={'nome' in profissionalSelected && !editing}\r\n                                 defaultValue={profissionalSelected.telefone}\r\n                                 name={'telefone'}\r\n                                 label={'Telefone'}/>\r\n                             <InputText\r\n                                 disabled={'nome' in profissionalSelected && !editing}\r\n                                 defaultValue={profissionalSelected.ocupacao}\r\n                                 name={'ocupacao'}\r\n                                 label={'Ocupação'}/>\r\n                         </div>\r\n                         <InputText\r\n                             disabled={'nome' in profissionalSelected && !editing}\r\n                             defaultValue={profissionalSelected.descricao}\r\n                             name={'descricao'} label={'Descrição'}/>\r\n                         <InputText name={'email'}\r\n                                    disabled={'nome' in profissionalSelected && !editing}\r\n                                    defaultValue={profissionalSelected.email}\r\n                                    label={'Email'}\r\n                                    placeholder={'E-mail utilizado para Login'}/>\r\n                         {\r\n                             'email' in profissionalSelected ? <></> :\r\n                                 (\r\n                                     <div className={'flex'}>\r\n                                         <InputText label={'Senha'} name={'senha'}/>\r\n                                         <InputText label={'Confirmar Senha'}/>\r\n                                     </div>)\r\n                         }\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             {'nome' in profissionalSelected ?\r\n                                 <div className={'flex crud_ops'}>\r\n                                     <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                                         if (window.confirm(\"Tem certeza que deseja apagar esse profissional do sistema?\")) {\r\n                                             await removeProfissional();\r\n                                             closeModal();\r\n                                             setEditing(false);\r\n                                         }\r\n                                     }}/>\r\n                                     <Button editing={editing}\r\n                                             onClick={() => setEditing(true)}\r\n                                             text={'Editar'}\r\n                                             type={'button'}/>\r\n                                 </div> : <></>}\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    profissionalSelected: state.profissionais.profissionalSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setProfissionais: profs => dispatch({type: Actions.setProfissionais, payload: profs}),\r\n    selectProfissional: () => dispatch({type: Actions.selectProfissional, payload: {}}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewProfissional);","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardProfissional from \"../../../assets/component/card_profissional/cardProfissional\";\r\nimport \"./profissionais.sass\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalNewProfissional\r\n    from \"../../../assets/component/modals/administrativo/modal_new_profissional/modal_new_profissional\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ProfissionaisPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n\r\n        if ('ocupacao' in props.userLogged) {\r\n            hist.push('/');\r\n        }\r\n\r\n        if (clienteDAO.db) {\r\n            clienteDAO.findAll().then(res => {\r\n                props.setProfissionais(res);\r\n            })\r\n        }\r\n    }, [props.client]);\r\n    \r\n    return (\r\n        <div>\r\n            <ModalNewProfissional\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarProfissional}/>\r\n            <AdministradorTopbar pageSelected={'profissionais'}/>\r\n            <div className={'profissionais_container'}>\r\n                {\r\n                    props.profissionais.map(profissional => (\r\n                        <CardProfissional profissional={profissional}/>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Fab onClick={() => { props.openModal(ModalTypes.adicionarProfissional)}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    setProfissionais: profs => dispatch({type: Actions.setProfissionais, payload: profs}),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfissionaisPage);","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardAdministrativo = props => {\r\n    return (\r\n        <div className={'card_administrativo'}>\r\n            <img\r\n                alt={'administrativo_pic'}\r\n                src={props.administrador.foto_url}/>\r\n            <h2>{props.administrador.nome}</h2>\r\n            <Button text={'Informações'} onClick={() => {\r\n                props.selectAdministrador(props.administrador);\r\n                props.openModal(ModalTypes.adicionarAdministrador);\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardAdministrativo.propTypes = {\r\n    administrador: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectAdministrador: adm => dispatch({type: Actions.selectAdministrador, payload: adm}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardAdministrativo);","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./modal_new_administrativo.sass\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {post} from 'axios';\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\nimport administradorDAO from \"../../../../../DAO/administradorDAO\";\r\n\r\nconst ModalNewAdministrativo = ({\r\n                                    show,\r\n                                    close,\r\n                                    mongoClient,\r\n                                    closeModal,\r\n                                    administradorSelected = {},\r\n                                    setAdministrativo,\r\n                                    unselectAdministrativo\r\n                                }) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n    const [editing, setEditing] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setEditing(false);\r\n    }, []);\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newAdministrativo = async form => {\r\n        if (checkIfURLIsImage(fileURL)) {\r\n            try {\r\n                await fileUpload(file);\r\n                await administradorDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                    nome: form.nome.value,\r\n                    foto_url: fileURL,\r\n                    email: form.email.value,\r\n                });\r\n                checkIfURLIsImage(fileURL);\r\n                alert('Administrador adicionado com Sucesso!');\r\n                closeModal();\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const editAdministrativo = async form => {\r\n        try {\r\n            await administradorDAO.update({_id: administradorSelected._id}, {\r\n                nome: form.nome.value,\r\n                email: form.email.value,\r\n            });\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            alert('Administrador editado com Sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const removeAdministrativo = async () => {\r\n        try {\r\n            await administradorDAO.delete({_id: administradorSelected._id});\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            alert('Administrador deletado com Sucesso!');\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        const form = e.target;\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!editing) {\r\n            await newAdministrativo(form);\r\n        } else {\r\n            await editAdministrativo(form);\r\n        }\r\n        unselectAdministrativo();\r\n        setEditing(false);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <ModalParent\r\n            onSubmit={onSubmit}\r\n            show={show}\r\n            header={<header>\r\n                <div>\r\n                    <h1>{'nome' in administradorSelected ? 'Informações do Administrador' : 'Adicionar Administrativo'}</h1>\r\n                </div>\r\n                <div className={'close_container'} onClick={() => {\r\n                    close();\r\n                    setEditing(false);\r\n                    unselectAdministrativo();\r\n                }}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div>\r\n                <FileInput\r\n                    onChangeFile={(file, url) => {\r\n                        setFile(file);\r\n                        setFileURL(url);\r\n                    }}\r\n                    urlName={'foto_url'}\r\n                    fileName={'userfile'}/>\r\n                <InputText\r\n                    defaultValue={administradorSelected.nome}\r\n                    disabled={'nome' in administradorSelected && !editing}\r\n                    label={'Nome'}\r\n                    name={'nome'}/>\r\n                <InputText\r\n                    defaultValue={administradorSelected.email}\r\n                    disabled={'nome' in administradorSelected && !editing}\r\n                    label={'Login'}\r\n                    name={'email'}/>\r\n                {\r\n                    'email' in administradorSelected ? <></> :\r\n                        (\r\n                            <div className={'flex'}>\r\n                                <InputText label={'Senha'} name={'senha'}/>\r\n                                <InputText label={'Confirmar Senha'}/>\r\n                            </div>)\r\n                }\r\n\r\n            </div>}\r\n            footer={\r\n                <div className={'footer'}>\r\n                    {'nome' in administradorSelected ?\r\n                        <div className={'flex crud_ops'}>\r\n                            <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                            if (window.confirm(\"Tem certeza que deseja apagar esse administrador do sistema?\")) {\r\n                                await removeAdministrativo();\r\n                                closeModal();\r\n                                setEditing(false);\r\n                            }\r\n                        }}/>\r\n                            <Button editing={editing}\r\n                                    onClick={() => setEditing(true)}\r\n                                    text={'Editar'}\r\n                                    type={'button'}/>\r\n                        </div> : <></>}\r\n                    <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                </div>}/>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    administradorSelected: state.administradores.administradorSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAdministrativo: adms => dispatch({type: Actions.setAdministrativo, payload: adms}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    unselectAdministrativo: () => dispatch({type: Actions.selectAdministrador, payload: {}})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewAdministrativo)","import React from 'react';\r\nimport './admin.sass';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardAdministrativo from \"../../../assets/component/card_administrativo/cardAdministrativo\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalNewAdministrativo\r\n    from \"../../../assets/component/modals/administrativo/modal_new_administrativo/modal_new_administrativo\";\r\nimport {connect} from \"react-redux\";\r\nimport administradorDAO from \"../../../DAO/administradorDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst AdministrativoPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (administradorDAO.db) {\r\n            administradorDAO.findAll().then(adms => {\r\n                props.setAdministrativo(adms);\r\n            });\r\n        }\r\n        if ('ocupacao' in props.userLogged) {\r\n            hist.push('/');\r\n        }\r\n    }, [props.client]);\r\n\r\n    return (\r\n        <div>\r\n            <ModalNewAdministrativo\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarAdministrador}\r\n            />\r\n            <AdministradorTopbar pageSelected={'administrativo'}/>\r\n            <div className={'container_adms'}>\r\n                {\r\n                    props.administradores.map((adm, index) => (\r\n                        <CardAdministrativo key={index}  administrador={adm} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <Fab onClick={() => {\r\n                props.openModal(ModalTypes.adicionarAdministrador);\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    administradores: state.administradores.administradores,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setAdministrativo: adms => dispatch({type: Actions.setAdministrativo, payload: adms})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministrativoPage);","import React from 'react';\r\nimport './styles.sass';\r\nimport Button from \"../button/button\";\r\nimport PropTypes from 'prop-types';\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardSala = props => {\r\n    return (\r\n        <div className={'card_sala'}>\r\n            <img\r\n                alt={'sala'}\r\n                src={props.sala.fotos[0]}/>\r\n            <div>\r\n                <h2>{props.sala.nome}</h2>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.openModal(ModalTypes.adicionarSalas);\r\n                        props.selectSala(props.sala);\r\n                    }}\r\n                    text={'Informações'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardSala.propTypes = {\r\n    sala: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardSala);","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport salaDAO from \"../../../../../DAO/salaDAO\";\r\nimport {post} from \"axios\";\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalNewSalas = ({show, closeModal, mongoClient, close, salaSelected, unselectSala}) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newSala = async form => {\r\n        if (checkIfURLIsImage(fileURL)) {\r\n            try {\r\n                await fileUpload(file);\r\n                await salaDAO.create({\r\n                    nome: form.nome.value,\r\n                    descricao: form.descricao.value,\r\n                    valor_hora: Number(form.valor_hora.value),\r\n                    fotos: [fileURL],\r\n                });\r\n                alert('Sala adicionada com Sucesso!');\r\n                closeModal();\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const editSala = async form => {\r\n        try {\r\n            await salaDAO.update({_id: salaSelected._id}, {\r\n                nome: form.nome.value,\r\n                descricao: form.descricao.value,\r\n                valor_hora: Number(form.valor_hora.value),\r\n            });\r\n            alert('Sala editada com sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const removeSala = async () => {\r\n        try {\r\n            await salaDAO.delete({_id: salaSelected._id});\r\n            alert('Sala removida com sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        unselectSala();\r\n        setLoading(false);\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        setLoading(true);\r\n        if (!editing) {\r\n            await newSala(form);\r\n        } else {\r\n            await editSala(form);\r\n        }\r\n        unselectSala();\r\n        setEditing(false);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={onSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>{'nome' in salaSelected ? 'Informações da Sala' : 'Adicionar Sala'}</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={() => {\r\n                             close();\r\n                             unselectSala();\r\n                             setEditing(false);\r\n                         }}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <FileInput onChangeFile={(file, url) => {\r\n                             setFile(file);\r\n                             setFileURL(url);\r\n                         }} fileName={'userfile'} urlName={'file_url'} />\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.nome}\r\n                             label={\"Nome\"} name={'nome'} required/>\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.descricao}\r\n                             label={\"Descrição\"} name={'descricao'} required />\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.valor_hora}\r\n                             label={'Valor da Hora'} name={'valor_hora'} type={'number'} required />\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             {'nome' in salaSelected ?\r\n                                 <div className={'flex crud_ops'}>\r\n                                     <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                                         if (window.confirm(\"Tem certeza que deseja apagar essa sala do sistema?\")) {\r\n                                             await removeSala();\r\n                                             closeModal();\r\n                                             setEditing(false);\r\n                                         }\r\n                                     }}/>\r\n                                     <Button editing={editing}\r\n                                             onClick={() => setEditing(true)}\r\n                                             text={'Editar'}\r\n                                             type={'button'}/>\r\n                                 </div> : <></>}\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    salaSelected: state.salas.salaSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    unselectSala: () => dispatch({type: Actions.selectSala, payload: {}})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewSalas)","import React from 'react';\r\nimport \"./salas.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CardSala from \"../../../assets/component/card_sala/cardSala\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport ModalNewSalas from \"../../../assets/component/modals/administrativo/modal_new_salas/modal_new_salas\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst SalasPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    if ('ocupacao' in props.userLogged) {\r\n        hist.push('/');\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (salaDAO.db) {\r\n            salaDAO.findAll().then(res => {\r\n                props.setSalas(res);\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'salas'}/>\r\n            <ModalNewSalas\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarSalas}\r\n            />\r\n            <div className={'salas_container'}>\r\n                <div className={'header_salas'}>\r\n                    <div>\r\n                        <h1>Salas Cadastradas</h1>\r\n                        <h3>Abaixo seguem as salas possuídas pela Integra</h3>\r\n                    </div>\r\n                    <div>\r\n                        <Button width={'50%'} text={'Nova Sala'}/>\r\n                    </div>\r\n                </div>\r\n                <div className={'salas'}>\r\n                    {\r\n                        props.salas.map((sala, index) => (\r\n                            <CardSala sala={sala} key={index}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Fab onClick={() => props.openModal(ModalTypes.adicionarSalas)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    salas: state.salas.salas,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalasPage);","import React from 'react';\r\nimport './App.css';\r\nimport { Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk';\r\nimport {Provider} from 'react-redux';\r\nimport Store from \"./redux/store\";\r\nimport Actions from \"./redux/actions/actions\";\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport LoginPage from \"./pages/login\";\r\nimport ClienteAgendamentos from \"./pages/cliente/agendamentos\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport MinhasReservasPage from \"./pages/cliente/reservas\";\r\nimport AgendamentosAdministrador from \"./pages/administrador/agendamentos\";\r\nimport DashboardPage from \"./pages/administrador/dashboard\";\r\nimport LogsPage from \"./pages/administrador/logs\";\r\nimport ProfissionaisPage from \"./pages/administrador/profissionais\";\r\nimport AdministrativoPage from \"./pages/administrador/administrativo\";\r\nimport SalasPage from \"./pages/administrador/salas\";\r\nimport clienteDAO from \"./DAO/clienteDAO\";\r\nimport administradorDAO from \"./DAO/administradorDAO\";\r\nimport salaDAO from \"./DAO/salaDAO\";\r\nimport reservaDAO from \"./DAO/reservaDAO\";\r\nimport logDAO from \"./DAO/logDAO\";\r\n\r\nfunction App() {\r\n\r\n    const setDatabaseIntoDAOs = (db) => {\r\n        clienteDAO.setDb(db);\r\n        administradorDAO.setDb(db);\r\n        salaDAO.setDb(db);\r\n        reservaDAO.setDb(db);\r\n        logDAO.setDb(db);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        //Inicializa o Banco de Dados.\r\n        const client = Stitch.initializeDefaultAppClient('integra-rhnuz');\r\n        const db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('Integra');\r\n\r\n        //Coloca ambos dentro da Store.\r\n        Store.dispatch({type: Actions.setMongoClient, payload: client});\r\n        Store.dispatch({type: Actions.setDatabase, payload: db});\r\n\r\n        setDatabaseIntoDAOs(db);\r\n    }, []);\r\n\r\n  return (\r\n      <Provider store={Store}>\r\n          <Router>\r\n              <Route path={'/'} exact={true} component={LoginPage} />\r\n              <Route path={'/agendamentos'} component={ClienteAgendamentos} />\r\n              <Route path={'/minhas_reservas'} component={MinhasReservasPage} />\r\n              <Route path={'/agendamento_adm'} component={AgendamentosAdministrador} />\r\n              <Route path={'/dashboard'} component={DashboardPage} />\r\n              <Route path={'/administrativo'} component={AdministrativoPage} />\r\n              <Route path={'/profissionais'} component={ProfissionaisPage} />\r\n              <Route path={'/salas'} component={SalasPage} />\r\n              <Route path={'/logs'} component={LogsPage} />\r\n          </Router>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}