{"version":3,"sources":["assets/integra_logo.png","assets/preview.jpg","redux/actions/actions.js","redux/reducers/general_reducer.js","redux/reducers/profissionais_reducer.js","redux/reducers/administradores_reducer.js","redux/reducers/salas_reducer.js","redux/reducers/agendamentos_reducer.js","redux/reducers/logs_reducer.js","redux/store.js","DAO/administradorDAO.js","assets/component/inputText/input.jsx","assets/component/button/button.js","assets/component/checkbox/checkbox.js","assets/component/modoPaisagem/modoPaisagem.js","DAO/clienteDAO.js","assets/component/modals/modal_parent/modal.jsx","assets/component/modals/login/ForgotPasswordModal.jsx","assets/component/modals/login/TipoUsuarioModal/TipoUsuarioModal.jsx","pages/login/index.js","assets/component/cliente_topbar/Menu/Menu.jsx","assets/component/cliente_topbar/topbar.jsx","DAO/logDAO.js","DAO/reservaDAO.js","assets/AuxFunctions.js","assets/component/week_calendar/calendar.jsx","assets/component/sala/sala.jsx","assets/component/modals/cliente/modal_agendamento/tipos/horaAvulsa.jsx","assets/component/modals/cliente/modal_agendamento/tipos/turno.jsx","assets/component/modals/cliente/modal_agendamento/tipos/mensal.jsx","assets/component/modals/cliente/modal_agendamento/tipos/options.jsx","assets/component/modals/cliente/modal_agendamento/modalAgendamento.jsx","assets/modal_types.js","assets/component/modals/cliente/modal_detalhes_sala/detalhesSala.jsx","assets/component/alternating_tab/alt_tab.js","assets/component/Snack/snack.jsx","DAO/salaDAO.js","pages/cliente/agendamentos/index.js","assets/component/reserva_cliente/reserva_cliente.jsx","assets/component/cancel_checkbox/CancelCheckbox.jsx","pages/cliente/reservas/index.js","assets/component/hamburgerMenu/hamburgerMenu.js","assets/component/responsiveMenu/responsiveMenu.js","assets/component/adm_topbar/adm_topbar.jsx","assets/component/calendar_agendamentos/CalendarAgendamentos.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/hora_avulsa.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/turno.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/mensal.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/tipos/options.jsx","assets/component/modals/administrativo/modal_new_agendamento_adm/modal_new_agendamento_adm.jsx","assets/component/modals/administrativo/modal_edit_agendamento/EditAgendamento.jsx","pages/administrador/agendamentos/index.js","pages/administrador/dashboard/index.js","assets/component/card_log/cardLog.js","pages/administrador/logs/index.js","assets/component/card_profissional/cardProfissional.jsx","assets/component/Fab/Fab.jsx","assets/component/file_input/FileInput.js","assets/component/modals/administrativo/modal_new_profissional/modal_new_profissional.jsx","pages/administrador/profissionais/index.js","assets/component/card_administrativo/cardAdministrativo.jsx","assets/component/modals/administrativo/modal_new_administrativo/modal_new_administrativo.jsx","pages/administrador/administrativo/index.js","assets/component/card_sala/cardSala.jsx","assets/component/modals/administrativo/modal_new_salas/modal_new_salas.jsx","pages/administrador/salas/index.js","pages/login/resetPassword/resetPassword.js","pages/cliente/configuracoes/Configuracoes.jsx","pages/login/tipoUsuario.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Actions","setDatabase","setMongoClient","setUserLogged","showModal","closeModal","setProfissionais","setAdministrativo","setSalas","selectDate","selectSala","selectAgendamentos","setAgendamentos","selectAdministrador","selectProfissional","setLogs","setProfissionalReservas","initialState","database","mongoClient","modalType","userLogged","dateSelected","Date","GeneralReducer","state","action","type","payload","profissionais","profissionalSelected","profissionalReservas","ProfissionaisReducer","administradores","administradorSelected","AdministradoresReducer","salas","salaSelected","SalasReducer","agendamentos","agendamentoSelected","AgendamentosReducer","logs","LogsReducer","Store","createStore","combineReducers","general","applyMiddleware","thunk","COLLECTION","administradorDAO","db","setDb","this","create","adm","console","log","collection","insertOne","update","query","changes","updateMany","$set","delete","deleteMany","findAll","find","toArray","addUser","client","email","password","clienteData","emailPasswordClient","auth","getProviderClient","UserPasswordAuthProviderClient","factory","length","alert","registerWithEmail","anonymousLogin","loginWithCredential","AnonymousCredential","userPasswordLogin","user","credentials","UserPasswordCredential","InputText","props","className","style","placeholder","onChange","step","required","disabled","defaultValue","name","label","Button","width","onClick","editing","loading","text","CheckBox","onCheck","React","useState","checked","setChecked","ModoPaisagem","clienteDAO","deleteOne","cliente","editCliente","id_cliente","edits","_id","login","sort","fixarSalaNoTopo","sala","sala_fixa","toString","updateOne","ModalParent","form","useRef","useEffect","current","setTimeout","reset","show","header","ref","onSubmit","encType","body","footer","connect","dispatch","onClose","close","color","onClickAdm","onClickProfissional","reservas","setLoading","modalForgotPassword","setModalForgotPassword","tipoUsuarioShow","setTipoUsuario","admArray","setAdmArray","clientesArray","setClientesArray","story","useHistory","performLogin","senha","a","clientes","push","errorCode","localStorage","getItem","matrix","Array","i","fill","iterador","moment","startOf","dataInicial","j","toDate","getDay","isSame","date","add","hist","e","preventDefault","target","sendResetPasswordEmail","value","alt","src","require","menuOpen","removeItem","setMenuOpen","nome","ocupacao","foto_url","logDAO","extendMoment","Moment","getStringDate","hour","format","checkIfIsBetween","actualDateBegin","actualDateEnds","dateOne","dateTwo","one","range","two","overlaps","reservaDAO","reserva","usuario","data_hora","cancelaReserva","id_reserva","cancelado","cancelaMuitasReservas","promises","Promise","all","executaReserva","executado","execucao_fim","pagaReserva","pago","editaReserva","comecaReserva","execucao_inicio","findReservaDeCliente","profissional_id","forEach","profissional","callFunction","getAgendamentosById","agendamento_id","agendamento","createHoraAvulsa","data","successCallback","failCallback","dateBegin","hora_inicio","dateFim","hora_fim","passed","dateInicioAgendamento","dateFimAgendamento","sala_id","getAgendamentosFromSala","array","checkIfURLIsImage","url","string","split","toLowerCase","transformStringToReais","toFixed","includes","replace","numberToHours","number","Reserva","days","agendamentosDaSala","setAgendamentosDaSala","selectedDate","subtract","map","day","index","locale","key","addReservaListener","isSameOrAfter","salaFixa","setSalaFixa","aluguelMensal","setMensal","mes","getMonth","verificaAluguelMensal","id","place","effect","aux","data-for","data-tip","data-iscapture","onClickDetalhesListener","isAdm","eSabado","selectOptions","horaInicial","isHoraFinal","setHoraInicial","horaFinal","setHoraFinal","horasFinais","setHorasFinais","getUTCDay","getHours","classNamePrefix","options","valor_hora","optionsTurno","selectTurno","optionsMes","setOptionMes","meses","selectMes","marginLeft","marginRight","Options","selectedPage","selectPage","page","renderPage","selectedTurno","selectedMes","prepareData","Number","valorTotal","handleSubmit","novasReservas","then","res","ModalTypes","reservaCliente","detalhesSala","adicionarAdministrador","adicionarProfissional","adicionarAgendamentoAdm","adicionarSalas","adicionarAgendamento","editarAgendamento","fotos","descricao","AlternatingTab","elements","element","selectedIndex","to","count","getReservasAgendadas","salaDAO","openModal","open","selectedTab","selectTab","sortSalas","b","first","second","ReservaCliente","propTypes","PropTypes","func","isRequired","CancelCheckbox","agnds","cancelando","setCancelando","selectedReservas","selectReservas","handleConfirmCancelamento","window","confirm","reservasAvailable","filter","arrayValue","renderReservas","arrayExecutados","renderHistorico","HamburgerMenu","pages","pageName","pageLabel","ResponsiveMenu","pageSelected","history","Tab","selected","children","hambOpen","setHambOpen","horas","fillHoras","float","hora","indexSala","isOccupied","isMonthly","agnd","start","end","rowSpan","selectProf","profissionaisOptions","setProfissionaisOptions","prof","selectedProfissional","executing","setExecuting","finalizado","setFinalizado","setPago","updateAgendamentos","display","watcher","watch","onNext","change","agendamentosPendentes","setAgendamentosPendentes","setAgendamentosNaoCancelados","agendamentos_nao_cancelados","agendamentosCancelados","setAgendamentosCancelados","tabelaFreq","Object","keys","chart","am4core","am4charts","paddingRight","xAxes","renderer","grid","template","location","valueAxis","yAxes","tooltip","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","CardLog","FileInput","realUploadButton","createRef","fileName","setFileName","fileURL","setFileURL","files","URL","createObjectURL","onChangeFile","isURL","setURL","hidden","accept","click","urlName","profs","file","setFile","setEditing","fileUpload","formData","FormData","append","config","headers","post","newProfissional","telefone","editProfissional","removeProfissional","confirmar_senha","administrador","adms","unselectAdministrativo","newAdministrativo","editAdministrativo","removeAdministrativo","unselectSala","newSala","editSala","removeSala","tokens","setTokens","token","qs","parse","search","ignoreQueryPrefix","tokenId","nova_senha","conf_senha","emailPassClient","resetPassword","marginTop","height","padding","checkAdm","App","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","setDatabaseIntoDAOs","store","path","exact","component","LoginPage","ClienteAgendamentos","MinhasReservasPage","AgendamentosAdministrador","DashboardPage","AdministrativoPage","ProfissionaisPage","tipoUsuario","SalasPage","Configuracoes","ResetPassword","LogsPage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74fa52f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/integra_logo.ffdf0581.png\";","module.exports = __webpack_public_path__ + \"static/media/preview.0a0f74fa.jpg\";","const Actions = {\r\n    setDatabase: 'SET_DATABASE',\r\n    setMongoClient: 'SET_MONGO_CLIENT',\r\n    setUserLogged: 'SET_USER_LOGGED',\r\n    showModal: 'SHOW_MODAL',\r\n    closeModal: 'CLOSE_MODAL',\r\n    setProfissionais: 'SET_PROFISSIONAIS',\r\n    setAdministrativo: 'SET_ADMS',\r\n    setSalas: 'SET_SALAS',\r\n    selectDate: 'SELECT_DATE',\r\n    selectSala: 'SELECT_SALA',\r\n    selectAgendamentos: 'SELECT_AGENDAMENTO',\r\n    setAgendamentos: 'SET_AGENDAMENTOS',\r\n    selectAdministrador: 'SELECT_ADM',\r\n    selectProfissional: 'SELECT_PROF',\r\n    setLogs: 'SET_LOGS',\r\n    setProfissionalReservas: 'SET_PROF_RESERVAS',\r\n}\r\n\r\nexport default Actions;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    database: null,\r\n    mongoClient: null,\r\n    modalType: '',\r\n    userLogged: {},\r\n    showModal: false,\r\n    dateSelected: new Date(),\r\n};\r\n\r\nconst GeneralReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.setMongoClient:\r\n            return {...state, mongoClient: action.payload};\r\n        case Actions.setDatabase:\r\n            return {...state, database: action.payload};\r\n        case Actions.setUserLogged:\r\n            return {...state, userLogged: action.payload};\r\n        case Actions.showModal:\r\n            return {...state, showModal: true, modalType: action.payload};\r\n        case Actions.closeModal:\r\n            return {...state, showModal: false};\r\n        case Actions.selectDate:\r\n            return {...state, dateSelected: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default GeneralReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    profissionais: [],\r\n    profissionalSelected: {},\r\n    //para ser usado somente no Cliente\r\n    profissionalReservas: [],\r\n}\r\n\r\nconst ProfissionaisReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setProfissionais:\r\n            return {...state, profissionais: payload};\r\n        case Actions.selectProfissional:\r\n            return {...state, profissionalSelected: payload};\r\n        case Actions.setProfissionalReservas:\r\n            return {...state, profissionalReservas: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProfissionaisReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    administradores: [],\r\n    administradorSelected: {},\r\n}\r\n\r\nconst AdministradoresReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setAdministrativo:\r\n            return {...state, administradores: payload};\r\n        case Actions.selectAdministrador:\r\n            return {...state, administradorSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AdministradoresReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    salas: [],\r\n    salaSelected: {},\r\n}\r\n\r\nconst SalasReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setSalas:\r\n            return {...state, salas: payload};\r\n        case Actions.selectSala:\r\n            return {...state, salaSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SalasReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    salaSelected: {},\r\n    agendamentos: [],\r\n    agendamentoSelected: {},\r\n};\r\n\r\nconst AgendamentosReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.selectSala:\r\n            return {...state, salaSelected: payload};\r\n        case Actions.setAgendamentos:\r\n            return {...state, agendamentos: payload};\r\n        case Actions.selectAgendamentos:\r\n            return {...state, agendamentoSelected: payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AgendamentosReducer;","import Actions from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    logs: [],\r\n};\r\n\r\nconst LogsReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setLogs:\r\n            return {...state, logs: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default LogsReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport GeneralReducer from \"./reducers/general_reducer\";\r\nimport ProfissionaisReducer from \"./reducers/profissionais_reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport AdministradoresReducer from \"./reducers/administradores_reducer\";\r\nimport SalasReducer from \"./reducers/salas_reducer\";\r\nimport AgendamentosReducer from \"./reducers/agendamentos_reducer\";\r\nimport LogsReducer from \"./reducers/logs_reducer\";\r\n\r\nconst Store = createStore(combineReducers({\r\n    general: GeneralReducer,\r\n    profissionais: ProfissionaisReducer,\r\n    administradores: AdministradoresReducer,\r\n    salas: SalasReducer,\r\n    agendamentos: AgendamentosReducer,\r\n    logs: LogsReducer,\r\n}, applyMiddleware(thunk)));\r\n\r\nexport default Store;","import {AnonymousCredential, UserPasswordAuthProviderClient, UserPasswordCredential} from 'mongodb-stitch-browser-sdk';\r\n\r\nconst COLLECTION = 'administradores';\r\n\r\n/*\r\n    foto_url: string,\r\n    login: string,\r\n    nome: string,\r\n    senha: string,\r\n */\r\n\r\nconst administradorDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(adm) {\r\n        console.log('created administrador');\r\n        return this.db.collection(COLLECTION).insertOne(adm);\r\n    },\r\n    update(query, changes) {\r\n        console.log('update administrador');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(query) {\r\n        console.log('delete administrador');\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll() {\r\n        console.log('find administrador');\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    },\r\n    async addUser(client, email, password, clienteData) {\r\n        console.log('add User');\r\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\r\n        try {\r\n            const array = await administradorDAO.find({email: email})\r\n            if (array.length > 0) {\r\n                alert('Administrador já existe com esse email.');\r\n            } else {\r\n                await emailPasswordClient.registerWithEmail(email, password);\r\n                return this.create({...clienteData, email});\r\n            }\r\n        } catch (e) {\r\n            alert('ATENÇÃO: Já existe um profissional com esse e-mail, ' +\r\n                'por favor, considere a SENHA do profissional já cadastrado. Essa conta agora terá ' +\r\n                'privilégios administrativos.')\r\n            return this.create({...clienteData, email});\r\n        }\r\n    },\r\n    anonymousLogin(client) {\r\n        console.log('Anonymous Login');\r\n        return client.auth.loginWithCredential(new AnonymousCredential());\r\n    },\r\n    find(query) {\r\n        console.log('Query administrador');\r\n        return this.db.collection(COLLECTION).find(query).toArray();\r\n    },\r\n    userPasswordLogin(client, user, password) {\r\n        console.log('User Password Login');\r\n        const credentials = new UserPasswordCredential(user, password);\r\n        return client.auth.loginWithCredential(credentials);\r\n    }\r\n};\r\n\r\nexport default administradorDAO;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.sass';\r\n\r\nconst InputText = props => {\r\n    return (\r\n        <div className={'input_text'} style={props.style}>\r\n            <input\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                step={'0.01'}\r\n                required={props.required}\r\n                disabled={props.disabled}\r\n                defaultValue={props.defaultValue}\r\n                type={props.type ? props.type : 'text'}\r\n                name={props.name ? props.name : ''} />\r\n            <label className={'label'}>{props.label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nInputText.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    defaultValue: PropTypes.string,\r\n    style: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            type={props.type}\r\n            style={props.width ? {width: props.width} : {}}\r\n            onClick={props.onClick}\r\n            editing={props.editing}\r\n            disabled={props.loading || props.editing}\r\n            className={(props.loading || props.editing) ?\r\n                'button '+props.className+' loading' : 'button '+props.className }>\r\n            { props.loading ? 'Carregando' : (props.editing ? 'Editando' : props.text)}\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    type: PropTypes.string,\r\n    width: PropTypes.string,\r\n    editing: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.sass\";\r\n\r\nconst CheckBox = ({onCheck = () => {}, label}) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'checkbox_container'}>\r\n            <div className={checked ? 'checkbox checked' : 'checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n            </div>\r\n            <label>{label}</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CheckBox;","import React from 'react';\r\nimport \"./styles.sass\";\r\n\r\nconst ModoPaisagem = () => {\r\n    return (\r\n        <div className={'modo_paisagem'}>\r\n            <h2>Por favor, vire o seu celular! :(</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModoPaisagem;","import { UserPasswordCredential, UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\r\n\r\nconst COLLECTION = 'clientes'\r\nconst clienteDAO = {\r\n    db: null,\r\n    setDb(db){\r\n        this.db = db;\r\n    },\r\n    async delete(query) {\r\n        console.log('delete cliente');\r\n        return this.db.collection(COLLECTION).deleteOne(query);\r\n    },\r\n    create(cliente){\r\n        console.log('create cliente');\r\n        return this.db.collection(COLLECTION).insertOne(cliente);\r\n    },\r\n    update(query, changes){\r\n        console.log('update cliente');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes});\r\n    },\r\n    editCliente(id_cliente, edits){\r\n        console.log('edit cliente');\r\n        return this.update({_id: id_cliente}, edits);\r\n    },\r\n    async addUser(client, email, password, clienteData){\r\n        console.log('add cliente user');\r\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\r\n        try {\r\n            await emailPasswordClient.registerWithEmail(email, password);\r\n        } catch (err) {\r\n            alert('O usuário de e-mail já foi definido e talvez deletado anteriormente. Para redefinir ' +\r\n                'senha, por favor, peça ao usuário que vá em \"Esqueceu sua Senha?\" na tela de Login.')\r\n        }\r\n        return this.create({ ...clienteData, email });\r\n    },\r\n    login(client, email, password){\r\n        console.log('login cliente');\r\n        return client.auth.loginWithCredential(new UserPasswordCredential(email, password));\r\n    },\r\n    findAll(){\r\n        console.log('find all clientes');\r\n        return this.db.collection(COLLECTION).find({}, {sort: {'nome': 1}}).toArray();\r\n    },\r\n    find(query) {\r\n        console.log('find query clientes');\r\n        return this.db.collection(COLLECTION).find(query).toArray();\r\n    },\r\n    fixarSalaNoTopo(sala, user) {\r\n        if (user.sala_fixa) {\r\n            if (user.sala_fixa.toString() === sala._id.toString()) {\r\n                return this.db.collection(COLLECTION).updateOne({_id: user._id}, {$set: {sala_fixa: null}})\r\n            }\r\n        }\r\n        return this.db.collection(COLLECTION).updateOne({_id: user._id}, {$set: {sala_fixa: sala._id}});\r\n    },\r\n};\r\nexport default clienteDAO;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\n\r\nconst ModalParent = props => {\r\n\r\n    const form = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        if (form.current) {\r\n            setTimeout(() => {\r\n                if (form.current) {\r\n                    form.current.reset();\r\n                }\r\n            }, 300);\r\n        }\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div className={props.show ? 'modal_container' : 'modal_container hidden'}>\r\n            {props.header}\r\n            <form ref={form} onSubmit={props.onSubmit} encType={'multipart/form-data'}>\r\n                <div>\r\n                    {props.body}\r\n                </div>\r\n                {props.footer}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nModalParent.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func,\r\n    header: PropTypes.element,\r\n    body: PropTypes.element,\r\n    footer: PropTypes.element,\r\n    onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ModalParent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport ModalParent from \"../modal_parent/modal\";\r\nimport InputText from \"../../inputText/input\";\r\nimport Button from \"../../button/button\";\r\n\r\n\r\nconst ForgotPasswordModal = props => {\r\n\r\n    return (\r\n        <ModalParent\r\n            onSubmit={props.onSubmit} header={<header>\r\n            <div>\r\n                <h1>Recuperar Senha</h1>\r\n            </div>\r\n            <div className={'close_container'} onClick={props.onClose}>\r\n                <i className={'fa fa-times'}/>\r\n            </div>\r\n        </header>} show={props.show} close={props.onClose} body={<div>\r\n            <p style={{color: '#888'}}>Enviaremos para você um e-mail com link para redefinição.</p>\r\n            <InputText label={'Seu e-mail'} name={'email'}/>\r\n        </div>} footer={<div className={'footer'}>\r\n            <Button loading={props.loading} type={'submit'} text={'Confirmar'}/>\r\n        </div>}/>\r\n    );\r\n}\r\n\r\nForgotPasswordModal.propTypes = {};\r\n\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport ForgotPasswordModal from \"../ForgotPasswordModal\";\r\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport \"./TipoUsuarioModal.sass\"\r\n\r\nconst TipoUsuarioModal = props => {\r\n    return (\r\n        <ModalParent show={props.show}\r\n                     onClose={props.onClose}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>Tipo de Usuário</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={props.onClose}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={\r\n                         <div className={'tipos_usuarios'}>\r\n                             <div onClick={props.onClickAdm}>\r\n                                 <h1>Entrar como Administrador</h1>\r\n                             </div>\r\n                             <div onClick={props.onClickProfissional}>\r\n                                 <h1>Entrar como Profissional</h1>\r\n                             </div>\r\n                         </div>\r\n                     }/>\r\n    );\r\n}\r\n\r\nTipoUsuarioModal.propTypes = {\r\n    loading: PropTypes.bool,\r\n    onClose: PropTypes.func.isRequired,\r\n    show: PropTypes.func.isRequired,\r\n    onClickAdm: PropTypes.func.isRequired,\r\n    onClickProfissional: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TipoUsuarioModal);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../redux/actions/actions\";\r\nimport administradorDAO from \"../../DAO/administradorDAO\";\r\nimport './login.sass';\r\nimport InputText from \"../../assets/component/inputText/input\";\r\nimport Button from \"../../assets/component/button/button\";\r\nimport CheckBox from \"../../assets/component/checkbox/checkbox\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ModoPaisagem from \"../../assets/component/modoPaisagem/modoPaisagem\";\r\nimport clienteDAO from \"../../DAO/clienteDAO\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport ForgotPasswordModal from \"../../assets/component/modals/login/ForgotPasswordModal\";\r\nimport {UserPasswordAuthProviderClient} from \"mongodb-stitch-browser-sdk\";\r\nimport TipoUsuarioModal from \"../../assets/component/modals/login/TipoUsuarioModal/TipoUsuarioModal\";\r\n\r\nconst LoginPage = ({mongoClient, userLogged, setUserLogged}) => {\r\n\r\n    const [logged, setLogged] = React.useState(false);\r\n    const [loggedAdm, setLoggedAdm] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [modalForgotPassword, setModalForgotPassword] = React.useState(false)\r\n    const [tipoUsuarioShow, setTipoUsuario] = React.useState(false)\r\n\r\n    const [admArray, setAdmArray] = React.useState(null)\r\n    const [clientesArray, setClientesArray] = React.useState(null)\r\n\r\n    const story = useHistory()\r\n\r\n    const saveUserLogged = (email, pwd) => {\r\n        if (checked) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('pwd', pwd);\r\n            alert(\"Adicionado ao local storage\");\r\n        }\r\n    }\r\n\r\n    const performLogin = async (email, senha) => {\r\n        let [clientes, administradores] = [[], []];\r\n        setLoading(true);\r\n        try {\r\n            await clienteDAO.login(mongoClient, email, senha);\r\n            clientes = await clienteDAO.find({email: email});\r\n            administradores = await administradorDAO.find({email: email});\r\n            if (clientes.length > 0 && administradores.length > 0) {\r\n                setTipoUsuario(true)\r\n                setAdmArray(administradores)\r\n                setClientesArray(clientes)\r\n            } else if (clientes.length > 0) {\r\n                setUserLogged(clientes[0]);\r\n                story.push('/agendamentos')\r\n            } else if (administradores.length > 0) {\r\n                setUserLogged(administradores[0])\r\n                story.push('/agendamento_adm')\r\n            }\r\n            if (administradores.length <= 0 && clientes.length <= 0) {\r\n                alert('Erro interno. Por favor, contate os desenvolvedores.');\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            if (err.errorCode === 46) {\r\n                alert('Usuário ou senha inválidos.');\r\n            } else {\r\n                alert('Erro desconhecido! Log do erro ' + err);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let [email, senha] = [localStorage.getItem('email'), localStorage.getItem('pwd')];\r\n        if (mongoClient)\r\n            if (email && senha)\r\n                performLogin(email, senha);\r\n    }, [mongoClient]);\r\n\r\n    let matrix = new Array(5);\r\n    for (let i = 0; i < 5; i++) {\r\n        matrix[i] = new Array(7).fill(0);\r\n    }\r\n    let iterador = moment(new Date()).startOf('month');\r\n    let dataInicial = moment()\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n            if (iterador.toDate().getDay() === j && iterador.isSame(dataInicial, 'month')) {\r\n                matrix[i][j] = iterador.date();\r\n                iterador.add(1, 'day');\r\n            } else {\r\n                matrix[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(matrix);\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if ('nome' in userLogged) {\r\n            setLoading(true);\r\n            if ('ocupacao' in userLogged)\r\n                hist.push('/agendamentos');\r\n            else\r\n                hist.push('/agendamento_adm');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [userLogged]);\r\n\r\n    return (\r\n        <div className={'login_container'}>\r\n            <ModoPaisagem/>\r\n            <TipoUsuarioModal\r\n                show={tipoUsuarioShow}\r\n                onClose={() => setTipoUsuario(false)}\r\n                onClickAdm={() => {\r\n                    setUserLogged(admArray[0])\r\n                    story.push('/agendamento_adm')\r\n                }}\r\n                onClickProfissional={() => {\r\n                    setUserLogged(clientesArray[0])\r\n                    story.push('/agendamentos')\r\n                }}\r\n            />\r\n            <ForgotPasswordModal\r\n                onSubmit={async e => {\r\n                    e.preventDefault()\r\n                    const form = e.target;\r\n                    setLoading(true)\r\n                    try {\r\n                        await mongoClient\r\n                            .auth\r\n                            .getProviderClient(UserPasswordAuthProviderClient.factory)\r\n                            .sendResetPasswordEmail(form.email.value);\r\n                        alert('Por favor, cheque seu e-mail, enviamos um link para redefinição de senha.')\r\n                    } catch (e) {\r\n                        alert(e)\r\n                    }\r\n                    setModalForgotPassword(false)\r\n                    setLoading(false)\r\n                }}\r\n                loading={loading}\r\n                onClose={() => setModalForgotPassword(false)}\r\n                show={modalForgotPassword}/>\r\n            <div className={'ball'}/>\r\n            <div className={'logo_container'}>\r\n                <img\r\n                    alt={'integra_logo'}\r\n                    src={require('../../assets/integra_logo.png')}/>\r\n                <p>Sistema de Gerenciamento</p>\r\n            </div>\r\n            <div className={'login'}>\r\n                <h1>Login</h1>\r\n                <div className={'card'}>\r\n                    <form onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        setLoading(true);\r\n                        await performLogin(e.target.email.value, e.target.senha.value);\r\n                        setLoading(false);\r\n                    }}>\r\n                        <InputText\r\n                            name={'email'}\r\n                            label={'E-mail'}\r\n                            placeholder={'Ex: joao@example.com'}/>\r\n                        <InputText\r\n                            name={'senha'}\r\n                            label={'Senha'}\r\n                            type={'password'}\r\n                            placeholder={'Informe sua senha'}/>\r\n                        <CheckBox\r\n                            onCheck={checked => {\r\n                                setChecked(!checked)\r\n                            }}\r\n                            label={'Manter-me Conectado'}/>\r\n                        <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                    </form>\r\n                </div>\r\n                <p onClick={() => setModalForgotPassword(true)} className={'forgot_pwd'}>Esqueceu sua senha?</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    database: state.general.database,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user =>\r\n        dispatch({type: Actions.setUserLogged, payload: user}),\r\n    //Para uso somente no login do cliente.\r\n    setProfissionalReservas: reservas =>\r\n        dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport \"./Menu.sass\"\r\nimport PropTypes from 'prop-types'\r\nimport {useHistory} from \"react-router\";\r\nimport Actions from \"../../../../redux/actions/actions\";\r\n\r\nconst Menu = props => {\r\n\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        props.setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    return (\r\n     <div className={props.menuOpen ? 'menu_container open' : 'menu_container'}>\r\n         <ul>\r\n             <li onClick={() => hist.push('/configuracoes')}>Configurações de Perfil</li>\r\n             <li onClick={() => logout()}>Sair</li>\r\n         </ul>\r\n     </div>\r\n );\r\n}\r\n\r\nMenu.propTypes = {\r\n    menuOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: userLogged => dispatch({type: Actions.setUserLogged, payload: userLogged})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"../button/button\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\nimport Menu from \"./Menu/Menu\";\r\n\r\nconst ClienteTopbar = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        props.setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    const [menuOpen, setMenuOpen] = React.useState(false)\r\n\r\n    return (\r\n        <div className={'topbar_container'}>\r\n            <div className={'img_container'}>\r\n                <img\r\n                    alt={'logo'}\r\n                    src={require('../../integra_logo.png')} />\r\n            </div>\r\n            <div className={'titulo'}>\r\n                <h2>Portal da Equipe</h2>\r\n                <h4>Agendamentos</h4>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>{props.userLogged ? props.userLogged.nome : 'Catherine Torres'}</h2>\r\n                    <h4>{props.userLogged ? props.userLogged.ocupacao : 'Fisioterapeuta'}</h4>\r\n                </div>\r\n            </div>\r\n            <img\r\n                alt={'profile_pic'}\r\n                className={'profile_pic'} src={\r\n                    props.userLogged ?\r\n                        props.userLogged.foto_url : 'https://randomuser.me/api/portraits/women/43.jpg'} />\r\n                        <Button\r\n                            onClick={() => {\r\n                                // logout();\r\n                                setMenuOpen(!menuOpen)\r\n                            }}\r\n                            width={'5%'}\r\n                            text={<i className={'fas ' + (menuOpen ? 'fa-chevron-up' : 'fa-chevron-down')}/>}\r\n                            className={'log-off'}/>\r\n                            <Menu menuOpen={menuOpen} />\r\n        </div>\r\n    )\r\n}\r\n\r\nClienteTopbar.propTypes = {\r\n    usuario: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteTopbar);\r\n","const COLLECTION = 'logs';\r\n\r\nconst logDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n      this.db = db;\r\n    },\r\n    create(log){\r\n        console.log('create login');\r\n        return this.db.collection(COLLECTION).insertOne(log);\r\n    },\r\n    findAll(){\r\n        console.log('find all logs');\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default logDAO;","import logDAO from \"./logDAO\";\r\nimport Moment from 'moment/min/moment-with-locales'\r\nimport {extendMoment} from \"moment-range\";\r\nconst COLLECTION = 'reservas'\r\n\r\nconst moment = extendMoment(Moment)\r\n\r\nconst getStringDate = (date, hour) => (`${moment(date).format('yyyy-MM-DD')} ${hour}:00`)\r\n\r\nconst checkIfIsBetween = (actualDateBegin, actualDateEnds, dateOne, dateTwo) => {\r\n    let one = moment.range(actualDateBegin, actualDateEnds);\r\n    let two = moment.range(dateOne, dateTwo);\r\n    return one.overlaps(two)\r\n}\r\n\r\nconst reservaDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(reserva, userLogged = null) {\r\n        if (userLogged) {\r\n            console.log('Create reserva');\r\n            logDAO.create({usuario: userLogged, log: 'Adicionou uma reserva', data_hora: new Date()})\r\n        }\r\n        return this.db.collection(COLLECTION).insertOne(reserva);\r\n    },\r\n    update(query, changes) {\r\n        console.log('Update reserva');\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes});\r\n    },\r\n    cancelaReserva(id_reserva) {\r\n        console.log('Cancela reserva');\r\n        return this.update({_id: id_reserva}, {cancelado: true});\r\n    },\r\n    cancelaMuitasReservas(reservas) {\r\n        console.log('Cancela muita reserva');\r\n        const promises = [];\r\n        for (let i = 0; i < reservas.length; i++) {\r\n            promises.push(this.cancelaReserva(reservas[i]._id));\r\n        }\r\n        return Promise.all(promises);\r\n    },\r\n    executaReserva(id_reserva) {\r\n        console.log('Executa reserva');\r\n        return this.update({_id: id_reserva}, {executado: true, execucao_fim: new Date()});\r\n    },\r\n    pagaReserva(id_reserva, pago) {\r\n        console.log('Paga reserva');\r\n        return this.update({_id: id_reserva}, {pago: pago});\r\n    },\r\n    editaReserva(id_reserva, edits) {\r\n        console.log('Edita reserva');\r\n        return this.update({_id: id_reserva}, edits);\r\n    },\r\n    comecaReserva(id_reserva) {\r\n        console.log('Começa a executar a reserva');\r\n        return this.update({_id: id_reserva}, {execucao_inicio: new Date()});\r\n    },\r\n    findReservaDeCliente(profissional_id, reservas) {\r\n        console.log('Find Reserva de Cliente');\r\n        let profissionalReservas = [];\r\n        reservas.forEach(reserva => {\r\n            if (reserva.profissional) {\r\n                if (reserva.profissional._id.toString() === profissional_id.toString())\r\n                    profissionalReservas.push(reserva);\r\n            }\r\n        });\r\n        return profissionalReservas;\r\n    },\r\n    findAll(client) {\r\n        console.log('Find All de Cliente');\r\n        return client.callFunction('getAgendamentos');\r\n    },\r\n    getAgendamentosById(agendamentos, agendamento_id) {\r\n        let agendamentoSelected = null;\r\n        agendamentos.forEach(agendamento => {\r\n            if (agendamento._id.toString() === agendamento_id.toString()) {\r\n                agendamentoSelected = agendamento;\r\n            }\r\n        });\r\n        return agendamentoSelected;\r\n    },\r\n    async createHoraAvulsa(data, agendamentos, dateSelected, successCallback, failCallback) {\r\n            let dateBegin = new Date(getStringDate(dateSelected, data.hora_inicio))\r\n            let dateFim = new Date(getStringDate(dateSelected, data.hora_fim))\r\n            let passed = true\r\n            console.log(agendamentos)\r\n            console.log(data)\r\n            if (data.hora_inicio <= 0 || data.hora_fim <= 0) {\r\n                passed = false\r\n                failCallback()\r\n            } else {\r\n                for (let agendamento of agendamentos) {\r\n                    // Checagem de ERRO\r\n                    let dateInicioAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_inicio)),\r\n                        dateFimAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_fim))\r\n                    if (!agendamento.cancelado && agendamento.sala_id.toString() === data.sala_id.toString()) {\r\n                        if (checkIfIsBetween(dateBegin, dateFim, dateInicioAgendamento, dateFimAgendamento)) {\r\n                            passed = false\r\n                            failCallback()\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                if (passed) {\r\n                    successCallback()\r\n                }\r\n            }\r\n\r\n    },\r\n    getAgendamentosFromSala(agendamentos, sala) {\r\n        console.log('get Agendamentos da sala');\r\n        let array = [];\r\n        agendamentos.forEach(agendamento => {\r\n            if ('sala' in agendamento) {\r\n                if (sala.nome === agendamento.sala.nome) {\r\n                    array.push(agendamento);\r\n                }\r\n            }\r\n        });\r\n        return array;\r\n    }\r\n};\r\n\r\nexport default reservaDAO;\r\n","const checkIfURLIsImage = url => {\r\n    let string = url.split('.');\r\n    if (string.length > 0) {\r\n        return (string[string.length - 1].toLowerCase() === 'jpg' ||\r\n            string[string.length - 1].toLowerCase() === 'jpeg' ||\r\n            string[string.length - 1].toLowerCase() === 'gif' ||\r\n            string[string.length - 1].toLowerCase() === 'png');\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst transformStringToReais = string => {\r\n    if (typeof string == 'number') {\r\n        string = string.toFixed(2);\r\n    }\r\n    string = 'R$ ' + string;\r\n    if (string.includes('.') || string.includes(',')) {\r\n        string = string.replace('.', ',');\r\n    } else {\r\n        string = string + ',00';\r\n    }\r\n    return string;\r\n};\r\n\r\nconst transformReaisToFloat = string => {\r\n    string = string.replace(',', '.');\r\n    string = string.replace('R$ ', '');\r\n    return Number(string);\r\n};\r\n\r\nconst numberIsBetween = (number, start, end) => {\r\n    return (number >= start) && (number < end);\r\n}\r\n\r\nconst numberToHours = number => {\r\n    return number+\":00\";\r\n}\r\n\r\nconst removeElementFromArray = (arr, value) => {\r\n    const filter = (arrayValue) => {\r\n        return arrayValue !== value;\r\n    }\r\n    return arr.filter(filter);\r\n};\r\n\r\nconst findInArrayAndReturnIndex = (arr, key) => {\r\n    for (let i = 0; i < arr.length; i++)\r\n        if (arr[i] === key)\r\n            return i\r\n}\r\n\r\nconst sendToTopArray = (arr, key) => {\r\n    let first = key;\r\n    arr.sort(function(x,y){ return x === first ? -1 : y === first ? 1 : 0; });\r\n}\r\n\r\nexport {checkIfURLIsImage,\r\n    removeElementFromArray,\r\n    transformStringToReais,\r\n    transformReaisToFloat,\r\n    numberIsBetween,\r\n    numberToHours};","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport moment from \"moment/min/moment-with-locales.min\";\r\nimport {connect} from \"react-redux\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport {numberToHours} from \"../../AuxFunctions\";\r\n\r\nconst Reserva = props => {\r\n    return (\r\n        <div className={'reserva'}>\r\n            <i><h2>Reservado</h2></i>\r\n            <h4>{numberToHours(props.reserva.hora_inicio)} ~ {numberToHours(props.reserva.hora_fim)}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst days = ['Dom','Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\r\n\r\nconst WeekCalendar = props => {\r\n\r\n    const [agendamentosDaSala, setAgendamentosDaSala] = React.useState([]);\r\n    const [selectedDate, selectDate] = React.useState(moment());\r\n\r\n    React.useEffect(() => {\r\n        setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n    }, [props.agendamentos]);\r\n\r\n    return (\r\n        <div className={'container_week'}>\r\n            <div\r\n                onClick={() => {\r\n                    setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n                    selectDate(selectedDate.subtract(1, 'week'));\r\n                }}\r\n                className={selectedDate.isSame(new Date(), 'week') ? 'chevron hidden' : 'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-left'}/>\r\n                </p>\r\n            </div>\r\n            {days.map((day, index) => {\r\n\r\n                let date = moment(selectedDate.toDate()).locale('pt-BR').startOf('week').add(index, 'days');\r\n\r\n                return (\r\n                    <div\r\n                        key={day}\r\n                        className={'week_day'}>\r\n                        <h1 className={date.isSame(new Date(), 'day') ? 'today': ''}>{day}</h1>\r\n                        <h3 className={date.isSame(new Date(), 'day') ? 'today': ''}>{date.format('DD/MMM')}</h3>\r\n                        {\r\n                            agendamentosDaSala.map((agendamento, index) => {\r\n                                if (date.isSame(agendamento.data, 'day') && !agendamento.cancelado) {\r\n                                    if ('mes' in agendamento) {\r\n                                        if (date.isSame(new Date(), 'day')) {\r\n                                            return (\r\n                                                <div\r\n                                                    onClick={() => props.addReservaListener(date)}\r\n                                                    className={'add'}>\r\n                                                    <span>+</span>\r\n                                                </div>\r\n                                            )\r\n                                        } else {\r\n                                            return <></>\r\n                                        }\r\n                                    }\r\n                                    return <Reserva key={index} reserva={agendamento}/>\r\n                                } else {\r\n                                    return <></>\r\n                                }\r\n                            })\r\n                        }\r\n                        {\r\n                            date.isSameOrAfter(new Date(), 'day') ?\r\n                            (<div\r\n                            onClick={() => props.addReservaListener(date)}\r\n                            className={'add'}>\r\n                            <span>+</span>\r\n                            </div>) : <></>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n            <div\r\n                onClick={() => {\r\n                    setAgendamentosDaSala(reservaDAO.getAgendamentosFromSala(props.agendamentos, props.sala));\r\n                    selectDate(selectedDate.add(1, 'week'));\r\n                }}\r\n                className={selectedDate.isSame(moment().add(2, 'week'), 'week') ? 'chevron hidden' : 'chevron'}>\r\n                <p>\r\n                    <i className={'fas fa-chevron-right'}/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeekCalendar.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    sala: PropTypes.object,\r\n    addReservaListener: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nexport default connect(mapStateToProps)(WeekCalendar);\r\n","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport WeekCalendar from \"../week_calendar/calendar\";\r\nimport PropTypes from 'prop-types';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {connect} from \"react-redux\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\n\r\nconst Sala = props => {\r\n\r\n    const [salaFixa, setSalaFixa] = React.useState(false);\r\n    const [aluguelMensal, setMensal] = React.useState(false);\r\n\r\n    const verificaAluguelMensal = () => {\r\n        for (let i = 0; i < props.agendamentos.length; i++) {\r\n            if ('mes' in props.agendamentos[i]) {\r\n                if (props.agendamentos[i].sala_id.toString() === props.sala._id.toString()\r\n                    && props.agendamentos[i].mes.getMonth() === new Date().getMonth())\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (props.userLogged.sala_fixa && '_id' in props.sala) {\r\n            setSalaFixa(props.sala._id.toString() === props.userLogged.sala_fixa.toString());\r\n        }\r\n        setMensal(verificaAluguelMensal());\r\n    }, [props]);\r\n\r\n    return (\r\n        <div className={'sala_content'}>\r\n            <ReactTooltip id='main' place={'left'} type={'info'} effect={'solid'}/>\r\n            <div className={'sala_container'}>\r\n                <div>\r\n                    <h1>\r\n                        <span\r\n                            className={salaFixa ? 'fixa' : ''}\r\n                            onClick={async () => {\r\n                                if (salaFixa) {\r\n                                    await clienteDAO.fixarSalaNoTopo(props.sala, props.userLogged);\r\n                                    let aux = {...props.userLogged};\r\n                                    delete aux.sala_fixa\r\n                                    props.setUserLogged(aux);\r\n                                    setSalaFixa(false)\r\n                                } else {\r\n                                    await clienteDAO.fixarSalaNoTopo(props.sala, props.userLogged);\r\n                                    props.setUserLogged({...props.userLogged, sala_fixa: props.sala._id});\r\n                                    setSalaFixa(true)\r\n                                }\r\n                            }}\r\n                            data-for={'main'} data-tip={'Fixar no Topo'} data-iscapture={'true'}>\r\n                             <i className={'fas fa-thumbtack'}/> {'\\u00A0'}\r\n                        </span>\r\n                        {props.sala.nome}\r\n                    </h1>\r\n                    <p>Horários Reservados</p>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        className={'btn_detalhes'}\r\n                        text={'Detalhes'}\r\n                        onClick={props.onClickDetalhesListener}/>\r\n                </div>\r\n            </div>\r\n            { aluguelMensal ?\r\n                <h2 className={'aluguel_mensal'}>Esta sala está alugada por todo o mês e não está disponível para agendamentos.</h2>\r\n                :\r\n                <WeekCalendar sala={props.sala} isAdm={props.isAdm} addReservaListener={props.addReservaListener}/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nSala.propTypes = {\r\n    isAdm: PropTypes.bool,\r\n    addReservaListener: PropTypes.func,\r\n    onClickDetalhesListener: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sala);\r\n","import React from 'react';\r\nimport Select from \"react-select\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../../AuxFunctions\";\r\n\r\nconst HoraAvulsaCliente = props => {\r\n\r\n    const eSabado = () => {\r\n        return (props.dateSelected.getDay() === 6);\r\n    }\r\n\r\n    const selectOptions = (horaInicial, isHoraFinal = false) => {\r\n        let array = [];\r\n        for (let i = horaInicial; i < (isHoraFinal ? (eSabado() ? 13 : 21 ) : (eSabado() ? 12 : 20)); i++) {\r\n            array.push({label: i+':00', value: i});\r\n        }\r\n        return array;\r\n    };\r\n    const [horaInicial, setHoraInicial] = React.useState(0);\r\n    const [horaFinal, setHoraFinal] = React.useState(0);\r\n    const [horasFinais, setHorasFinais] = React.useState(selectOptions(8, true));\r\n\r\n    React.useEffect(() => {\r\n        setHoraInicial(0)\r\n        setHoraFinal(0)\r\n        setHorasFinais((props.dateSelected.getUTCDay() === new Date().getUTCDay())\r\n            ? selectOptions(new Date().getHours()+1, true) : selectOptions(8, true))\r\n    }, [props.dateSelected])\r\n\r\n    return (\r\n        <div>\r\n            <div className={'horas_intervalo'}>\r\n                <div>\r\n                    <h2>Hora Inicial</h2>\r\n                    <Select\r\n                        name={'hora_inicio'}\r\n                        value={horaInicial === 0 ?  '' : {label: horaInicial+':00', value: horaInicial}}\r\n                        style={{width: '100px'}}\r\n                        onChange={e => {\r\n                            setHorasFinais((e) ? selectOptions(e.value + 1, true) : selectOptions(\r\n                                props.dateSelected.getUTCDay() === new Date().getUTCDay())\r\n                                ? selectOptions(new Date().getHours()+1) : selectOptions(9)\r\n                            )\r\n                            setHoraInicial((e) ? e.value : 0);\r\n                        }}\r\n                        classNamePrefix={'Select'}\r\n                        options={\r\n                            //Não deixar fazer reserva um horário anterior ao que já passou.\r\n                            (props.dateSelected.getUTCDay() === new Date().getUTCDay())\r\n                                ? selectOptions(new Date().getHours() + 1) : selectOptions(9)}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Hora Final</h2>\r\n                    <Select\r\n                        onChange={e => setHoraFinal((e) ? e.value : 0)}\r\n                        name={'hora_fim'}\r\n                        value={horaFinal === 0 ?  '' : {label: horaFinal+':00', value: horaFinal}}\r\n                        classNamePrefix={'Select'} options={horasFinais}/>\r\n                </div>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>{transformStringToReais(props.salaSelected.valor_hora)}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>{transformStringToReais(horaFinal === 0 ? 0 : props.salaSelected.valor_hora * (horaFinal - horaInicial))}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salaSelected: state.salas.salaSelected,\r\n    dateSelected: state.general.dateSelected,\r\n})\r\n\r\nexport default connect(mapStateToProps)(HoraAvulsaCliente);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TurnoCliente = props => {\r\n\r\n    const eSabado = () => (props.dateSelected.getDay() === 6)\r\n\r\n    const optionsTurno = eSabado() ?\r\n        [{label: '08:00h às 12:00h', value: { hora_inicio: 8, hora_fim: 12}}]\r\n        : [{\r\n        label: '08:00h às 13:00h', value: {\r\n            hora_inicio: 8,\r\n            hora_fim: 13,\r\n        },\r\n    }, {\r\n        label: '14:00h às 18:00h', value: {\r\n            hora_inicio: 14,\r\n            hora_fim: 18,\r\n        },\r\n    }, {\r\n        label: '15:00h às 19:00h', value: {\r\n            hora_inicio: 15,\r\n            hora_fim: 19,\r\n        },\r\n    }, {\r\n        label: '16:00h às 20:00h', value: {\r\n            hora_inicio: 16,\r\n            hora_fim: 20,\r\n        },\r\n    }];\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <h2>Duração do Turno</h2>\r\n                <Select\r\n                    onChange={e => props.selectTurno(e.value)}\r\n                    name={'hora_turno'}\r\n                    placeholder={'Selecione o Horário do Turno'}\r\n                    options={optionsTurno}/>\r\n                <div className={'resume_container'}>\r\n                    <div>\r\n                        <h2>Valor/Hora</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Valor Total:</h2>\r\n                        <h3>R$139,90</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTurnoCliente.propTypes = {\r\n    selectTurno: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TurnoCliente);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst MensalCliente = props => {\r\n\r\n    const [optionsMes, setOptionMes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let meses = [];\r\n        for (let i = 1; i < 4; i++)\r\n            meses.push({\r\n                label: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n                value: moment(new Date()).locale('pt-BR').add(i, 'month').toDate(),\r\n            });\r\n        setOptionMes(meses);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <h2>Mês a ser Solicitado</h2>\r\n                <Select\r\n                    onChange={e => {\r\n                        props.selectMes(e.value);\r\n                        console.log(e.value);\r\n                    }}\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Mês a ser solicitado'}\r\n                    options={optionsMes}/>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor Mensal:</h2>\r\n                    <h3>R$139,90</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MensalCliente);","import React from 'react';\r\nimport HoraAvulsaCliente from \"./horaAvulsa\";\r\nimport TurnoCliente from \"./turno\";\r\nimport MensalCliente from \"./mensal\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Options = ({selectedPage, selectPage, selectTurno, selectMes}) => {\r\n\r\n    const renderPage = page => {\r\n        switch (page) {\r\n            case 'Hora Avulsa':\r\n                return (<HoraAvulsaCliente />);\r\n            case 'Turno':\r\n                return (<TurnoCliente selectTurno={selectTurno}/>);\r\n            case 'Mensal':\r\n                return (<MensalCliente selectMes={selectMes}/>);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={'options'}>*/}\r\n            {/*    <div*/}\r\n            {/*        onClick={() => selectPage('Hora Avulsa')}*/}\r\n            {/*        className={(selectedPage === 'Hora Avulsa')*/}\r\n            {/*            ? 'option selected' : 'option'}>*/}\r\n            {/*        <p>Hora Avulsa</p>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div*/}\r\n            {/*        onClick={() => selectPage('Turno')}*/}\r\n            {/*        className={(selectedPage === 'Turno') ?*/}\r\n            {/*            'option selected' : 'option'}>*/}\r\n            {/*        <p>Turno</p>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div*/}\r\n            {/*        onClick={() => selectPage('Mensal')}*/}\r\n            {/*        className={(selectedPage === 'Mensal') ?*/}\r\n            {/*            'option selected' : 'option'}>*/}\r\n            {/*        <p>Mensal</p>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            {renderPage(selectedPage)}\r\n        </div>\r\n    );\r\n};\r\n\r\nOptions.propTypes = {\r\n    selectedPage: PropTypes.string.isRequired,\r\n    selectPage: PropTypes.func.isRequired,\r\n    selectTurno: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../../../button/button\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Options from \"./tipos/options\";\r\nimport {connect} from \"react-redux\";\r\nimport Moment from \"moment/min/moment-with-locales\";\r\nimport {extendMoment} from \"moment-range\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\n\r\nconst moment = extendMoment(Moment)\r\n\r\nconst ModalAgendamento = ({\r\n                              show,\r\n                              close,\r\n                              dateSelected,\r\n                              userLogged,\r\n                              salaSelected,\r\n                              setAgendamentos,\r\n                              mongoClient,\r\n                              agendamentos,\r\n                              setProfissionalReservas\r\n                          }) => {\r\n\r\n        const [loading, setLoading] = React.useState(false);\r\n        const [selectedPage, selectPage] = React.useState('Hora Avulsa');\r\n        const [selectedTurno, selectTurno] = React.useState({});\r\n        const [selectedMes, selectMes] = React.useState(null);\r\n\r\n        const checkIfIsBetween = (actualDateBegin, actualDateEnds, dateOne, dateTwo) => {\r\n            let one = moment.range(actualDateBegin, actualDateEnds);\r\n            let two = moment.range(dateOne, dateTwo);\r\n            return one.overlaps(two)\r\n        }\r\n\r\n        const prepareData = form => {\r\n            let data = {\r\n                profissional_id: userLogged._id,\r\n                sala_id: salaSelected._id,\r\n                data: dateSelected,\r\n                cancelado: false,\r\n                pago: false,\r\n                executado: false,\r\n            };\r\n            switch (selectedPage) {\r\n                case 'Hora Avulsa':\r\n                    return {\r\n                        ...data,\r\n                        hora_inicio: Number(form.hora_inicio.value),\r\n                        hora_fim: Number(form.hora_fim.value),\r\n                        valorTotal: Number((salaSelected.valor_hora *\r\n                            (Number(form.hora_fim.value) - Number(form.hora_inicio.value))).toFixed(2)),\r\n                    };\r\n                case 'Turno':\r\n                    return {\r\n                        ...data,\r\n                        ...selectedTurno,\r\n                        valorTotal: salaSelected.valor_hora * (selectedTurno.hora_fim - selectedTurno.hora_inicio)\r\n                    }\r\n                case 'Mensal':\r\n                    return {\r\n                        ...data,\r\n                        mes: selectedMes,\r\n                        valorTotal: 3500\r\n                    }\r\n            }\r\n        }\r\n\r\n        const getStringDate = (date, hour) => (`${moment(date).format('yyyy-MM-DD')} ${hour}:00`)\r\n\r\n        const handleSubmit = async e => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            setLoading(true);\r\n            let data = prepareData(form);\r\n            if (selectedPage === 'Hora Avulsa') {\r\n                await reservaDAO.createHoraAvulsa(data, agendamentos, dateSelected, async () => {\r\n                    await reservaDAO.create(data, userLogged);\r\n                    let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                    setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, novasReservas))\r\n                    setAgendamentos(novasReservas)\r\n                    setLoading(false);\r\n                    alert('Adicionado com sucesso!');\r\n                    close();\r\n                }, () => {\r\n                    alert(\"Erro! O horário já se encontra reservado ou horário inválido.\");\r\n                    setLoading(false)\r\n                    close();\r\n                })\r\n            } else if (selectedPage === 'Turno') {\r\n                let dateBegin = new Date(getStringDate(dateSelected, selectedTurno.hora_inicio))\r\n                let dateFim = new Date(getStringDate(dateSelected, selectedTurno.hora_fim))\r\n                let passed = true\r\n                for (let agendamento of agendamentos) {\r\n                    // Checagem de ERRO para AGENDAMENTO DE TURNO.\r\n                    let dateInicioAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_inicio)),\r\n                        dateFimAgendamento =\r\n                            new Date(getStringDate(new Date(agendamento.data), agendamento.hora_fim))\r\n\r\n                    if (checkIfIsBetween(dateBegin, dateFim, dateInicioAgendamento, dateFimAgendamento)) {\r\n                        alert(\"Erro! O horário já se encontra reservado.\");\r\n                        passed = false\r\n                        setLoading(false)\r\n                        close();\r\n                        break;\r\n                    }\r\n                }\r\n                if (passed) {\r\n                    await reservaDAO.create(data, userLogged);\r\n                    let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                    setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, novasReservas))\r\n                    setAgendamentos(novasReservas)\r\n                    setLoading(false);\r\n                    alert('Adicionado com sucesso!');\r\n                    close();\r\n                }\r\n            } else {\r\n                await reservaDAO.create(data, userLogged);\r\n                let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                setAgendamentos(novasReservas)\r\n                setLoading(false);\r\n                alert('Adicionado com sucesso!');\r\n                close();\r\n            }\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            if (mongoClient) {\r\n                reservaDAO.findAll(mongoClient).then(res => {\r\n                    setAgendamentos(res);\r\n                    if ('nome' in userLogged) {\r\n                        setProfissionalReservas(reservaDAO.findReservaDeCliente(userLogged._id, res));\r\n                    }\r\n                });\r\n            }\r\n        }, [mongoClient]);\r\n\r\n        return (\r\n            <ModalParent show={show}\r\n                         onSubmit={handleSubmit}\r\n                         header={<header>\r\n                             <div>\r\n                                 <h1>Adicionar Reserva</h1>\r\n                                 <h3>\r\n                                     {moment(dateSelected).locale('pt-BR')\r\n                                         .format('DD [de] MMMM [de] YYYY')} - {salaSelected.nome}\r\n                                 </h3>\r\n                             </div>\r\n                             <div className={'close_container'} onClick={close}>\r\n                                 <i className={'fa fa-times'}/>\r\n                             </div>\r\n                         </header>}\r\n                         body={<div>\r\n                             <Options\r\n                                 selectedPage={selectedPage}\r\n                                 selectPage={selectPage}\r\n                                 selectMes={selectMes}\r\n                                 selectTurno={selectTurno}/>\r\n                         </div>}\r\n                         footer={\r\n                             <div className={'footer'}>\r\n                                 <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                             </div>}/>\r\n        )\r\n    }\r\n;\r\n\r\nModalAgendamento.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dateSelected: state.general.dateSelected,\r\n    salaSelected: state.salas.salaSelected,\r\n    userLogged: state.general.userLogged,\r\n    mongoClient: state.general.mongoClient,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAgendamento);\r\n","const ModalTypes = {\r\n    reservaCliente: 'RESERVA_CLIENTE',\r\n    detalhesSala: 'DETALHES_SALA',\r\n    adicionarAdministrador: 'ADD_ADM',\r\n    adicionarProfissional: 'ADD_PROF',\r\n    adicionarAgendamentoAdm: 'ADD_TASK_ADM',\r\n    adicionarSalas: 'ADD_SALAS',\r\n    adicionarAgendamento: 'ADD_AGENDAMENTO',\r\n    editarAgendamento: 'EDIT_AGENDAMENTO_ADM',\r\n};\r\n\r\nexport default ModalTypes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport \"./styles.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalDetalhesSala = props => {\r\n\r\n\r\n    const renderImage = () => {\r\n        if ('fotos' in props.salaSelected)\r\n        {\r\n            return (\r\n                <div className={'carrousel'}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                    {props.salaSelected ? <img alt={''} src={props.salaSelected.fotos[0]}/> : <></>}\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <h1>Detalhes - {props.salaSelected.nome}</h1>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'modal_sala_body'}>\r\n                    {renderImage()}\r\n                <div className={'sala_details'}>\r\n                    <div>\r\n                        <h2>Valor/Hora:</h2>\r\n                        <h3>{transformStringToReais(props.salaSelected.valor_hora)}</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>No espaço contém:</h2>\r\n                        <h3>{props.salaSelected.descricao}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        />\r\n    )\r\n};\r\n\r\nModalDetalhesSala.propTypes = {\r\n    sala: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salaSelected: state.salas.salaSelected,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ModalDetalhesSala);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\n\r\nconst AlternatingTab = props => {\r\n    return (\r\n        <div className={'alternating_tabs'}>\r\n            {\r\n                props.elements.map((element, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={index === props.selectedIndex ? 'selected' : ''}\r\n                        onClick={element.onClick}>\r\n                        <h2>{element.name}</h2>\r\n                    </div>\r\n                ))\r\n            }\r\n            {(props.selectedIndex === 0) ? <Redirect to='agendamentos' /> : <></>}\r\n            {(props.selectedIndex === 1) ? <Redirect to='minhas_reservas' /> : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nAlternatingTab.propTypes = {\r\n    selectedIndex: PropTypes.number.isRequired,\r\n    elements: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AlternatingTab;\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Snack = props => {\r\n\r\n    const getReservasAgendadas = () => {\r\n        let count = 0;\r\n        props.profissionalReservas.forEach(reserva => {\r\n            if (!reserva.cancelado && !reserva.executado)\r\n                count++;\r\n        })\r\n        return count;\r\n    }\r\n    return (\r\n        <div className={'snack_container'}>\r\n            <h2>Você tem {getReservasAgendadas()} reservas agendadas</h2>\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionalReservas: state.profissionais.profissionalReservas,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Snack);","const COLLECTION = 'salas'\r\n\r\nconst salaDAO = {\r\n    db: null,\r\n    setDb(db) {\r\n        this.db = db;\r\n    },\r\n    create(sala){\r\n        return this.db.collection(COLLECTION).insertOne(sala);\r\n    },\r\n    update(query, changes) {\r\n        return this.db.collection(COLLECTION).updateMany(query, {$set: changes})\r\n    },\r\n    delete(query) {\r\n        return this.db.collection(COLLECTION).deleteMany(query);\r\n    },\r\n    findAll() {\r\n        return this.db.collection(COLLECTION).find({}).toArray();\r\n    }\r\n};\r\nexport default salaDAO;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport Sala from \"../../../assets/component/sala/sala\";\r\nimport \"./agenda.sass\";\r\nimport ModalAgendamento from \"../../../assets/component/modals/cliente/modal_agendamento/modalAgendamento\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalDetalhesSala from \"../../../assets/component/modals/cliente/modal_detalhes_sala/detalhesSala\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ModoPaisagem from \"../../../assets/component/modoPaisagem/modoPaisagem\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ClienteAgendamentos = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(0);\r\n\r\n    const story = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!('nome' in props.userLogged))\r\n            story.push('/');\r\n    })\r\n\r\n    const sortSalas = (a,b) => {\r\n        let [first, second] = [ a.nome.split(' '), b.nome.split(' ') ]\r\n        if (+first[1] > +second[1]) { return 1 }\r\n        if (+first[1] < +second[1]) { return -1 }\r\n        else return 0\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (clienteDAO.db && 'nome' in props.userLogged) {\r\n            salaDAO.findAll().then(res => {\r\n                if (props.userLogged.sala_fixa) {\r\n                    res.sort(sortSalas);\r\n                    // coloca no topo. Função Swap\r\n                    for (let i = 0; i < res.length; i++) {\r\n                        if (props.userLogged.sala_fixa.toString() === res[i]._id.toString()) {\r\n                            let aux = res[0]\r\n                            res[0] = res[i]\r\n                            res[i] = aux\r\n                        }\r\n                    }\r\n                } else {\r\n                    res.sort(sortSalas)\r\n                }\r\n                console.log(res)\r\n                props.setSalas(res);\r\n            });\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n                props.setProfissionalReservas(reservaDAO.findReservaDeCliente(props.userLogged._id, res));\r\n            });\r\n        }\r\n    }, [props.client, props.userLogged]);\r\n\r\n    return (\r\n        <div>\r\n            <ModoPaisagem/>\r\n            <ModalAgendamento\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.reservaCliente}\r\n            />\r\n            <ModalDetalhesSala\r\n                close={() => props.closeModal()}\r\n                show={props.showModal && props.modalType === ModalTypes.detalhesSala}\r\n            />\r\n            <ClienteTopbar/>\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => {\r\n                        selectTab(1)\r\n                    },\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_salas'}>\r\n                {\r\n                    props.salas.map((sala, index) => (\r\n                        <Sala\r\n                            sala={sala}\r\n                            key={index}\r\n                            onClickDetalhesListener={() => {\r\n                                props.selectSala(sala)\r\n                                props.openModal(ModalTypes.detalhesSala);\r\n                            }}\r\n                            addReservaListener={date => {\r\n                                props.selectDate(date.toDate());\r\n                                props.selectSala(sala);\r\n                                props.openModal(ModalTypes.reservaCliente)\r\n                            }}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    salas: state.salas.salas,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    selectDate: date => dispatch({type: Actions.selectDate, payload: date}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClienteAgendamentos)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport moment from 'moment/min/moment-with-locales.min';\r\nimport {numberToHours} from \"../../AuxFunctions\";\r\n\r\nconst ReservaCliente = props => {\r\n    if (props.reserva.cancelado) {\r\n        return <></>\r\n    } else {\r\n        return (\r\n            <div className={props.executado ? 'container_reserva_cliente executado' : 'container_reserva_cliente'}>\r\n                <div>\r\n                    <h1>{moment(props.reserva.data).format('DD/MM/YYYY')}</h1>\r\n                    <h4>{'mes' in props.reserva ? (<i>Alugado por todo o Mês de {moment(props.reserva.mes).locale('pt-BR').format('MMMM')}</i>) :\r\n                        <div>{numberToHours(props.reserva.hora_inicio)} ~ {numberToHours(props.reserva.hora_fim)}</div>}</h4>\r\n                </div>\r\n                <div>\r\n                    <h4>Sala</h4>\r\n                    <h1>{'sala' in props.reserva ? props.reserva.sala.nome : 'Sem nome'}</h1>\r\n                </div>\r\n                <div>\r\n                    <h4>Situação</h4>\r\n                    <h2>{props.reserva.pago ? 'Pago' : 'Pendente'}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReservaCliente.propTypes = {\r\n    executado: PropTypes.bool,\r\n}\r\n\r\nexport default ReservaCliente;","import PropTypes from \"prop-types\";\r\nimport CheckBox from \"../checkbox/checkbox\";\r\nimport React from \"react\";\r\nimport './CancelCheckbox.sass';\r\n\r\nconst CancelCheckbox = ({ onCheck }) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'cancel_checkbox_container'}>\r\n            <div className={checked ? 'cancel_checkbox checked' : 'cancel_checkbox'} onClick={() => {\r\n                setChecked(!checked);\r\n                onCheck(checked);\r\n            }}>\r\n                <i className={'fas fa-check'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckBox.propTypes = {\r\n    onCheck: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CancelCheckbox;","import React from 'react';\r\nimport './reservas.sass';\r\nimport {connect} from \"react-redux\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport AlternatingTab from \"../../../assets/component/alternating_tab/alt_tab\";\r\nimport Snack from \"../../../assets/component/Snack/snack\";\r\nimport ReservaCliente from \"../../../assets/component/reserva_cliente/reserva_cliente\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CancelCheckbox from \"../../../assets/component/cancel_checkbox/CancelCheckbox\";\r\nimport {removeElementFromArray} from \"../../../assets/AuxFunctions\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\n\r\nconst MinhasReservasPage = props => {\r\n\r\n    const [selectedTab, selectTab] = React.useState(1);\r\n    const [cancelando, setCancelando] = React.useState(false);\r\n    const [selectedReservas, selectReservas] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (!('nome' in props.userLogged)) {\r\n            hist.push('/');\r\n        }\r\n    });\r\n\r\n    const renderHistorico = () => {\r\n        let arrayExecutados = [];\r\n        props.profissionalReservas.forEach(reserva => {\r\n            if (reserva.executado)\r\n                arrayExecutados.push(reserva);\r\n        });\r\n        if (arrayExecutados.length > 0) {\r\n            return arrayExecutados.map((reserva, index) => (\r\n                <ReservaCliente reserva={reserva} executado key={index}/>\r\n            ))\r\n        } else {\r\n            return <h2 className={'empty_array'}>Não há agendamentos executados até o momento.</h2>\r\n        }\r\n    };\r\n\r\n    const handleConfirmCancelamento = async () => {\r\n        if (window.confirm(\"Você tem certeza que deseja cancelar esses agendamentos?\")) {\r\n            setLoading(true);\r\n            try {\r\n                await reservaDAO.cancelaMuitasReservas(selectedReservas);\r\n                const reservas = await reservaDAO.findAll(props.mongoClient);\r\n                props.setAgendamentos(reservas);\r\n                props.setProfissionalReservas(reservaDAO.findReservaDeCliente(props.userLogged._id, reservas));\r\n                alert(\"Cancelamento realizado com sucesso!\");\r\n            } catch (err) {\r\n                alert(\"Erro! Informações: \"+err);\r\n            }\r\n            setLoading(false);\r\n            setCancelando(false);\r\n        }\r\n    };\r\n\r\n    const renderReservas = () => {\r\n        let reservasAvailable = props.profissionalReservas.filter(reserva => {\r\n            return (!reserva.executado && !reserva.cancelado)\r\n        })\r\n        console.log(reservasAvailable)\r\n        if (reservasAvailable.length > 0) {\r\n            return reservasAvailable.map((reserva, index) => {\r\n                    return (\r\n                        <div className={cancelando ? 'flex flex_margin' : 'flex'}>\r\n                            {cancelando ? <CancelCheckbox onCheck={checked => {\r\n                                if (!checked) {\r\n                                    //Se estiver marcado\r\n                                    selectReservas([...selectedReservas, reserva]);\r\n                                } else {\r\n                                    // Se não estiver\r\n                                    selectReservas(removeElementFromArray(selectedReservas, reserva));\r\n                                }\r\n                            }}/> : <></>}\r\n                            <ReservaCliente reserva={reserva} key={index}/>\r\n                        </div>\r\n                    );\r\n            })\r\n        } else {\r\n            return <h2 className={'empty_array'}>Não há agendamentos marcados até o momento.</h2>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'reservas_page_container'}>\r\n            <ClienteTopbar/>\r\n            <div className={'info_container'}>\r\n                <AlternatingTab selectedIndex={selectedTab} elements={[{\r\n                    name: 'Salas para Reservar',\r\n                    onClick: () => selectTab(0),\r\n                }, {\r\n                    name: 'Minhas Reservas',\r\n                    onClick: () => selectTab(1),\r\n                }]}/>\r\n                <Snack/>\r\n            </div>\r\n            <div className={'container_reservas'}>\r\n                <div className={'flex'}>\r\n                    <h1 className={'title'}>Minhas Reservas</h1>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setCancelando(!cancelando)\r\n                        }}\r\n                        className={'cancelar_agendamentos'}\r\n                        text={cancelando ? 'Parar Cancelamento' : 'Cancelar Agendamentos'}/>\r\n                </div>\r\n                {\r\n                    renderReservas()\r\n                }\r\n                {cancelando ? <Button\r\n                    onClick={handleConfirmCancelamento}\r\n                    text={'Confirmar Cancelamento'}\r\n                    loading={loading}\r\n                    className={'cancelar_button'} />: <></>}\r\n                <h1 className={'title'}>Histórico</h1>\r\n                {\r\n                    renderHistorico()\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n    mongoClient: state.general.mongoClient,\r\n    profissionalReservas: state.profissionais.profissionalReservas,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAgendamentos: agnds => dispatch({type: Actions.setAgendamentos, payload: agnds}),\r\n    setProfissionalReservas: reservas => dispatch({type: Actions.setProfissionalReservas, payload: reservas}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MinhasReservasPage);\r\n","import React from 'react';\r\nimport './hamburgerMenu.sass';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HamburgerMenu = props => {\r\n    return (\r\n        <div className={'hamburger_container'} onClick={props.onClick}>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nHamburgerMenu.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default HamburgerMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './responsiveMenu.sass';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst pages = [{\r\n    pageName: 'dashboard',\r\n    pageLabel: 'Dashboard',\r\n}, {\r\n    pageName: 'agendamento_adm',\r\n    pageLabel: 'Agendamentos',\r\n}, {\r\n    pageName: 'administrativo',\r\n    pageLabel: 'Administrativo',\r\n}, {\r\n    pageName: 'logs',\r\n    pageLabel: 'Logs'\r\n}, {\r\n  pageName: 'Salas',\r\n  pageLabel: 'Salas',\r\n}, {\r\n    pageName: 'profissionais',\r\n    pageLabel: 'Profissionais'\r\n},];\r\n\r\nconst ResponsiveMenu = ({pageSelected, onClick, open}) => {\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <div className={'responsive_menu ' + (open ? 'open': '')}>\r\n            <ul>\r\n                {pages.map((page, index) => (\r\n                    <li\r\n                        key={index}\r\n                        onClick={() => {\r\n                            onClick();\r\n                            history.push(page.pageName)\r\n                        }}\r\n                        className={pageSelected === page.pageName ? 'selected' : ''}>\r\n                        {page.pageLabel}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nResponsiveMenu.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n    open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ResponsiveMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport HamburgerMenu from \"../hamburgerMenu/hamburgerMenu\";\r\nimport ResponsiveMenu from \"../responsiveMenu/responsiveMenu\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport Button from \"../button/button\";\r\n\r\nconst Tab = props => {\r\n    const story = useHistory();\r\n\r\n    return (\r\n            <div onClick={() => {\r\n                story.push('/' + props.page);\r\n            }} className={'tab ' + (props.selected ? 'selected': '')}>\r\n                <p>{props.children}</p>\r\n\r\n            </div>\r\n    )\r\n};\r\n\r\nconst AdministradorTopbar = ({pageSelected, userLogged, setUserLogged}) => {\r\n\r\n    const [hambOpen, setHambOpen] = React.useState(false);\r\n\r\n    const hist = useHistory();\r\n\r\n    const logout = () => {\r\n        setUserLogged({});\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('pwd');\r\n        hist.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className={'topbar_container topbar_container_adm'}>\r\n            <HamburgerMenu onClick={() => setHambOpen(true)}/>\r\n            <ResponsiveMenu open={hambOpen} pageSelected={pageSelected} onClick={() => setHambOpen(false)}/>\r\n            <div className={'img_container'}>\r\n                <img\r\n                    alt={'integra_logo'}\r\n                    src={require('../../integra_logo.png')}/>\r\n            </div>\r\n            <div className={'tabs'}>\r\n                <Tab\r\n                    page={'dashboard'}\r\n                    selected={pageSelected === 'dashboard'}>\r\n                    Dashboard\r\n                </Tab>\r\n                <Tab\r\n                    page={'agendamento_adm'}\r\n                    selected={pageSelected === 'agendamento_adm'}>\r\n                    Agendamentos\r\n                </Tab>\r\n                <Tab page={'profissionais'} selected={pageSelected === 'profissionais'}>Profissionais</Tab>\r\n                <Tab page={'administrativo'}  selected={pageSelected === 'administrativo'}>Administrativo</Tab>\r\n                <Tab page={'salas'}  selected={pageSelected === 'salas'}>Salas</Tab>\r\n                <Tab page={'logs'} selected={pageSelected === 'logs'}>Logs</Tab>\r\n            </div>\r\n            <div className={'user_data'}>\r\n                <div>\r\n                    <h2>{userLogged ? userLogged.nome : 'Catherine Torres'}</h2>\r\n                    <h4>Administrador</h4>\r\n                </div>\r\n            </div>\r\n            <img\r\n                alt={'profile_pic'}\r\n                className={'profile_pic'} src={userLogged ? userLogged.foto_url : 'https://randomuser.me/api/portraits/women/43.jpg'}/>\r\n            <Button\r\n                onClick={() => {\r\n                    logout();\r\n                }}\r\n                width={'5%'}\r\n                text={<i className={'fas fa-door-open'}/>}\r\n                className={'log-off'}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nAdministradorTopbar.propTypes = {\r\n    pageSelected: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministradorTopbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./CalendarAgendamentos.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../modal_types\";\r\nimport {numberIsBetween} from \"../../AuxFunctions\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport Moment from \"moment/min/moment-with-locales\";\r\nimport {extendMoment} from \"moment-range\";\r\n\r\nconst moment = extendMoment(Moment)\r\n\r\nconst fillHoras = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 13; i++)\r\n        array.push({label: i + 9 + ':00', value: i + 9});\r\n    return array;\r\n}\r\n\r\nconst horas = fillHoras();\r\n\r\nconst CalendarAgendamentos = props => {\r\n    return (\r\n        <div className={'calendar_agendamentos_container'}>\r\n            <h1>\r\n                <span\r\n                    onClick={() => {\r\n                        props.selectDate(moment(props.dateSelected).subtract(1, 'day').toDate())\r\n                    }}\r\n                    className={'chevron_date'}\r\n                    style={{float: 'left'}}>\r\n                    <i className={'fa fa-chevron-left'}/>\r\n                </span>\r\n                {moment(props.dateSelected).locale('pt-BR').format(' DD MMMM YYYY')}\r\n                <span\r\n                    onClick={() => {\r\n                        props.selectDate(moment(props.dateSelected).add(1, 'day').toDate())\r\n                    }}\r\n                    className={'chevron_date'}\r\n                    style={{float: 'right'}}>\r\n                    <i className={'fa fa-chevron-right'}/>\r\n                </span>\r\n            </h1>\r\n            <div className={'container_table'}>\r\n                <table className={'calendar_table'}>\r\n                    {/*aqui vai a numeracao das salas*/}\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{width: '10%'}}></th>\r\n                        {\r\n                            props.salas.map((sala, index) => <th key={index}>{sala.nome}</th>)\r\n                        }\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        horas.map((hora, index) => (\r\n                            <tr key={index}>\r\n                                <td>{hora.label}</td>\r\n                                {props.salas.map((sala, indexSala) => {\r\n                                    let agendamentosDaSala = reservaDAO.getAgendamentosFromSala(props.agendamentos, sala);\r\n                                    let [isOccupied, isMonthly] = [false, false];\r\n                                    let agnd = null;\r\n                                    agendamentosDaSala.forEach((agendamento, index) => {\r\n                                        if ('hora_inicio' in agendamento) {\r\n                                            if (numberIsBetween(hora.value, agendamento.hora_inicio, agendamento.hora_fim)\r\n                                                && (moment(props.dateSelected).isSame(new Date(agendamento.data), 'day'))\r\n                                                && !agendamento.cancelado) {\r\n                                                isOccupied = true;\r\n                                                agnd = agendamento;\r\n                                                console.log(agnd);\r\n                                            }\r\n                                        } else if ('mes' in agendamento\r\n                                            && moment(agendamento[\"mes\"]).isSame(props.dateSelected, 'month')) {\r\n                                            isMonthly = true;\r\n                                        }\r\n                                    });\r\n                                    if (!isOccupied) {\r\n                                        if (isMonthly) {\r\n                                            return (<td key={indexSala} className={'alugado'}>\r\n                                                    <i>Alugado Mensalmente</i>\r\n                                            </td>)\r\n                                        } else {\r\n                                            return (\r\n                                                <td key={indexSala} className={'free'} onClick={() => {\r\n                                                    props.openModal(ModalTypes.adicionarAgendamentoAdm);\r\n                                                    props.selectSala(sala);\r\n                                                }}>\r\n                                                    <i className={'fa fa-plus'}/>\r\n                                                </td>\r\n                                            )\r\n                                        }\r\n                                    } else if (agnd) {\r\n                                        if (isMonthly) {\r\n                                            return (<td key={indexSala} className={'occupied'}>\r\n                                                {agnd ? (agnd.profissional ? agnd.profissional.nome :\r\n                                                    <i>Usuário Excluído</i>) : ''}\r\n                                            </td>)\r\n                                        } else {\r\n                                            if (agnd.hora_inicio === hora.value) {\r\n                                                return (<td\r\n                                                            onClick={() => {\r\n                                                                props.openModal(ModalTypes.editarAgendamento);\r\n                                                                props.selectAgendamentos(agnd);\r\n                                                            }}\r\n                                                            key={indexSala}\r\n                                                            rowSpan={agnd.hora_fim - agnd.hora_inicio}\r\n                                                            className={'occupied'}>\r\n                                                    {agnd ? (agnd.profissional ? agnd.profissional.nome :\r\n                                                        <i>Usuário Excluído</i>) : ''}\r\n                                                </td>)\r\n                                            } else {\r\n                                                return <></>\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                })}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCalendarAgendamentos.propTypes = {\r\n    agendamentos: PropTypes.array,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    salas: state.salas.salas,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectDate: date => dispatch({type: Actions.selectDate, payload: date}),\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    selectAgendamentos: agendamento => dispatch({type: Actions.selectAgendamentos, payload: agendamento}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarAgendamentos);\r\n","import React from 'react';\r\nimport Select from \"react-select\";\r\nimport Actions from \"../../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {transformStringToReais} from \"../../../../../AuxFunctions\";\r\n\r\nconst HoraAvulsa = ({profissionais, selectProf, salaSelected, dateSelected}) => {\r\n\r\n    const eSabado = () => {\r\n        return (dateSelected.getDay() === 6);\r\n    }\r\n\r\n    const selectOptions = (horaInicial, isHoraFinal = false) => {\r\n        let array = [];\r\n        for (let i = horaInicial; i < (isHoraFinal ? (eSabado() ? 13 : 21 ) : (eSabado() ? 12 : 20)); i++) {\r\n            array.push({label: i+':00', value: i});\r\n        }\r\n        return array;\r\n    };\r\n\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n    const [horaInicial, setHoraInicial] = React.useState(0);\r\n    const [horaFinal, setHoraFinal] = React.useState(0);\r\n    const [horasFinais, setHorasFinais] = React.useState(selectOptions(9, true));\r\n    let selectedOption = null;\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        setProfissionaisOptions(array);\r\n    }, [profissionais]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    required\r\n                    name={'profissional'}\r\n                    onChange={e => { selectProf(e.value) }}\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Profissional'}\r\n                    options={profissionaisOptions}/>\r\n            </div>\r\n            <div className={'horas_intervalo'}>\r\n                <div>\r\n                    <h2>Hora Inicial</h2>\r\n                    <Select\r\n                        name={'hora_inicio'}\r\n                        onChange={e => {\r\n                            setHorasFinais(selectOptions(e.value + 1, true));\r\n                            setHoraInicial(e.value);\r\n                        }}\r\n                        classNamePrefix={'Select'}\r\n                        options={selectOptions(9)}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Hora Final</h2>\r\n                    <Select\r\n                        onChange={e => setHoraFinal(e.value)}\r\n                        name={'hora_fim'}\r\n                        classNamePrefix={'Select'} options={horasFinais}/>\r\n                </div>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>{transformStringToReais(salaSelected.valor_hora)}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>{transformStringToReais(horaFinal === 0 ? 0 : salaSelected.valor_hora * (horaFinal - horaInicial))}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    profissionais: state.profissionais.profissionais,\r\n    salaSelected: state.agendamentos.salaSelected,\r\n    dateSelected: state.general.dateSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n})\r\n\r\nexport default connect(mapStateToProps)(HoraAvulsa);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nconst Turno = props => {\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        props.profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        setProfissionaisOptions(array);\r\n    }, [props.profissionais]);\r\n\r\n    const optionsTurno = [{\r\n        label: '08:00h às 13:00h', value: '08:00h às 13:00h',\r\n    }, {\r\n        label: '14:00h às 18:00h', value: '14:00h às 18:00h',\r\n    }, {\r\n        label: '15:00h às 19:00h', value: '15:00h às 19:00h',\r\n    }, {\r\n        label: '16:00h às 20:00h', value: '16:00h às 20:00h',\r\n    }];\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    placeholder={'Profissional'}\r\n                    classNamePrefix={'Select'}\r\n                    options={profissionaisOptions}/>\r\n                <h2>Duração do Turno</h2>\r\n                <Select\r\n                    placeholder={'Selecione o Horário do Turno'}\r\n                    options={optionsTurno}/>\r\n                <div className={'resume_container'}>\r\n                    <div>\r\n                        <h2>Valor/Hora</h2>\r\n                        <h3>R$39,90</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Valor Total:</h2>\r\n                        <h3>R$139,90</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Turno);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\n\r\nconst Mensal = props => {\r\n\r\n    const [profissionaisOptions, setProfissionaisOptions] = React.useState([]);\r\n    const [optionsMes, setOptionMes] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let array = [];\r\n        props.profissionais.forEach(prof => {\r\n            array.push({label: prof.nome, value: prof})\r\n        });\r\n        let meses = [];\r\n        for (let i = 0; i < 3; i++)\r\n            meses.push({\r\n                label: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n                value: moment(new Date()).locale('pt-BR').add(i, 'month').format(' MMMM / YYYY'),\r\n            });\r\n        setOptionMes(meses);\r\n        setProfissionaisOptions(array);\r\n    }, [props.profissionais]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={'select_profissionais_container'}>\r\n                <Select\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Profissional'}\r\n                    options={profissionaisOptions}/>\r\n                    <h2>Mês a ser Solicitado</h2>\r\n                <Select\r\n                    style={{marginLeft: '5%', marginRight: '5%'}}\r\n                    placeholder={'Mês a ser solicitado'}\r\n                    options={optionsMes}/>\r\n            </div>\r\n            <div className={'resume_container'}>\r\n                <div>\r\n                    <h2>Valor/Hora</h2>\r\n                    <h3>R$39,90</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Valor Total:</h2>\r\n                    <h3>R$139,90</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Mensal);","import React from 'react';\r\nimport HoraAvulsa from \"./hora_avulsa\";\r\nimport Turno from \"./turno\";\r\nimport Mensal from \"./mensal\";\r\n\r\nconst Options = props => {\r\n\r\n    const [selectedPage, selectPage] = React.useState('Hora Avulsa');\r\n    const renderPage = page => {\r\n        switch (page) {\r\n            case 'Hora Avulsa':\r\n                return (<HoraAvulsa selectProf={props.selectProf}/>);\r\n            case 'Turno':\r\n                return (<Turno/>);\r\n            case 'Mensal':\r\n                return (<Mensal />);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={'options'}>\r\n                <div\r\n                    onClick={() => selectPage('Hora Avulsa')}\r\n                    className={(selectedPage === 'Hora Avulsa')\r\n                        ? 'option selected' : 'option'}>\r\n                    <p>Hora Avulsa</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Turno')}\r\n                    className={(selectedPage === 'Turno') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Turno</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => selectPage('Mensal')}\r\n                    className={(selectedPage === 'Mensal') ?\r\n                        'option selected' : 'option'}>\r\n                    <p>Mensal</p>\r\n                </div>\r\n            </div>\r\n            {renderPage(selectedPage)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.sass\";\r\nimport Button from \"../../../button/button\";\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Options from \"./tipos/options\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\n\r\nconst ModalAgendamentoAdm = ({show, close, mongoClient, dateSelected, salaSelected, userLogged, agendamentos, setAgendamentos}) => {\r\n\r\n    const [selectedProfissional, selectProf] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const profissional = selectedProfissional;\r\n        setLoading(true);\r\n        const data = {\r\n            profissional_id: profissional._id,\r\n            hora_inicio: Number(form.hora_inicio.value),\r\n            hora_fim: Number(form.hora_fim.value),\r\n            sala_id: salaSelected._id,\r\n            data: moment(dateSelected).toDate(),\r\n            valorTotal: Number((salaSelected.valor_hora * (Number(form.hora_fim.value) - Number(form.hora_inicio.value))).toFixed(2)),\r\n            cancelado: false,\r\n            pago: false,\r\n            executado: false,\r\n        }\r\n        if ('_id' in selectedProfissional) {\r\n            await reservaDAO.createHoraAvulsa(data, agendamentos, dateSelected, async () => {\r\n                await reservaDAO.create(data, userLogged);\r\n                let novasReservas = await reservaDAO.findAll(mongoClient);\r\n                setAgendamentos(novasReservas)\r\n                setLoading(false);\r\n                alert('Adicionado com sucesso!');\r\n                close();\r\n            }, () => {\r\n                alert(\"Erro! O horário já se encontra reservado ou horário inválido.\");\r\n                setLoading(false)\r\n                close();\r\n            })\r\n        } else {\r\n            alert('Por favor, selecione um profissional.')\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={handleSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>Adicionar Reserva</h1>\r\n                             <h3>\r\n                                 {moment(dateSelected).locale('pt-BR')\r\n                                     .format('DD [de] MMMM [de] YYYY')} - {salaSelected.nome}\r\n                             </h3>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={close}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <Options selectProf={selectProf}/>\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nModalAgendamentoAdm.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    close: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    dateSelected: state.general.dateSelected,\r\n    salaSelected: state.agendamentos.salaSelected,\r\n    userLogged: state.general.userLogged,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAgendamentoAdm);\r\n\r\n","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport Button from \"../../../button/button\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from 'moment/min/moment-with-locales.min';\r\nimport \"./EditAgendamento.sass\";\r\nimport reservaDAO from \"../../../../../DAO/reservaDAO\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\n\r\nconst ModalEditAgendamento = props => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [executing, setExecuting] = React.useState(false);\r\n    const [finalizado, setFinalizado] = React.useState(false);\r\n    const [pago, setPago] = React.useState(false);\r\n\r\n    const setSubtitle = () => {\r\n        if ('profissional' in props.agendamentoSelected) {\r\n            return props.agendamentoSelected.profissional.nome + ' - ' +\r\n                moment(props.dateSelected).locale('pt-BR').format('DD MMMM [de] YYYY');\r\n        }\r\n        return '';\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setExecuting(('execucao_inicio' in props.agendamentoSelected)\r\n            && !('execucao_fim' in props.agendamentoSelected));\r\n        setFinalizado(('execucao_inicio' in props.agendamentoSelected)\r\n            && ('execucao_fim' in props.agendamentoSelected));\r\n        setPago(props.agendamentoSelected.pago);\r\n    }, [props]);\r\n\r\n    const updateAgendamentos = async () => {\r\n        let agendamentos = await reservaDAO.findAll(props.mongoClient);\r\n        props.setAgendamentos(agendamentos);\r\n        props.selectAgendamentos(reservaDAO.getAgendamentosById(agendamentos, props.agendamentoSelected._id));\r\n    }\r\n\r\n    //Modal para fazer trocar pagamento, execução ou cancelar.\r\n    return (\r\n        <ModalParent\r\n            show={props.show}\r\n            header={<header>\r\n                <div>\r\n                    <h1>Editar Reserva</h1>\r\n                    <h3>{setSubtitle()}</h3>\r\n                </div>\r\n                <div className={'close_container'} onClick={props.close}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div className={'body_edit_agendamento'}>\r\n                <h2>Execução</h2>\r\n                <h3>\r\n                    {finalizado ? `Reserva já foi finalizada. Início às ${\r\n                            moment(props.agendamentoSelected.execucao_inicio).format('HH:mm')\r\n                        }, e fim às ${moment(props.agendamentoSelected.execucao_fim).format('HH:mm')}`\r\n                        : (executing ? 'Reserva está sendo executada' : 'Reserva ainda não executada')}\r\n                    <br/><br/>\r\n                    {\r\n                        finalizado ? <></> :\r\n                            <div style={{display: 'flex'}}>\r\n                                <Button\r\n                                    onClick={async () => {\r\n                                        setLoading(true);\r\n                                        if (executing) {\r\n                                            await reservaDAO.executaReserva(props.agendamentoSelected._id);\r\n                                            await updateAgendamentos();\r\n                                            alert('Execução Finalizada com Sucesso!');\r\n                                        } else {\r\n                                            await reservaDAO.comecaReserva(props.agendamentoSelected._id);\r\n                                            await updateAgendamentos();\r\n                                        }\r\n                                        setLoading(false);\r\n                                    }}\r\n                                    type={'button'}\r\n                                    text={'execucao_inicio' in props.agendamentoSelected ?\r\n                                        'Finalizar' : 'Iniciar'\r\n                                    }\r\n                                    loading={loading}\r\n                                    width={'30%'}/> &nbsp; &nbsp;\r\n                                <Button text={'Cancelar Reserva'}\r\n                                        width={'45%'}\r\n                                        onClick={async () => {\r\n                                            if (window.confirm('Tem certeza que deseja cancelar a reserva?')) {\r\n                                                await reservaDAO.cancelaReserva(props.agendamentoSelected._id)\r\n                                                props.close()\r\n                                            }\r\n                                        }}/>\r\n                            </div>\r\n                    }\r\n                </h3>\r\n                <h2>Pagamento</h2>\r\n                <h3>\r\n                    {pago ? 'Reserva já foi paga.' : 'Reserva ainda não foi paga.'} <br/><br/>\r\n                    {pago ? <></>\r\n                        : <Button\r\n                            onClick={async () => {\r\n                                setLoading(true);\r\n                                await reservaDAO.pagaReserva(props.agendamentoSelected._id, true);\r\n                                await updateAgendamentos();\r\n                                setLoading(false);\r\n                            }}\r\n                            loading={loading}\r\n                            type={'button'}\r\n                            text={'Pagar'}\r\n                            width={'45%'}/>}\r\n                    {pago ?\r\n                        <Button onClick={async () => {\r\n                            setLoading(true);\r\n                            await reservaDAO.pagaReserva(props.agendamentoSelected._id, false)\r\n                            await updateAgendamentos();\r\n                            setLoading(false)\r\n                        }} text={'Desfazer'}\r\n                                width={'45%'}/> : <></>}\r\n                </h3>\r\n            </div>}\r\n            footer={\r\n                <div className={'footer footer_edit_agendamento'}>\r\n                    {'sala' in props.agendamentoSelected ?\r\n                        <div className={'flex crud_ops'}>\r\n                            <Button text={'Cancelar'} type={'button'} onClick={async () => {\r\n                            }}/>\r\n                            <Button className={'submit'} loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                        </div> : <></>}\r\n                </div>\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    agendamentoSelected: state.agendamentos.agendamentoSelected,\r\n    dateSelected: state.general.dateSelected,\r\n    mongoClient: state.general.mongoClient,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAgendamentos: agnds => dispatch({type: Actions.setAgendamentos, payload: agnds}),\r\n    selectAgendamentos: agnd => dispatch({type: Actions.selectAgendamentos, payload: agnd}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditAgendamento);\r\n","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CalendarAgendamentos from \"../../../assets/component/calendar_agendamentos/CalendarAgendamentos\";\r\nimport './agendamentos.sass';\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalAgendamentoAdm\r\n    from \"../../../assets/component/modals/administrativo/modal_new_agendamento_adm/modal_new_agendamento_adm.jsx\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport reservaDAO from \"../../../DAO/reservaDAO\";\r\nimport logDAO from \"../../../DAO/logDAO\";\r\nimport {Redirect, useHistory} from \"react-router\";\r\nimport ModalEditAgendamento from \"../../../assets/component/modals/administrativo/modal_edit_agendamento/EditAgendamento\";\r\n\r\nconst AgendamentosAdministrador = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    const watcher = async () => {\r\n        const stream = await props.database.collection('reservas').watch()\r\n\r\n        stream.onNext((change) => {\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n            });\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.database) {\r\n            watcher().then(() => console.log('connection established'))\r\n        }\r\n    }, [props.database])\r\n\r\n    React.useEffect(() => {\r\n        if (clienteDAO.db) {\r\n            if ('ocupacao' in props.userLogged) {\r\n                hist.push('/');\r\n            }\r\n            clienteDAO.findAll().then(res => {\r\n                props.setProfissionais(res);\r\n            });\r\n            salaDAO.findAll().then(res => {\r\n                let array = res.sort((a,b) => {\r\n                    let [first, second] = [ a.nome.split(' '), b.nome.split(' ') ]\r\n                    if (+first[1] > +second[1]) { return 1 }\r\n                    if (+first[1] < +second[1]) { return -1 }\r\n                    else return 0\r\n                })\r\n                props.setSalas(array);\r\n            });\r\n            reservaDAO.findAll(props.client).then(res => {\r\n                props.setAgendamentos(res);\r\n            });\r\n            logDAO.findAll().then(res => {\r\n                props.setLogs(res);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    return ('nome' in props.userLogged) ?\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'agendamento_adm'} />\r\n            <div className={'container_salas'}>\r\n                <ModalAgendamentoAdm\r\n                    close={() => props.closeModal()}\r\n                    show={props.showModal &&\r\n                    props.modalType === ModalTypes.adicionarAgendamentoAdm}\r\n                />\r\n                <ModalEditAgendamento\r\n                    close={() => props.closeModal()}\r\n                    show={props.showModal &&\r\n                    props.modalType === ModalTypes.editarAgendamento}\r\n                />\r\n                <CalendarAgendamentos/>\r\n            </div>\r\n        </div> : <Redirect to={'/'} />\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    database: state.general.database,\r\n    userLogged: state.general.userLogged,\r\n    client: state.general.mongoClient,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setProfissionais: prof => dispatch({type: Actions.setProfissionais, payload: prof}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas}),\r\n    setAgendamentos: agendamentos => dispatch({type: Actions.setAgendamentos, payload: agendamentos}),\r\n    setLogs: logs => dispatch({type: Actions.setLogs, payload: logs}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AgendamentosAdministrador);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport \"./dash.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport moment from \"moment\";\r\n\r\nconst DashboardPage = props => {\r\n    const [agendamentosPendentes, setAgendamentosPendentes] = React.useState([]);\r\n    const [agendamentosNaoCancelados, setAgendamentosNaoCancelados] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let agendamentos_nao_cancelados = []\r\n        for (let i = 0; i < props.agendamentos.length;i++) {\r\n            if(!props.agendamentos[i].cancelado && props.agendamentos[i].executado){\r\n                agendamentos_nao_cancelados.push(props.agendamentos[i]);\r\n            }\r\n        }\r\n        setAgendamentosPendentes(agendamentos_nao_cancelados)\r\n    }, [props])\r\n\r\n    const [agendamentosCancelados, setAgendamentosCancelados] = React.useState([]);\r\n    React.useEffect(() => {\r\n        let agendamentosCancelados = []\r\n        for (let i = 0; i < props.agendamentos.length;i++) {\r\n            if(props.agendamentos[i].cancelado){\r\n                agendamentosCancelados.push(props.agendamentos[i]);\r\n            }\r\n        }\r\n        setAgendamentosCancelados(agendamentosCancelados);\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n\r\n        setAgendamentosNaoCancelados(props.agendamentos.filter(value => !value.cancelado));\r\n        //Cria array com datas\r\n        let array = [];\r\n        let date = moment(\"2020/03/01\", \"YYYY/MM/DD\");\r\n        while (!moment(new Date()).isSame(date, 'day')) {\r\n            array.push({date: date.toDate(), value: 0});\r\n            date.add(1, 'day');\r\n        }\r\n\r\n        //Cria Frequency Table\r\n        let tabelaFreq = {};\r\n        props.agendamentos.forEach(agendamento => {\r\n            if (moment(new Date(agendamento.data)).format('DD/MM/YYYY') in tabelaFreq) {\r\n                tabelaFreq[moment(new Date(agendamento.data)).format('DD/MM/YYYY')] += 1;\r\n            } else {\r\n                tabelaFreq[moment(new Date(agendamento.data)).format('DD/MM/YYYY')] = 0;\r\n            }\r\n        });\r\n\r\n        //Criar o objeto de verdade {date: moment().toDate(), value: quantidadeDeAgendamentosDoDia }\r\n        Object.keys(tabelaFreq).forEach(key => {\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (moment(array[i].date).isSame(moment(key, 'DD/MM/YYYY'), 'day')) {\r\n                    array[i].value = tabelaFreq[key];\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        let chart = am4core.create('chart_agendamentos', am4charts.XYChart);\r\n\r\n        chart.paddingRight = 20;\r\n\r\n        chart.data = array;\r\n\r\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n\r\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = chart.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n\r\n        series.tooltipText = \"{valueY.value}\";\r\n        chart.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        chart.scrollbarX = scrollbarX;\r\n    }, []);\r\n\r\n\r\n    return (('nome' in props.userLogged) ? (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'dashboard'}/>\r\n            <div className={'indicators_container'}>\r\n                <div>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                    <h2>{agendamentosPendentes.length} reservas no mês</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>{agendamentosCancelados.length} reservas canceladas</h2>\r\n                    <h5>5,25% <i className={'fa fa-arrow-up'}/> &nbsp; que no mês anterior</h5>\r\n                </div>\r\n            </div>\r\n            <div className={'bottom_column'}>\r\n                <div className={'agendamentos_chart_container'}>\r\n                    <h2>Agendamentos</h2>\r\n                    <div id={'chart_agendamentos'}/>\r\n                </div>\r\n                <div className={'quickdetails_container'}>\r\n                    <h2>Informações</h2>\r\n                    <h3>{props.profissionais.length} Novos Profissionais</h3>\r\n                    <h3>{props.agendamentos.length} agendamentos</h3>\r\n                    <h3>{props.profissionais.length + props.administradores.length} usuários cadastrados</h3>\r\n                    <h3>{agendamentosPendentes.length} agendamentos até o momento</h3>\r\n                    <h3>5 pacientes para profissionais</h3>\r\n                    <h3>{agendamentosCancelados.length} cancelamentos</h3>\r\n                </div>\r\n            </div>\r\n        </div>) : <Redirect to={'/'} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profissionais: state.profissionais.profissionais,\r\n    agendamentos: state.agendamentos.agendamentos,\r\n    userLogged: state.general.userLogged,\r\n    administradores: state.administradores.administradores\r\n});\r\n\r\nexport default connect(mapStateToProps)(DashboardPage);\r\n","import React from 'react';\r\nimport \"./styles.sass\";\r\nimport moment from \"moment/min/moment-with-locales.min\";\r\n\r\nconst CardLog = props => {\r\n    return (\r\n        <div className={'card_log'}>\r\n            <img\r\n                alt={'Profile_pic'}\r\n                className={'profile_pic'} src={props.log.usuario.foto_url}/>\r\n            <div>\r\n                <h3>{props.log.usuario.nome}</h3>\r\n                <h1>{props.log.log}</h1>\r\n            </div>\r\n            <div>\r\n                <h4>{moment(new Date(props.log.data_hora)).locale('pt-BR').format(' DD/MM/YYYY HH:mm')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardLog;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardLog from \"../../../assets/component/card_log/cardLog\";\r\nimport \"./logs.sass\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst LogsPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    if ('ocupacao' in props.userLogged) {\r\n        hist.push('/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'logs'} />\r\n            <div className={'logs'}>\r\n                {\r\n                    (props.logs.length === 0) ?\r\n                        (<h2 style={{color: '#888'}}>Ainda não há logs para exibir.</h2>) :\r\n                        props.logs.map(log => (\r\n                            <CardLog log={log}/>\r\n                        ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    logs: state.logs.logs,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLogs: logs => dispatch({type: Actions.setLogs, payload: logs}),\r\n});\r\n\r\nexport default connect(mapStateToProps)(LogsPage);\r\n","import React from 'react';\r\nimport './styles.sass';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../button/button\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardProfissional = props => {\r\n    return (\r\n        <div className={'card_profissional'}>\r\n            <img\r\n                alt={'profissional_pic'}\r\n                src={props.profissional.foto_url}/>\r\n            <h2>{props.profissional.nome}</h2>\r\n            <h3>{props.profissional.ocupacao}</h3>\r\n            <Button text={'Informações'} onClick={ () => {\r\n                props.selectProfissional(props.profissional);\r\n                props.openModal(ModalTypes.adicionarProfissional);\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardProfissional.propTypes = {\r\n    profissional: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectProfissional: prof => dispatch({type: Actions.selectProfissional, payload: prof}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardProfissional);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Fab.sass\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\n\r\nconst Fab = props => {\r\n    return (\r\n        <div className={props.open ? 'Fab open' : 'Fab'} onClick={() => {\r\n            props.onClick(props.open);\r\n            props.selectAdministrador();\r\n        } }>\r\n            <i className={'fa fa-plus'} />\r\n        </div>\r\n    );\r\n}\r\n\r\nFab.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectAdministrador: () => dispatch({type: Actions.selectAdministrador, payload: {}})\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Fab);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./FileInput.sass\";\r\nimport InputText from \"../inputText/input\";\r\n\r\nconst FileInput = props => {\r\n\r\n    const url = 'https://teste.integracps.com.br/uploads/';\r\n\r\n    let realUploadButton = React.createRef();\r\n    const [fileName, setFileName] = React.useState('Nenhum arquivo selecionado.');\r\n    const [fileURL, setFileURL] = React.useState('');\r\n    const onChange = e => {\r\n        // Verifica se é URL ou Arquivo\r\n        if (e.target.files) {\r\n            if (e.target.files[0]) {\r\n                setFileName(e.target.files[0].name);\r\n                setFileURL(URL.createObjectURL(e.target.files[0]))\r\n                props.onChangeFile(e.target.files[0], url + e.target.files[0].name);\r\n            } else {\r\n                setFileURL('');\r\n                setFileName('Nenhum arquivo selecionado.');\r\n            }\r\n        } else {\r\n            props.onChangeFile(null, e.target.value);\r\n            setFileURL(e.target.value);\r\n        }\r\n    }\r\n\r\n    const [isURL, setURL] = React.useState(false);\r\n\r\n    return (\r\n        <div className={'preview_input_container'}>\r\n            <div className={'file_input_container'}>\r\n                <img\r\n                    alt={'Preview'}\r\n                    src={fileURL === '' ? require('../../preview.jpg') : fileURL}/>\r\n                <input type={'file'}\r\n                       name={props.fileName}\r\n                       id={'real_file'}\r\n                       onChange={onChange}\r\n                       hidden\r\n                       accept={'image/png, image/jpeg, image/jpg, image/gif'}\r\n                       ref={realUploadButton}/>\r\n                <div className={'buttons'}>\r\n                    <button\r\n                        disabled={isURL}\r\n                        onClick={() => setURL(true)}\r\n                        className={isURL ? 'button_secondary selected' : 'button_secondary'}>\r\n                        URL\r\n                    </button>\r\n                    <button disabled={!isURL}\r\n                            onClick={() => setURL(false)}\r\n                            className={!isURL ? 'button_secondary selected' : 'button_secondary'}>\r\n                        Arquivo\r\n                    </button>\r\n                </div>\r\n                <div className={'arquivo_upload'} style={!isURL ? {} : {display: 'none'}}>\r\n                    <button type={'button'} onClick={() => {\r\n                        realUploadButton.current.click();\r\n                    }}>\r\n                        <i className={'fa fa-upload'}/>\r\n                    </button>\r\n                    <span>{fileName}</span>\r\n                </div>\r\n                <InputText\r\n                    name={props.urlName}\r\n                    style={!isURL ? {display: 'none'} : {width: '100%'}}\r\n                    label={'URL da foto'}\r\n                    onChange={onChange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFileInput.propTypes = {\r\n    onChangeFile: PropTypes.func,\r\n    data: PropTypes.any,\r\n    setData: PropTypes.func,\r\n    fileName: PropTypes.string.isRequired,\r\n    urlName: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default FileInput;","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./modal_new_profissional.sass\";\r\nimport clienteDAO from \"../../../../../DAO/clienteDAO\";\r\nimport {connect} from \"react-redux\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport {post} from 'axios';\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalNewProfissional = ({\r\n                                  show,\r\n                                  close,\r\n                                  mongoClient,\r\n                                  closeModal,\r\n                                  setProfissionais,\r\n                                  profissionalSelected,\r\n                                  selectProfissional,\r\n                              }) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newProfissional = async form => {\r\n        if (fileURL === '') {\r\n            try {\r\n                await clienteDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                    nome: form.nome.value,\r\n                    telefone: form.telefone.value,\r\n                    ocupacao: form.ocupacao.value,\r\n                    descricao: form.descricao.value,\r\n                    foto_url: 'https://jsl-online.com/wp-content/uploads/2017/01/placeholder-user.png',\r\n                    email: form.email.value,\r\n                });\r\n                setProfissionais(await clienteDAO.findAll());\r\n                alert('Profissional Adicionado com Sucesso!')\r\n            } catch(e) {\r\n                alert(e)\r\n            }\r\n        } else {\r\n            if (checkIfURLIsImage(fileURL)) {\r\n                try {\r\n                    await fileUpload(file);\r\n                    await clienteDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                        nome: form.nome.value,\r\n                        telefone: form.telefone.value,\r\n                        ocupacao: form.ocupacao.value,\r\n                        descricao: form.descricao.value,\r\n                        foto_url: fileURL,\r\n                        email: form.email.value,\r\n                    });\r\n                    setProfissionais(await clienteDAO.findAll());\r\n                    alert('Profissional Adicionado com Sucesso!')\r\n                } catch (err) {\r\n                    alert(err);\r\n                }\r\n            } else {\r\n                alert('Informe uma imagem válida acima. Caso não queira adicionar uma imagem, deixe o campo em branco.');\r\n            }\r\n        }\r\n    }\r\n\r\n    const editProfissional = async form => {\r\n        try {\r\n            await clienteDAO.update({_id: profissionalSelected._id}, {\r\n                nome: form.nome.value,\r\n                telefone: form.telefone.value,\r\n                ocupacao: form.ocupacao.value,\r\n                descricao: form.descricao.value,\r\n                email: form.email.value,\r\n            });\r\n            const profs = await clienteDAO.findAll();\r\n            setProfissionais(profs);\r\n            selectProfissional();\r\n            alert('Profissional editado com Sucesso!')\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    const removeProfissional = async () => {\r\n        try {\r\n            await clienteDAO.delete({_id: profissionalSelected._id})\r\n            const profs = await clienteDAO.findAll();\r\n            setProfissionais(profs);\r\n            alert('Profissional removido com sucesso');\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const form = e.target;\r\n        if (!editing) {\r\n            if (form.senha.value !== form.confirmar_senha.value) {\r\n                alert('Confirmação de senha não é igual a senha definida.')\r\n            } else if (form.senha.value.length < 6 && form.senha.value.length > 128) {\r\n                alert('A senha necessita conter entre 6 e 128 caracteres.')\r\n            } else {\r\n                await newProfissional(form);\r\n                selectProfissional();\r\n                setEditing(false);\r\n                form.reset();\r\n                closeModal();\r\n            }\r\n        } else {\r\n            await editProfissional(form);\r\n            selectProfissional();\r\n            setEditing(false);\r\n            form.reset();\r\n            closeModal();\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={onSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>{'nome' in profissionalSelected ? 'Informações do Profissional' : 'Adicionar Profissional'}</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={() => {\r\n                             close();\r\n                             selectProfissional();\r\n                             setEditing(false);\r\n                         }}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <FileInput\r\n                             onChangeFile={(file, url) => {\r\n                                 setFile(file);\r\n                                 setFileURL(url);\r\n                             }}\r\n                             urlName={'foto_url'}\r\n                             fileName={'userfile'}/>\r\n                         <InputText\r\n                             disabled={'nome' in profissionalSelected && !editing}\r\n                             defaultValue={profissionalSelected.nome}\r\n                             required={true}\r\n                             name={'nome'} label={'Nome'}/>\r\n                         <div className={'flex'}>\r\n                             <InputText\r\n                                 disabled={'nome' in profissionalSelected && !editing}\r\n                                 defaultValue={profissionalSelected.telefone}\r\n                                 required={true}\r\n                                 name={'telefone'}\r\n                                 label={'Telefone'}/>\r\n                             <InputText\r\n                                 disabled={'nome' in profissionalSelected && !editing}\r\n                                 defaultValue={profissionalSelected.ocupacao}\r\n                                 name={'ocupacao'}\r\n                                 label={'Ocupação'}/>\r\n                         </div>\r\n                         <InputText\r\n                             required={true}\r\n                             disabled={'nome' in profissionalSelected && !editing}\r\n                             defaultValue={profissionalSelected.descricao}\r\n                             name={'descricao'} label={'Descrição'}/>\r\n                         <InputText name={'email'}\r\n                                    required={true}\r\n                                    disabled={'nome' in profissionalSelected && !editing}\r\n                                    defaultValue={profissionalSelected.email}\r\n                                    label={'Email'}\r\n                                    placeholder={'E-mail utilizado para Login'}/>\r\n                         {\r\n                             'email' in profissionalSelected ? <></> :\r\n                                 (\r\n                                     <div className={'flex'}>\r\n                                         <InputText label={'Senha'} name={'senha'} type={'password'} required={true} />\r\n                                         <InputText name={'confirmar_senha'} label={'Confirmar Senha'} type={'password'} required={true}/>\r\n                                     </div>)\r\n                         }\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             {'nome' in profissionalSelected ?\r\n                                 <div className={'flex crud_ops'}>\r\n                                     <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                                         if (window.confirm(\"Tem certeza que deseja apagar esse profissional do sistema?\")) {\r\n                                             await removeProfissional();\r\n                                             closeModal();\r\n                                             selectProfissional()\r\n                                             setEditing(false);\r\n                                         }\r\n                                     }}/>\r\n                                     <Button editing={editing}\r\n                                             onClick={() => setEditing(true)}\r\n                                             text={'Editar'}\r\n                                             type={'button'}/>\r\n                                 </div> : <></>}\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    profissionalSelected: state.profissionais.profissionalSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setProfissionais: profs => dispatch({type: Actions.setProfissionais, payload: profs}),\r\n    selectProfissional: () => dispatch({type: Actions.selectProfissional, payload: {}}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewProfissional);\r\n","import React from 'react';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardProfissional from \"../../../assets/component/card_profissional/cardProfissional\";\r\nimport \"./profissionais.sass\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalNewProfissional\r\n    from \"../../../assets/component/modals/administrativo/modal_new_profissional/modal_new_profissional\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport clienteDAO from \"../../../DAO/clienteDAO\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ProfissionaisPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n\r\n        if ('ocupacao' in props.userLogged) {\r\n            hist.push('/');\r\n        }\r\n\r\n        if (clienteDAO.db) {\r\n            clienteDAO.findAll().then(res => {\r\n                props.setProfissionais(res);\r\n            })\r\n        }\r\n    }, [props.client]);\r\n    \r\n    return (\r\n        <div>\r\n            <ModalNewProfissional\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarProfissional}/>\r\n            <AdministradorTopbar pageSelected={'profissionais'}/>\r\n            <div className={'profissionais_container'}>\r\n                {\r\n                    props.profissionais.map(profissional => (\r\n                        <CardProfissional profissional={profissional}/>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Fab onClick={() => { props.openModal(ModalTypes.adicionarProfissional)}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    profissionais: state.profissionais.profissionais,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    setProfissionais: profs => dispatch({type: Actions.setProfissionais, payload: profs}),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfissionaisPage);","import React from 'react';\r\nimport Button from \"../button/button\";\r\nimport \"./styles.sass\";\r\nimport PropTypes from 'prop-types';\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardAdministrativo = props => {\r\n    return (\r\n        <div className={'card_administrativo'}>\r\n            <img\r\n                alt={'administrativo_pic'}\r\n                src={props.administrador.foto_url}/>\r\n            <h2>{props.administrador.nome}</h2>\r\n            <Button text={'Informações'} onClick={() => {\r\n                props.selectAdministrador(props.administrador);\r\n                props.openModal(ModalTypes.adicionarAdministrador);\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardAdministrativo.propTypes = {\r\n    administrador: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectAdministrador: adm => dispatch({type: Actions.selectAdministrador, payload: adm}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardAdministrativo);","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./modal_new_administrativo.sass\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {post} from 'axios';\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\nimport administradorDAO from \"../../../../../DAO/administradorDAO\";\r\n\r\nconst ModalNewAdministrativo = ({\r\n                                    show,\r\n                                    close,\r\n                                    mongoClient,\r\n                                    closeModal,\r\n                                    administradorSelected = {},\r\n                                    setAdministrativo,\r\n                                    unselectAdministrativo\r\n                                }) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n    const [editing, setEditing] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setEditing(false);\r\n    }, []);\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newAdministrativo = async form => {\r\n        try {\r\n        if (fileURL === '') {\r\n            await administradorDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                nome: form.nome.value,\r\n                foto_url: 'https://jsl-online.com/wp-content/uploads/2017/01/placeholder-user.png',\r\n                email: form.email.value,\r\n            });\r\n            alert('Administrador adicionado com Sucesso!');\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            closeModal();\r\n        } else {\r\n            if (checkIfURLIsImage(fileURL)) {\r\n                try {\r\n                    await fileUpload(file);\r\n                    await administradorDAO.addUser(mongoClient, form.email.value, form.senha.value, {\r\n                        nome: form.nome.value,\r\n                        foto_url: fileURL,\r\n                        email: form.email.value,\r\n                    });\r\n                    checkIfURLIsImage(fileURL);\r\n                    alert('Administrador adicionado com Sucesso!');\r\n                    const adms = await administradorDAO.findAll();\r\n                    setAdministrativo(adms);\r\n                    closeModal();\r\n                } catch (err) {\r\n                    alert(err);\r\n                }\r\n            }\r\n        }\r\n        } catch(e) {\r\n            setLoading(false)\r\n            alert(e)\r\n        }\r\n    };\r\n\r\n    const editAdministrativo = async form => {\r\n        try {\r\n            await administradorDAO.update({_id: administradorSelected._id}, {\r\n                nome: form.nome.value,\r\n                email: form.email.value,\r\n            });\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            alert('Administrador editado com Sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const removeAdministrativo = async () => {\r\n        try {\r\n            await administradorDAO.delete({_id: administradorSelected._id});\r\n            const adms = await administradorDAO.findAll();\r\n            setAdministrativo(adms);\r\n            alert('Administrador deletado com Sucesso!');\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        const form = e.target;\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!editing) {\r\n            await newAdministrativo(form);\r\n        } else {\r\n            await editAdministrativo(form);\r\n        }\r\n        unselectAdministrativo();\r\n        setEditing(false);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <ModalParent\r\n            onSubmit={onSubmit}\r\n            show={show}\r\n            header={<header>\r\n                <div>\r\n                    <h1>{'nome' in administradorSelected ? 'Informações do Administrador' : 'Adicionar Administrativo'}</h1>\r\n                </div>\r\n                <div className={'close_container'} onClick={() => {\r\n                    close();\r\n                    setEditing(false);\r\n                    unselectAdministrativo();\r\n                }}>\r\n                    <i className={'fa fa-times'}/>\r\n                </div>\r\n            </header>}\r\n            body={<div>\r\n                <FileInput\r\n                    onChangeFile={(file, url) => {\r\n                        setFile(file);\r\n                        setFileURL(url);\r\n                    }}\r\n                    urlName={'foto_url'}\r\n                    fileName={'userfile'}/>\r\n                <InputText\r\n                    defaultValue={administradorSelected.nome}\r\n                    disabled={'nome' in administradorSelected && !editing}\r\n                    label={'Nome'}\r\n                    name={'nome'}/>\r\n                <InputText\r\n                    defaultValue={administradorSelected.email}\r\n                    disabled={'nome' in administradorSelected && !editing}\r\n                    label={'Login'}\r\n                    name={'email'}/>\r\n                {\r\n                    'email' in administradorSelected ? <></> :\r\n                        (\r\n                            <div className={'flex'}>\r\n                                <InputText label={'Senha'} type={'password'} name={'senha'}/>\r\n                                <InputText label={'Confirmar Senha'} type={'password'}/>\r\n                            </div>)\r\n                }\r\n\r\n            </div>}\r\n            footer={\r\n                <div className={'footer'}>\r\n                    {'nome' in administradorSelected ?\r\n                        <div className={'flex crud_ops'}>\r\n                            <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                            if (window.confirm(\"Tem certeza que deseja apagar esse administrador do sistema?\")) {\r\n                                await removeAdministrativo();\r\n                                closeModal();\r\n                                setEditing(false);\r\n                            }\r\n                        }}/>\r\n                            <Button editing={editing}\r\n                                    onClick={() => setEditing(true)}\r\n                                    text={'Editar'}\r\n                                    type={'button'}/>\r\n                        </div> : <></>}\r\n                    <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                </div>}/>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    administradorSelected: state.administradores.administradorSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAdministrativo: adms => dispatch({type: Actions.setAdministrativo, payload: adms}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    unselectAdministrativo: () => dispatch({type: Actions.selectAdministrador, payload: {}})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewAdministrativo)\r\n","import React from 'react';\r\nimport './admin.sass';\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport CardAdministrativo from \"../../../assets/component/card_administrativo/cardAdministrativo\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport ModalNewAdministrativo\r\n    from \"../../../assets/component/modals/administrativo/modal_new_administrativo/modal_new_administrativo\";\r\nimport {connect} from \"react-redux\";\r\nimport administradorDAO from \"../../../DAO/administradorDAO\";\r\nimport {Redirect, useHistory} from \"react-router\";\r\n\r\nconst AdministrativoPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        if (administradorDAO.db) {\r\n            administradorDAO.findAll().then(adms => {\r\n                props.setAdministrativo(adms);\r\n            });\r\n        }\r\n        if ('ocupacao' in props.userLogged) {\r\n            hist.push('/');\r\n        }\r\n    }, [props.client]);\r\n\r\n    return ('nome' in props.userLogged) ? (\r\n        <div>\r\n            <ModalNewAdministrativo\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarAdministrador}\r\n            />\r\n            <AdministradorTopbar pageSelected={'administrativo'}/>\r\n            <div className={'container_adms'}>\r\n                {\r\n                    props.administradores.map((adm, index) => (\r\n                        <CardAdministrativo key={index}  administrador={adm} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <Fab onClick={() => {\r\n                props.openModal(ModalTypes.adicionarAdministrador);\r\n            }} />\r\n        </div>\r\n    ) : <Redirect to={'/'} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    client: state.general.mongoClient,\r\n    userLogged: state.general.userLogged,\r\n    administradores: state.administradores.administradores,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setAdministrativo: adms => dispatch({type: Actions.setAdministrativo, payload: adms})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministrativoPage);\r\n","import React from 'react';\r\nimport './styles.sass';\r\nimport Button from \"../button/button\";\r\nimport PropTypes from 'prop-types';\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ModalTypes from \"../../modal_types\";\r\n\r\nconst CardSala = props => {\r\n    return (\r\n        <div className={'card_sala'}>\r\n            <img\r\n                alt={'sala'}\r\n                src={props.sala.fotos[0]}/>\r\n            <div>\r\n                <h2>{props.sala.nome}</h2>\r\n                <Button\r\n                    onClick={() => {\r\n                        props.openModal(ModalTypes.adicionarSalas);\r\n                        props.selectSala(props.sala);\r\n                    }}\r\n                    text={'Informações'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardSala.propTypes = {\r\n    sala: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: type => dispatch({type: Actions.showModal, payload: type}),\r\n    selectSala: sala => dispatch({type: Actions.selectSala, payload: sala}),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardSala);","import React from 'react';\r\nimport ModalParent from \"../../modal_parent/modal\";\r\nimport FileInput from \"../../../file_input/FileInput\";\r\nimport InputText from \"../../../inputText/input\";\r\nimport Button from \"../../../button/button\";\r\nimport Actions from \"../../../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport salaDAO from \"../../../../../DAO/salaDAO\";\r\nimport {post} from \"axios\";\r\nimport {checkIfURLIsImage} from \"../../../../AuxFunctions\";\r\n\r\nconst ModalNewSalas = ({show, closeModal, mongoClient, close, salaSelected, unselectSala}) => {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n    const [editing, setEditing] = React.useState(false);\r\n    const [fileURL, setFileURL] = React.useState('');\r\n\r\n    const fileUpload = async (file) => {\r\n        const url = 'https://teste.integracps.com.br/imageUpload.php';\r\n        const formData = new FormData();\r\n        formData.append('userfile', file);\r\n        const config = {headers: {'content-type': 'multipart/form-data'}};\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    const newSala = async form => {\r\n        if (checkIfURLIsImage(fileURL)) {\r\n            try {\r\n                await fileUpload(file);\r\n                await salaDAO.create({\r\n                    nome: form.nome.value,\r\n                    descricao: form.descricao.value,\r\n                    valor_hora: Number(form.valor_hora.value),\r\n                    fotos: [fileURL],\r\n                });\r\n                alert('Sala adicionada com Sucesso!');\r\n                closeModal();\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const editSala = async form => {\r\n        try {\r\n            await salaDAO.update({_id: salaSelected._id}, {\r\n                nome: form.nome.value,\r\n                descricao: form.descricao.value,\r\n                valor_hora: Number(form.valor_hora.value),\r\n            });\r\n            alert('Sala editada com sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const removeSala = async () => {\r\n        try {\r\n            await salaDAO.delete({_id: salaSelected._id});\r\n            alert('Sala removida com sucesso!');\r\n            closeModal();\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        unselectSala();\r\n        setLoading(false);\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        setLoading(true);\r\n        if (!editing) {\r\n            await newSala(form);\r\n        } else {\r\n            await editSala(form);\r\n        }\r\n        unselectSala();\r\n        setEditing(false);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <ModalParent show={show}\r\n                     onSubmit={onSubmit}\r\n                     header={<header>\r\n                         <div>\r\n                             <h1>{'nome' in salaSelected ? 'Informações da Sala' : 'Adicionar Sala'}</h1>\r\n                         </div>\r\n                         <div className={'close_container'} onClick={() => {\r\n                             close();\r\n                             unselectSala();\r\n                             setEditing(false);\r\n                         }}>\r\n                             <i className={'fa fa-times'}/>\r\n                         </div>\r\n                     </header>}\r\n                     body={<div>\r\n                         <FileInput onChangeFile={(file, url) => {\r\n                             setFile(file);\r\n                             setFileURL(url);\r\n                         }} fileName={'userfile'} urlName={'file_url'} />\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.nome}\r\n                             label={\"Nome\"} name={'nome'} required/>\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.descricao}\r\n                             label={\"Descrição\"} name={'descricao'} required />\r\n                         <InputText\r\n                             disabled={'nome' in salaSelected && !editing}\r\n                             defaultValue={salaSelected.valor_hora}\r\n                             label={'Valor da Hora'} name={'valor_hora'} type={'number'} required />\r\n                     </div>}\r\n                     footer={\r\n                         <div className={'footer'}>\r\n                             {'nome' in salaSelected ?\r\n                                 <div className={'flex crud_ops'}>\r\n                                     <Button text={'Remover'} type={'button'} onClick={async () => {\r\n                                         if (window.confirm(\"Tem certeza que deseja apagar essa sala do sistema?\")) {\r\n                                             await removeSala();\r\n                                             closeModal();\r\n                                             setEditing(false);\r\n                                         }\r\n                                     }}/>\r\n                                     <Button editing={editing}\r\n                                             onClick={() => setEditing(true)}\r\n                                             text={'Editar'}\r\n                                             type={'button'}/>\r\n                                 </div> : <></>}\r\n                             <Button loading={loading} type={'submit'} text={'Confirmar'}/>\r\n                         </div>}/>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient,\r\n    salaSelected: state.salas.salaSelected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    unselectSala: () => dispatch({type: Actions.selectSala, payload: {}})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalNewSalas)","import React from 'react';\r\nimport \"./salas.sass\";\r\nimport AdministradorTopbar from \"../../../assets/component/adm_topbar/adm_topbar\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport CardSala from \"../../../assets/component/card_sala/cardSala\";\r\nimport Fab from \"../../../assets/component/Fab/Fab\";\r\nimport ModalNewSalas from \"../../../assets/component/modals/administrativo/modal_new_salas/modal_new_salas\";\r\nimport ModalTypes from \"../../../assets/modal_types\";\r\nimport Actions from \"../../../redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport salaDAO from \"../../../DAO/salaDAO\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst SalasPage = props => {\r\n\r\n    const hist = useHistory();\r\n\r\n    if ('ocupacao' in props.userLogged) {\r\n        hist.push('/');\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (salaDAO.db) {\r\n            salaDAO.findAll().then(res => {\r\n                props.setSalas(res);\r\n            })\r\n        }\r\n    });\r\n\r\n    const sortSalas = (a,b) => {\r\n        let [first, second] = [a.nome.split(' '), b.nome.split(' ')]\r\n        if (+first[1] > +second[1]) return 1\r\n        if (+first[1] < +second[1]) return -1\r\n        else return 0\r\n    }\r\n\r\n    return ('nome' in props.userLogged) ? (\r\n        <div>\r\n            <AdministradorTopbar pageSelected={'salas'}/>\r\n            <ModalNewSalas\r\n                close={() => props.closeModal()}\r\n                show={props.showModal &&\r\n                props.modalType === ModalTypes.adicionarSalas}\r\n            />\r\n            <div className={'salas_container'}>\r\n                <div className={'header_salas'}>\r\n                    <div>\r\n                        <h1>Salas Cadastradas</h1>\r\n                        <h3>Abaixo seguem as salas possuídas pela Integra</h3>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n                <div className={'salas'}>\r\n                    {\r\n                        props.salas.sort(sortSalas).map((sala, index) => (\r\n                            <CardSala sala={sala} key={index}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Fab onClick={() => props.openModal(ModalTypes.adicionarSalas)}/>\r\n        </div>\r\n    ) : (<Redirect to={'/'} />)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   showModal: state.general.showModal,\r\n    modalType: state.general.modalType,\r\n    salas: state.salas.salas,\r\n    userLogged: state.general.userLogged,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openModal: open => dispatch({type: Actions.showModal, payload: open}),\r\n    closeModal: () => dispatch({type: Actions.closeModal}),\r\n    setSalas: salas => dispatch({type: Actions.setSalas, payload: salas})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalasPage);\r\n","import React from 'react';\r\nimport \"./resetPassword.sass\"\r\nimport {connect} from 'react-redux';\r\nimport InputText from \"../../../assets/component/inputText/input\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport qs from 'qs'\r\nimport {UserPasswordAuthProviderClient} from 'mongodb-stitch-browser-sdk'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ResetPassword = props => {\r\n\r\n    const story = useHistory()\r\n\r\n    const [tokens, setTokens] = React.useState(null)\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const tokens = {\r\n            token: qs.parse(props.location.search, {ignoreQueryPrefix: true}).token,\r\n            tokenId: qs.parse(props.location.search).tokenId,\r\n        }\r\n\r\n        if (!tokens.token) {\r\n            story.push('/')\r\n        }\r\n        setTokens(tokens)\r\n        console.log(tokens)\r\n    }, [])\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        const form = e.target\r\n        const [senha, confSenha] = [form.nova_senha.value, form.conf_senha.value]\r\n        if (senha !== confSenha) {\r\n            alert('As senhas não conferem.')\r\n        } else if (senha.length < 6) {\r\n            alert('Por favor, insira uma senha com mais de 6 caracteres.')\r\n        } else {\r\n            //Passou.\r\n            setLoading(true)\r\n            try {\r\n                const emailPassClient = props.mongoClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory)\r\n                await emailPassClient.resetPassword(tokens.token, tokens.tokenId, senha)\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n return (\r\n    <div className={'reset_password_container'}>\r\n        <img src={require('../../../assets/integra_logo.png')} alt={''}/>\r\n        <form onSubmit={onSubmit}>\r\n            <h1 style={{color: '#888', marginTop: 0}}>Redefinir Senha</h1>\r\n            <InputText label={'Nova Senha'} type={'password'} name={'nova_senha'}/>\r\n            <InputText label={'Confirmar Senha'} type={'password'} name={'conf_senha'}/>\r\n            <Button text={'Confirmar'} type={'submit'} loading={loading} />\r\n        </form>\r\n    </div>\r\n );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mongoClient: state.general.mongoClient\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport \"./Configuracoes.sass\"\r\nimport InputText from \"../../../assets/component/inputText/input\";\r\nimport Button from \"../../../assets/component/button/button\";\r\nimport ClienteTopbar from \"../../../assets/component/cliente_topbar/topbar\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Configuracoes = props => {\r\n    return (\r\n        <div className={'configuracoes_container'}>\r\n            <ClienteTopbar/>\r\n            <div style={{marginTop: 35}}>\r\n                <Link to={'/agendamentos'}><i className={'fas fa-chevron-left'}/> &nbsp; Voltar para Página\r\n                    Inicial</Link>\r\n            </div>\r\n            <div className={'configuracoes_body'}>\r\n                <h2>Alterar Descrição</h2>\r\n                <p>Sua descrição é seu currículo, você pode incluir o que você faz, sua formação acadêmica, e quanto tempo de experiência na área que você atua.</p>\r\n                <p><textarea placeholder={'Sua nova descrição vai aqui.'} style={{width: '50%', height: 150, padding: 15}}/></p>\r\n                <Button text={'Confirmar'} width={'250px'}/>\r\n                <h2>Recuperar Senha</h2>\r\n                <p>Enviaremos um e-mail para seu e-mail cadastrado para redefinir a sua senha.</p>\r\n                <Button text={'Enviar e-mail'} width={'350px'}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Configuracoes);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport \"./tipoUsuario.sass\"\r\nimport {useHistory} from \"react-router\";\r\nimport administradorDAO from \"../../DAO/administradorDAO\";\r\n\r\nconst TipoUsuario = props => {\r\n\r\n    const story = useHistory()\r\n\r\n    const [loading, setLoading] = React.useState(true)\r\n\r\n    const checkAdm = async () => {\r\n        setLoading(true)\r\n        return administradorDAO.find({email: props.userLogged.email})\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        checkAdm().then(res => {\r\n            if (res.length === 0) {\r\n                story.push('/')\r\n            }\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (<div>\r\n            <h1>Carregando...</h1>\r\n        </div>)\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div onClick={() => story.push('/agendamento_adm')}>\r\n                    <h1>Entrar como Administrador</h1>\r\n                </div>\r\n                <div>\r\n                    <h1>Entrar como Profissional</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TipoUsuario);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk';\r\nimport {Provider} from 'react-redux';\r\nimport Store from \"./redux/store\";\r\nimport Actions from \"./redux/actions/actions\";\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport LoginPage from \"./pages/login\";\r\nimport ClienteAgendamentos from \"./pages/cliente/agendamentos\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport MinhasReservasPage from \"./pages/cliente/reservas\";\r\nimport AgendamentosAdministrador from \"./pages/administrador/agendamentos\";\r\nimport DashboardPage from \"./pages/administrador/dashboard\";\r\nimport LogsPage from \"./pages/administrador/logs\";\r\nimport ProfissionaisPage from \"./pages/administrador/profissionais\";\r\nimport AdministrativoPage from \"./pages/administrador/administrativo\";\r\nimport SalasPage from \"./pages/administrador/salas\";\r\nimport clienteDAO from \"./DAO/clienteDAO\";\r\nimport administradorDAO from \"./DAO/administradorDAO\";\r\nimport salaDAO from \"./DAO/salaDAO\";\r\nimport reservaDAO from \"./DAO/reservaDAO\";\r\nimport logDAO from \"./DAO/logDAO\";\r\nimport ResetPassword from \"./pages/login/resetPassword/resetPassword\";\r\nimport Configuracoes from \"./pages/cliente/configuracoes/Configuracoes\";\r\nimport tipoUsuario from \"./pages/login/tipoUsuario\";\r\n\r\nfunction App() {\r\n\r\n    const setDatabaseIntoDAOs = (db) => {\r\n        clienteDAO.setDb(db);\r\n        administradorDAO.setDb(db);\r\n        salaDAO.setDb(db);\r\n        reservaDAO.setDb(db);\r\n        logDAO.setDb(db);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        //Inicializa o Banco de Dados.\r\n        const client = Stitch.initializeDefaultAppClient('integra-rhnuz');\r\n        const db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('Integra');\r\n\r\n        //Coloca ambos dentro da Store.\r\n        Store.dispatch({type: Actions.setMongoClient, payload: client});\r\n        Store.dispatch({type: Actions.setDatabase, payload: db});\r\n\r\n        setDatabaseIntoDAOs(db);\r\n    }, []);\r\n\r\n  return (\r\n      <Provider store={Store}>\r\n          <Router>\r\n              <Route path={'/'} exact={true} component={LoginPage} />\r\n              <Route path={'/agendamentos'} component={ClienteAgendamentos} />\r\n              <Route path={'/minhas_reservas'} component={MinhasReservasPage} />\r\n              <Route path={'/agendamento_adm'} component={AgendamentosAdministrador} />\r\n              <Route path={'/dashboard'} component={DashboardPage} />\r\n              <Route path={'/administrativo'} component={AdministrativoPage} />\r\n              <Route path={'/profissionais'} component={ProfissionaisPage} />\r\n              <Route path={'/tipoUsuario'} component={tipoUsuario} />\r\n              <Route path={'/salas'} component={SalasPage} />\r\n              <Route path={'/configuracoes'} component={Configuracoes} />\r\n              <Route path={'/recuperarSenha'} component={ResetPassword} />\r\n              <Route path={'/logs'} component={LogsPage} />\r\n          </Router>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}